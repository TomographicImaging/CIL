{"version":3,"file":"scripts/pydata-sphinx-theme.js","mappings":"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","sources":["webpack://pydata_sphinx_theme/./src/pydata_sphinx_theme/assets/scripts/mixin.js","webpack://pydata_sphinx_theme/./node_modules/compare-versions/lib/esm/index.js","webpack://pydata_sphinx_theme/./src/pydata_sphinx_theme/assets/scripts/pydata-sphinx-theme.js"],"sourcesContent":["/* define several functions to replace jQuery methods\n * inspired by https://tobiasahlin.com/blog/move-from-jquery-to-vanilla-javascript/\n */\n\n/**\n * Execute a method if DOM has finished loading\n *\n * @param {function} callback the method to execute\n */\nexport function documentReady(callback) {\n  if (document.readyState != \"loading\") callback();\n  else document.addEventListener(\"DOMContentLoaded\", callback);\n}\n","/**\n * Compare [semver](https://semver.org/) version strings to find greater, equal or lesser.\n * This library supports the full semver specification, including comparing versions with different number of digits like `1.0.0`, `1.0`, `1`, and pre-release versions like `1.0.0-alpha`.\n * @param v1 - First version to compare\n * @param v2 - Second version to compare\n * @returns Numeric value compatible with the [Array.sort(fn) interface](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters).\n */\nexport const compareVersions = (v1, v2) => {\n    // validate input and split into segments\n    const n1 = validateAndParse(v1);\n    const n2 = validateAndParse(v2);\n    // pop off the patch\n    const p1 = n1.pop();\n    const p2 = n2.pop();\n    // validate numbers\n    const r = compareSegments(n1, n2);\n    if (r !== 0)\n        return r;\n    // validate pre-release\n    if (p1 && p2) {\n        return compareSegments(p1.split('.'), p2.split('.'));\n    }\n    else if (p1 || p2) {\n        return p1 ? -1 : 1;\n    }\n    return 0;\n};\n/**\n * Validate [semver](https://semver.org/) version strings.\n *\n * @param version Version number to validate\n * @returns `true` if the version number is a valid semver version number, `false` otherwise.\n *\n * @example\n * ```\n * validate('1.0.0-rc.1'); // return true\n * validate('1.0-rc.1'); // return false\n * validate('foo'); // return false\n * ```\n */\nexport const validate = (version) => typeof version === 'string' && /^[v\\d]/.test(version) && semver.test(version);\n/**\n * Compare [semver](https://semver.org/) version strings using the specified operator.\n *\n * @param v1 First version to compare\n * @param v2 Second version to compare\n * @param operator Allowed arithmetic operator to use\n * @returns `true` if the comparison between the firstVersion and the secondVersion satisfies the operator, `false` otherwise.\n *\n * @example\n * ```\n * compare('10.1.8', '10.0.4', '>'); // return true\n * compare('10.0.1', '10.0.1', '='); // return true\n * compare('10.1.1', '10.2.2', '<'); // return true\n * compare('10.1.1', '10.2.2', '<='); // return true\n * compare('10.1.1', '10.2.2', '>='); // return false\n * ```\n */\nexport const compare = (v1, v2, operator) => {\n    // validate input operator\n    assertValidOperator(operator);\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    const res = compareVersions(v1, v2);\n    return operatorResMap[operator].includes(res);\n};\n/**\n * Match [npm semver](https://docs.npmjs.com/cli/v6/using-npm/semver) version range.\n *\n * @param version Version number to match\n * @param range Range pattern for version\n * @returns `true` if the version number is within the range, `false` otherwise.\n *\n * @example\n * ```\n * satisfies('1.1.0', '^1.0.0'); // return true\n * satisfies('1.1.0', '~1.0.0'); // return false\n * ```\n */\nexport const satisfies = (version, range) => {\n    // if no range operator then \"=\"\n    const m = range.match(/^([<>=~^]+)/);\n    const op = m ? m[1] : '=';\n    // if gt/lt/eq then operator compare\n    if (op !== '^' && op !== '~')\n        return compare(version, range, op);\n    // else range of either \"~\" or \"^\" is assumed\n    const [v1, v2, v3, , vp] = validateAndParse(version);\n    const [r1, r2, r3, , rp] = validateAndParse(range);\n    const v = [v1, v2, v3];\n    const r = [r1, r2 !== null && r2 !== void 0 ? r2 : 'x', r3 !== null && r3 !== void 0 ? r3 : 'x'];\n    // validate pre-release\n    if (rp) {\n        if (!vp)\n            return false;\n        if (compareSegments(v, r) !== 0)\n            return false;\n        if (compareSegments(vp.split('.'), rp.split('.')) === -1)\n            return false;\n    }\n    // first non-zero number\n    const nonZero = r.findIndex((v) => v !== '0') + 1;\n    // pointer to where segments can be >=\n    const i = op === '~' ? 2 : nonZero > 1 ? nonZero : 1;\n    // before pointer must be equal\n    if (compareSegments(v.slice(0, i), r.slice(0, i)) !== 0)\n        return false;\n    // after pointer must be >=\n    if (compareSegments(v.slice(i), r.slice(i)) === -1)\n        return false;\n    return true;\n};\nconst semver = /^[v^~<>=]*?(\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+))?(?:-([\\da-z\\-]+(?:\\.[\\da-z\\-]+)*))?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\nconst validateAndParse = (version) => {\n    if (typeof version !== 'string') {\n        throw new TypeError('Invalid argument expected string');\n    }\n    const match = version.match(semver);\n    if (!match) {\n        throw new Error(`Invalid argument not valid semver ('${version}' received)`);\n    }\n    match.shift();\n    return match;\n};\nconst isWildcard = (s) => s === '*' || s === 'x' || s === 'X';\nconst tryParse = (v) => {\n    const n = parseInt(v, 10);\n    return isNaN(n) ? v : n;\n};\nconst forceType = (a, b) => typeof a !== typeof b ? [String(a), String(b)] : [a, b];\nconst compareStrings = (a, b) => {\n    if (isWildcard(a) || isWildcard(b))\n        return 0;\n    const [ap, bp] = forceType(tryParse(a), tryParse(b));\n    if (ap > bp)\n        return 1;\n    if (ap < bp)\n        return -1;\n    return 0;\n};\nconst compareSegments = (a, b) => {\n    for (let i = 0; i < Math.max(a.length, b.length); i++) {\n        const r = compareStrings(a[i] || '0', b[i] || '0');\n        if (r !== 0)\n            return r;\n    }\n    return 0;\n};\nconst operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1],\n};\nconst allowedOperators = Object.keys(operatorResMap);\nconst assertValidOperator = (op) => {\n    if (typeof op !== 'string') {\n        throw new TypeError(`Invalid operator type, expected string but got ${typeof op}`);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n        throw new Error(`Invalid operator, expected one of ${allowedOperators.join('|')}`);\n    }\n};\n//# sourceMappingURL=index.js.map","// Define the custom behavior of the page\nimport { documentReady } from \"./mixin\";\nimport { compare, validate } from \"compare-versions\";\n\nimport \"../styles/pydata-sphinx-theme.scss\";\n\n/*******************************************************************************\n * Theme interaction\n */\n\nvar prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n/**\n * set the the body theme to the one specified by the user browser\n *\n * @param {event} e\n */\nfunction autoTheme(e) {\n  document.documentElement.dataset.theme = prefersDark.matches\n    ? \"dark\"\n    : \"light\";\n}\n\n/**\n * Set the theme using the specified mode.\n * It can be one of [\"auto\", \"dark\", \"light\"]\n *\n * @param {str} mode\n */\nfunction setTheme(mode) {\n  if (mode !== \"light\" && mode !== \"dark\" && mode !== \"auto\") {\n    console.error(`Got invalid theme mode: ${mode}. Resetting to auto.`);\n    mode = \"auto\";\n  }\n\n  // get the theme\n  var colorScheme = prefersDark.matches ? \"dark\" : \"light\";\n  document.documentElement.dataset.mode = mode;\n  var theme = mode == \"auto\" ? colorScheme : mode;\n  document.documentElement.dataset.theme = theme;\n  // TODO: remove this line after Bootstrap upgrade\n  // v5.3 has a colors mode: https://getbootstrap.com/docs/5.3/customize/color-modes/\n  document.querySelectorAll(\".dropdown-menu\").forEach((el) => {\n    if (theme === \"dark\") {\n      el.classList.add(\"dropdown-menu-dark\");\n    } else {\n      el.classList.remove(\"dropdown-menu-dark\");\n    }\n  });\n\n  // save mode and theme\n  localStorage.setItem(\"mode\", mode);\n  localStorage.setItem(\"theme\", theme);\n  console.log(`[PST]: Changed to ${mode} mode using the ${theme} theme.`);\n\n  // add a listener if set on auto\n  prefersDark.onchange = mode == \"auto\" ? autoTheme : \"\";\n}\n\n/**\n * Change the theme option order so that clicking on the btn is always a change\n * from \"auto\"\n */\nfunction cycleMode() {\n  const defaultMode = document.documentElement.dataset.defaultMode || \"auto\";\n  const currentMode = localStorage.getItem(\"mode\") || defaultMode;\n\n  var loopArray = (arr, current) => {\n    var nextPosition = arr.indexOf(current) + 1;\n    if (nextPosition === arr.length) {\n      nextPosition = 0;\n    }\n    return arr[nextPosition];\n  };\n\n  // make sure the next theme after auto is always a change\n  var modeList = prefersDark.matches\n    ? [\"auto\", \"light\", \"dark\"]\n    : [\"auto\", \"dark\", \"light\"];\n  var newMode = loopArray(modeList, currentMode);\n  setTheme(newMode);\n}\n\n/**\n * add the theme listener on the btns of the navbar\n */\nfunction addModeListener() {\n  // the theme was set a first time using the initial mini-script\n  // running setMode will ensure the use of the dark mode if auto is selected\n  setTheme(document.documentElement.dataset.mode);\n\n  // Attach event handlers for toggling themes colors\n  document.querySelectorAll(\".theme-switch-button\").forEach((el) => {\n    el.addEventListener(\"click\", cycleMode);\n  });\n}\n\n/*******************************************************************************\n * Scroll\n */\n\n/**\n * Navigation sidebar scrolling to active page\n */\nfunction scrollToActive() {\n  // If the docs nav doesn't exist, do nothing (e.g., on search page)\n  if (!document.querySelector(\".bd-docs-nav\")) {\n    return;\n  }\n\n  var sidebar = document.querySelector(\"div.bd-sidebar\");\n\n  // Remember the sidebar scroll position between page loads\n  // Inspired on source of revealjs.com\n  let storedScrollTop = parseInt(\n    sessionStorage.getItem(\"sidebar-scroll-top\"),\n    10,\n  );\n\n  if (!isNaN(storedScrollTop)) {\n    // If we've got a saved scroll position, just use that\n    sidebar.scrollTop = storedScrollTop;\n    console.log(\"[PST]: Scrolled sidebar using stored browser position...\");\n  } else {\n    // Otherwise, calculate a position to scroll to based on the lowest `active` link\n    var sidebarNav = document.querySelector(\".bd-docs-nav\");\n    var active_pages = sidebarNav.querySelectorAll(\".active\");\n    if (active_pages.length > 0) {\n      // Use the last active page as the offset since it's the page we're on\n      var latest_active = active_pages[active_pages.length - 1];\n      var offset =\n        latest_active.getBoundingClientRect().y -\n        sidebar.getBoundingClientRect().y;\n      // Only scroll the navbar if the active link is lower than 50% of the page\n      if (latest_active.getBoundingClientRect().y > window.innerHeight * 0.5) {\n        let buffer = 0.25; // Buffer so we have some space above the scrolled item\n        sidebar.scrollTop = offset - sidebar.clientHeight * buffer;\n        console.log(\"[PST]: Scrolled sidebar using last active link...\");\n      }\n    }\n  }\n\n  // Store the sidebar scroll position\n  window.addEventListener(\"beforeunload\", () => {\n    sessionStorage.setItem(\"sidebar-scroll-top\", sidebar.scrollTop);\n  });\n}\n\n/*******************************************************************************\n * Search\n */\n\n/**\n * Find any search forms on the page and return their input element\n */\nvar findSearchInput = () => {\n  let forms = document.querySelectorAll(\"form.bd-search\");\n  if (!forms.length) {\n    // no search form found\n    return;\n  } else {\n    var form;\n    if (forms.length == 1) {\n      // there is exactly one search form (persistent or hidden)\n      form = forms[0];\n    } else {\n      // must be at least one persistent form, use the first persistent one\n      form = document.querySelector(\n        \":not(#pst-search-dialog) > form.bd-search\",\n      );\n    }\n    return form.querySelector(\"input\");\n  }\n};\n\n/**\n * Activate the search field on the page.\n * - If there is a search field already visible it will be activated.\n * - If not, then a search field will pop up.\n */\nvar toggleSearchField = () => {\n  // Find the search input to highlight\n  const input = findSearchInput();\n\n  // if the input field is the hidden one (the one associated with the\n  // search button) then toggle the button state (to show/hide the field)\n  const searchDialog = document.getElementById(\"pst-search-dialog\");\n  const hiddenInput = searchDialog.querySelector(\"input\");\n  if (input === hiddenInput) {\n    if (searchDialog.open) {\n      searchDialog.close();\n    } else {\n      // Note: browsers should focus the input field inside the modal dialog\n      // automatically when it is opened.\n      searchDialog.showModal();\n    }\n  } else {\n    // if the input field is not the hidden one, then toggle its focus state\n\n    if (document.activeElement === input) {\n      input.blur();\n    } else {\n      input.focus();\n      input.select();\n      input.scrollIntoView({ block: \"center\" });\n    }\n  }\n};\n\n/**\n * Add an event listener for toggleSearchField() for Ctrl/Cmd + K\n */\nvar addEventListenerForSearchKeyboard = () => {\n  window.addEventListener(\n    \"keydown\",\n    (event) => {\n      let input = findSearchInput();\n      // toggle on Ctrl+k or ⌘+k\n      if (\n        // Ignore if shift or alt are pressed\n        !event.shiftKey &&\n        !event.altKey &&\n        // On Mac use ⌘, all other OS use Ctrl\n        (useCommandKey\n          ? event.metaKey && !event.ctrlKey\n          : !event.metaKey && event.ctrlKey) &&\n        // Case-insensitive so the shortcut still works with caps lock\n        /^k$/i.test(event.key)\n      ) {\n        event.preventDefault();\n        toggleSearchField();\n      }\n      // also allow Escape key to hide (but not show) the dynamic search field\n      else if (document.activeElement === input && /Escape/i.test(event.key)) {\n        toggleSearchField();\n        resetSearchAsYouTypeResults();\n      }\n    },\n    true,\n  );\n};\n\n/**\n * If the user is on a Mac, use command (⌘) instead of control (ctrl) key\n *\n * Note: `navigator.platform` is deprecated; however MDN still recommends using\n * it for the one specific use case of detecting whether a keyboard shortcut\n * should use control or command:\n * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/platform#examples\n */\nvar useCommandKey =\n  navigator.platform.indexOf(\"Mac\") === 0 || navigator.platform === \"iPhone\";\n\n/**\n * Change the search hint to `meta key` if we are a Mac\n */\n\nvar changeSearchShortcutKey = () => {\n  let shortcuts = document.querySelectorAll(\".search-button__kbd-shortcut\");\n  if (useCommandKey) {\n    shortcuts.forEach(\n      (f) => (f.querySelector(\"kbd.kbd-shortcut__modifier\").innerText = \"⌘\"),\n    );\n  }\n};\n\nconst closeDialogOnBackdropClick = ({\n  currentTarget: dialog,\n  clientX,\n  clientY,\n}) => {\n  if (!dialog.open) {\n    return;\n  }\n\n  // Dialog.getBoundingClientRect() does not include ::backdrop. (This is the\n  // trick that allows us to determine if click was inside or outside of the\n  // dialog: click handler includes backdrop, getBoundingClientRect does not.)\n  const { left, right, top, bottom } = dialog.getBoundingClientRect();\n\n  // 0, 0 means top left\n  const clickWasOutsideDialog =\n    clientX < left || right < clientX || clientY < top || bottom < clientY;\n\n  if (clickWasOutsideDialog) {\n    dialog.close();\n  }\n};\n\n/**\n * Activate callbacks for search button popup\n */\nvar setupSearchButtons = () => {\n  changeSearchShortcutKey();\n  addEventListenerForSearchKeyboard();\n\n  // Add the search button trigger event callback\n  document.querySelectorAll(\".search-button__button\").forEach((btn) => {\n    btn.onclick = toggleSearchField;\n  });\n\n  // If user clicks outside the search modal dialog, then close it.\n  const searchDialog = document.getElementById(\"pst-search-dialog\");\n  // Dialog click handler includes clicks on dialog ::backdrop.\n  searchDialog.addEventListener(\"click\", closeDialogOnBackdropClick);\n};\n\n/*******************************************************************************\n * Inline search results (search-as-you-type)\n *\n * Immediately displays search results under the search query textbox.\n *\n * The search is conducted by Sphinx's built-in search tools (searchtools.js).\n * Usually searchtools.js is only available on /search.html but\n * pydata-sphinx-theme (PST) has been modified to load searchtools.js on every\n * page. After the user types something into PST's search query textbox,\n * searchtools.js executes the search and populates the results into\n * the #search-results container. searchtools.js expects the results container\n * to have that exact ID.\n */\nvar setupSearchAsYouType = () => {\n  if (!DOCUMENTATION_OPTIONS.search_as_you_type) {\n    return;\n  }\n\n  // Don't interfere with the default search UX on /search.html.\n  if (window.location.pathname.endsWith(\"/search.html\")) {\n    return;\n  }\n\n  // Bail if the Search class is not available. Search-as-you-type is\n  // impossible without that class. layout.html should ensure that\n  // searchtools.js loads.\n  //\n  // Search class is defined in upstream Sphinx:\n  // https://github.com/sphinx-doc/sphinx/blob/6678e357048ea1767daaad68e7e0569786f3b458/sphinx/themes/basic/static/searchtools.js#L181\n  if (!Search) {\n    return;\n  }\n\n  // Destroy the previous search container and create a new one.\n  resetSearchAsYouTypeResults();\n  let timeoutId = null;\n  let lastQuery = \"\";\n  const searchInput = document.querySelector(\n    \"#pst-search-dialog input[name=q]\",\n  );\n\n  // Initiate searches whenever the user types stuff in the search modal textbox.\n  searchInput.addEventListener(\"keyup\", () => {\n    const query = searchInput.value;\n\n    // Don't search when there's nothing in the query textbox.\n    if (query === \"\") {\n      lastQuery = \"\";\n      resetSearchAsYouTypeResults(); // Remove previous results.\n      return;\n    }\n\n    // Don't search if there is no detectable change between\n    // the last query and the current query. E.g. the user presses\n    // Tab to start navigating the search results.\n    if (query === lastQuery) {\n      return;\n    }\n\n    // The user has changed the search query. Delete the old results\n    // and start setting up the new container.\n    resetSearchAsYouTypeResults();\n\n    // Debounce so that the search only starts when the user stops typing.\n    const delay_ms = 300;\n    lastQuery = query;\n    if (timeoutId) {\n      window.clearTimeout(timeoutId);\n    }\n    timeoutId = window.setTimeout(() => {\n      Search.performSearch(query);\n      document.querySelector(\"#search-results\").classList.remove(\"empty\");\n      timeoutId = null;\n    }, delay_ms);\n  });\n};\n\n// Delete the old search results container (if it exists) and set up a new one.\n//\n// There is some complexity around ensuring that the search results links are\n// correct because we're extending searchtools.js past its assumed usage.\n// Sphinx assumes that searches are only executed from /search.html and\n// therefore it assumes that all search results links should be relative to\n// the root directory of the website. In our case the search can now execute\n// from any page of the website so we must fix the relative URLs that\n// searchtools.js generates.\nvar resetSearchAsYouTypeResults = () => {\n  if (!DOCUMENTATION_OPTIONS.search_as_you_type) {\n    return;\n  }\n  // If a search-as-you-type results container was previously added,\n  // remove it now.\n  let results = document.querySelector(\"#search-results\");\n  if (results) {\n    results.remove();\n  }\n\n  // Create a new search-as-you-type results container.\n  results = document.createElement(\"section\");\n  results.classList.add(\"empty\");\n  // Remove the container element from the tab order. Individual search\n  // results are still focusable.\n  results.tabIndex = -1;\n  // When focus is on a search result, make sure that pressing Escape closes\n  // the search modal.\n  results.addEventListener(\"keydown\", (event) => {\n    if (event.key === \"Escape\") {\n      event.preventDefault();\n      event.stopPropagation();\n      toggleSearchField();\n      resetSearchAsYouTypeResults();\n    }\n  });\n  // IMPORTANT: The search results container MUST have this exact ID.\n  // searchtools.js is hardcoded to populate into the node with this ID.\n  results.id = \"search-results\";\n  let modal = document.querySelector(\"#pst-search-dialog\");\n  modal.appendChild(results);\n\n  // Get the relative path back to the root of the website.\n  const root =\n    \"URL_ROOT\" in DOCUMENTATION_OPTIONS\n      ? DOCUMENTATION_OPTIONS.URL_ROOT // Sphinx v6 and earlier\n      : document.documentElement.dataset.content_root; // Sphinx v7 and later\n\n  // As Sphinx populates the search results, this observer makes sure that\n  // each URL is correct (i.e. doesn't 404).\n  const linkObserver = new MutationObserver(() => {\n    const links = Array.from(\n      document.querySelectorAll(\"#search-results .search a\"),\n    );\n    // Check every link every time because the timing of when new results are\n    // added is unpredictable and it's not an expensive operation.\n    links.forEach((link) => {\n      link.tabIndex = 0; // Use natural tab order for search results.\n      // Don't use the link.href getter because the browser computes the href\n      // as a full URL. We need the relative URL that Sphinx generates.\n      const href = link.getAttribute(\"href\");\n      if (href.startsWith(root)) {\n        // No work needed. The root has already been prepended to the href.\n        return;\n      }\n      link.href = `${root}${href}`;\n    });\n  });\n\n  // The node that linkObserver watches doesn't exist until the user types\n  // something into the search textbox. This second observer (resultsObserver)\n  // just waits for #search-results to exist and then registers\n  // linkObserver on it.\n  let isObserved = false;\n  const resultsObserver = new MutationObserver(() => {\n    if (isObserved) {\n      return;\n    }\n    const container = document.querySelector(\"#search-results .search\");\n    if (!container) {\n      return;\n    }\n    linkObserver.observe(container, { childList: true });\n    isObserved = true;\n  });\n  resultsObserver.observe(results, { childList: true });\n};\n\n/*******************************************************************************\n * Version Switcher\n * Note that this depends on two variables existing that are defined in\n * and `html-page-context` hook:\n *\n * - DOCUMENTATION_OPTIONS.pagename\n * - DOCUMENTATION_OPTIONS.theme_switcher_url\n */\n\n/**\n * path component of URL\n */\nvar getCurrentUrlPath = () => {\n  if (DOCUMENTATION_OPTIONS.BUILDER == \"dirhtml\") {\n    return DOCUMENTATION_OPTIONS.pagename.endsWith(\"index\")\n      ? `${DOCUMENTATION_OPTIONS.pagename.substring(0, DOCUMENTATION_OPTIONS.pagename.length - \"index\".length)}`\n      : `${DOCUMENTATION_OPTIONS.pagename}/`;\n  }\n  return `${DOCUMENTATION_OPTIONS.pagename}.html`;\n};\n\n/**\n * Allow user to dismiss the warning banner about the docs version being dev / old.\n * We store the dismissal date and version, to give us flexibility about making the\n * dismissal last for longer than one browser session, if we decide to do that.\n *\n * @param {event} event the event that trigger the check\n */\nasync function DismissBannerAndStorePref(event) {\n  const banner = document.querySelector(\"#bd-header-version-warning\");\n  banner.remove();\n  const version = DOCUMENTATION_OPTIONS.VERSION;\n  const now = new Date();\n  const banner_pref = JSON.parse(\n    localStorage.getItem(\"pst_banner_pref\") || \"{}\",\n  );\n  console.debug(\n    `[PST] Dismissing the version warning banner on ${version} starting ${now}.`,\n  );\n  banner_pref[version] = now;\n  localStorage.setItem(\"pst_banner_pref\", JSON.stringify(banner_pref));\n}\n\n/**\n * Check if corresponding page path exists in other version of docs\n * and, if so, go there instead of the homepage of the other docs version\n *\n * @param {event} event the event that trigger the check\n */\nasync function checkPageExistsAndRedirect(event) {\n  // ensure we don't follow the initial link\n  event.preventDefault();\n  const currentFilePath = getCurrentUrlPath();\n  let tryUrl = event.currentTarget.getAttribute(\"href\");\n  let otherDocsHomepage = tryUrl.replace(currentFilePath, \"\");\n  try {\n    let head = await fetch(tryUrl, { method: \"HEAD\" });\n    if (head.ok) {\n      location.href = tryUrl; // the page exists, go there\n    } else {\n      location.href = otherDocsHomepage;\n    }\n  } catch (err) {\n    // something went wrong, probably CORS restriction, fallback to other docs homepage\n    location.href = otherDocsHomepage;\n  }\n}\n\n/**\n * Load and parse the version switcher JSON file from an absolute or relative URL.\n *\n * @param {string} url The URL to load version switcher entries from.\n */\nasync function fetchVersionSwitcherJSON(url) {\n  const currentPath = getCurrentUrlPath();\n  // first check if it's a valid URL\n  try {\n    var result = new URL(url);\n  } catch (err) {\n    if (err instanceof TypeError) {\n      // Assume we got a relative path, and fix accordingly.\n      if (window.location.protocol == \"file:\") {\n        // Here instead of returning `null` we work out what the file path would be\n        // anyway (same code path as for served docs), as a convenience to folks who\n        // routinely disable CORS when they boot up their browser.\n        console.info(\n          \"[PST] looks like you're viewing this site from a local filesystem, so \" +\n            \"the version switcher won't work unless you've disabled CORS. See \" +\n            \"https://pydata-sphinx-theme.readthedocs.io/en/stable/user_guide/version-dropdown.html\",\n        );\n      }\n      const cutoff = window.location.href.indexOf(currentPath);\n      // cutoff == -1 can happen e.g. on the homepage of locally served docs, where you\n      // get something like http://127.0.0.1:8000/ (no trailing `index.html`)\n      const origin =\n        cutoff == -1\n          ? window.location.href\n          : window.location.href.substring(0, cutoff);\n      result = new URL(url, origin);\n    } else {\n      // something unexpected happened\n      throw err;\n    }\n  }\n  // load and return the JSON\n  const response = await fetch(result);\n  const data = await response.json();\n  return data;\n}\n\n// Populate the version switcher from the JSON data\nfunction populateVersionSwitcher(data, versionSwitcherBtns) {\n  const currentFilePath = getCurrentUrlPath();\n  versionSwitcherBtns.forEach((btn) => {\n    // Set empty strings by default so that these attributes exist and can be used in CSS selectors\n    btn.dataset[\"activeVersionName\"] = \"\";\n    btn.dataset[\"activeVersion\"] = \"\";\n  });\n  // in case there are multiple entries with the same version string, this helps us\n  // decide which entry's `name` to put on the button itself. Without this, it would\n  // always be the *last* version-matching entry; now it will be either the\n  // version-matching entry that is also marked as `\"preferred\": true`, or if that\n  // doesn't exist: the *first* version-matching entry.\n  data = data.map((entry) => {\n    // does this entry match the version that we're currently building/viewing?\n    entry.match =\n      entry.version == DOCUMENTATION_OPTIONS.theme_switcher_version_match;\n    entry.preferred = entry.preferred || false;\n    // if no custom name specified (e.g., \"latest\"), use version string\n    if (!(\"name\" in entry)) {\n      entry.name = entry.version;\n    }\n    return entry;\n  });\n  const hasMatchingPreferredEntry = data\n    .map((entry) => entry.preferred && entry.match)\n    .some(Boolean);\n  var foundMatch = false;\n  // create links to the corresponding page in the other docs versions\n  data.forEach((entry) => {\n    // create the node\n    const anchor = document.createElement(\"a\");\n    anchor.setAttribute(\n      \"class\",\n      \"dropdown-item list-group-item list-group-item-action py-1\",\n    );\n    anchor.setAttribute(\"href\", `${entry.url}${currentFilePath}`);\n    anchor.setAttribute(\"role\", \"option\");\n    const span = document.createElement(\"span\");\n    span.textContent = `${entry.name}`;\n    anchor.appendChild(span);\n    // Add dataset values for the version and name in case people want\n    // to apply CSS styling based on this information.\n    anchor.dataset[\"versionName\"] = entry.name;\n    anchor.dataset[\"version\"] = entry.version;\n    // replace dropdown button text with the preferred display name of the\n    // currently-viewed version, rather than using sphinx's {{ version }} variable.\n    // also highlight the dropdown entry for the currently-viewed version's entry\n    let matchesAndIsPreferred = hasMatchingPreferredEntry && entry.preferred;\n    let matchesAndIsFirst =\n      !hasMatchingPreferredEntry && !foundMatch && entry.match;\n    if (matchesAndIsPreferred || matchesAndIsFirst) {\n      anchor.classList.add(\"active\");\n      versionSwitcherBtns.forEach((btn) => {\n        btn.innerText = entry.name;\n        btn.dataset[\"activeVersionName\"] = entry.name;\n        btn.dataset[\"activeVersion\"] = entry.version;\n      });\n      foundMatch = true;\n    }\n    // There may be multiple version-switcher elements, e.g. one\n    // in a slide-over panel displayed on smaller screens.\n    document.querySelectorAll(\".version-switcher__menu\").forEach((menu) => {\n      // we need to clone the node for each menu, but onclick attributes are not\n      // preserved by `.cloneNode()` so we add onclick here after cloning.\n      let node = anchor.cloneNode(true);\n      node.onclick = checkPageExistsAndRedirect;\n      // on click, AJAX calls will check if the linked page exists before\n      // trying to redirect, and if not, will redirect to the homepage\n      // for that version of the docs.\n      menu.append(node);\n    });\n  });\n}\n\n/*******************************************************************************\n * Warning banner when viewing non-stable version of the docs.\n */\n\n/**\n * Show a warning banner when viewing a non-stable version of the docs.\n *\n * adapted 2023-06 from https://mne.tools/versionwarning.js, which was\n * originally adapted 2020-05 from https://scikit-learn.org/versionwarning.js\n *\n * @param {Array} data The version data used to populate the switcher menu.\n */\nfunction showVersionWarningBanner(data) {\n  var version = DOCUMENTATION_OPTIONS.VERSION;\n  // figure out what latest stable version is\n  var preferredEntries = data.filter((entry) => entry.preferred);\n  if (preferredEntries.length !== 1) {\n    const howMany = preferredEntries.length == 0 ? \"No\" : \"Multiple\";\n    console.log(\n      `[PST] ${howMany} versions marked \"preferred\" found in versions JSON, ignoring.`,\n    );\n    return;\n  }\n  const preferredVersion = preferredEntries[0].version;\n  const preferredURL = preferredEntries[0].url;\n  // if already on preferred version, nothing to do\n  const versionsAreComparable = validate(version) && validate(preferredVersion);\n  if (versionsAreComparable && compare(version, preferredVersion, \"=\")) {\n    console.log(\n      \"[PST]: This is the preferred version of the docs, not showing the warning banner.\",\n    );\n    return;\n  }\n  // check if banner has been dismissed recently\n  const dismiss_date_str = JSON.parse(\n    localStorage.getItem(\"pst_banner_pref\") || \"{}\",\n  )[version];\n  if (dismiss_date_str != null) {\n    const dismiss_date = new Date(dismiss_date_str);\n    const now = new Date();\n    const milliseconds_in_a_day = 24 * 60 * 60 * 1000;\n    const days_passed = (now - dismiss_date) / milliseconds_in_a_day;\n    const timeout_in_days = 14;\n    if (days_passed < timeout_in_days) {\n      console.info(\n        `[PST] Suppressing version warning banner; was dismissed ${Math.floor(\n          days_passed,\n        )} day(s) ago`,\n      );\n      return;\n    }\n  }\n\n  // now construct the warning banner\n  const banner = document.querySelector(\"#bd-header-version-warning\");\n  const middle = document.createElement(\"div\");\n  const inner = document.createElement(\"div\");\n  const bold = document.createElement(\"strong\");\n  const button = document.createElement(\"a\");\n  const close_btn = document.createElement(\"a\");\n  // these classes exist since pydata-sphinx-theme v0.10.0\n  // the init class is used for animation\n  middle.classList = \"bd-header-announcement__content  ms-auto me-auto\";\n  inner.classList = \"sidebar-message\";\n  button.classList =\n    \"btn text-wrap font-weight-bold ms-3 my-1 align-baseline pst-button-link-to-stable-version\";\n  button.href = `${preferredURL}${getCurrentUrlPath()}`;\n  button.innerText = \"Switch to stable version\";\n  button.onclick = checkPageExistsAndRedirect;\n  close_btn.classList = \"ms-3 my-1 align-baseline\";\n  const close_x = document.createElement(\"i\");\n  close_btn.append(close_x);\n  close_x.classList = \"fa-solid fa-xmark\";\n  close_btn.onclick = DismissBannerAndStorePref;\n  // add the version-dependent text\n  inner.innerText = \"This is documentation for \";\n  const isDev =\n    version.includes(\"dev\") ||\n    version.includes(\"rc\") ||\n    version.includes(\"pre\");\n  const newerThanPreferred =\n    versionsAreComparable && compare(version, preferredVersion, \">\");\n  if (isDev || newerThanPreferred) {\n    bold.innerText = \"an unstable development version\";\n  } else if (versionsAreComparable && compare(version, preferredVersion, \"<\")) {\n    bold.innerText = `an old version (${version})`;\n  } else if (!version) {\n    bold.innerText = \"an unknown version\"; // e.g., an empty string\n  } else {\n    bold.innerText = `version ${version}`;\n  }\n  banner.appendChild(middle);\n  banner.append(close_btn);\n  middle.appendChild(inner);\n  inner.appendChild(bold);\n  inner.appendChild(document.createTextNode(\".\"));\n  inner.appendChild(button);\n  banner.classList.remove(\"d-none\");\n}\n\nasync function fetchAndUseVersions() {\n  // fetch the JSON version data (only once), then use it to populate the version\n  // switcher and maybe show the version warning bar\n  var versionSwitcherBtns = document.querySelectorAll(\n    \".version-switcher__button\",\n  );\n  const hasSwitcherMenu = versionSwitcherBtns.length > 0;\n  const hasVersionsJSON = DOCUMENTATION_OPTIONS.hasOwnProperty(\n    \"theme_switcher_json_url\",\n  );\n  const wantsWarningBanner = DOCUMENTATION_OPTIONS.show_version_warning_banner;\n\n  if (hasVersionsJSON && (hasSwitcherMenu || wantsWarningBanner)) {\n    const data = await fetchVersionSwitcherJSON(\n      DOCUMENTATION_OPTIONS.theme_switcher_json_url,\n    );\n    // TODO: remove the `if(data)` once the `return null` is fixed within fetchVersionSwitcherJSON.\n    // We don't really want the switcher and warning bar to silently not work.\n    if (data) {\n      populateVersionSwitcher(data, versionSwitcherBtns);\n      if (wantsWarningBanner) {\n        showVersionWarningBanner(data);\n      }\n    }\n  }\n}\n\n/*******************************************************************************\n * Sidebar modals (for mobile / narrow screens)\n */\nfunction setupMobileSidebarKeyboardHandlers() {\n  // These are the left and right sidebars for wider screens. We cut and paste\n  // the content from these widescreen sidebars into the mobile dialogs, when\n  // the user clicks the hamburger icon button\n  const primarySidebar = document.getElementById(\"pst-primary-sidebar\");\n  const secondarySidebar = document.getElementById(\"pst-secondary-sidebar\");\n\n  // These are the corresponding left/right <dialog> elements, which are empty\n  // until the user clicks the hamburger icon\n  const primaryDialog = document.getElementById(\"pst-primary-sidebar-modal\");\n  const secondaryDialog = document.getElementById(\n    \"pst-secondary-sidebar-modal\",\n  );\n\n  // These are the hamburger-style buttons in the header nav bar. They only\n  // appear at narrow screen width.\n  const primaryToggle = document.querySelector(\".primary-toggle\");\n  const secondaryToggle = document.querySelector(\".secondary-toggle\");\n\n  // Cut nodes and classes from `from`, paste into/onto `to`\n  const cutAndPasteNodesAndClasses = (from, to) => {\n    Array.from(from.childNodes).forEach((node) => to.appendChild(node));\n    Array.from(from.classList).forEach((cls) => {\n      from.classList.remove(cls);\n      to.classList.add(cls);\n    });\n  };\n\n  // Hook up the ways to open and close the dialog\n  [\n    [primaryToggle, primaryDialog, primarySidebar],\n    [secondaryToggle, secondaryDialog, secondarySidebar],\n  ].forEach(([toggleButton, dialog, sidebar]) => {\n    if (!toggleButton || !dialog || !sidebar) {\n      return;\n    }\n\n    // Clicking the button can only open the sidebar, not close it.\n    // Clicking the button is also the *only* way to open the sidebar.\n    toggleButton.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // When we open the dialog, we cut and paste the nodes and classes from\n      // the widescreen sidebar into the dialog\n      cutAndPasteNodesAndClasses(sidebar, dialog);\n\n      dialog.showModal();\n    });\n\n    // Listen for clicks on the backdrop in order to close the dialog\n    dialog.addEventListener(\"click\", closeDialogOnBackdropClick);\n\n    // We have to manually attach the escape key because there's some code in\n    // Sphinx's Sphinx_highlight.js that prevents the default behavior of the\n    // escape key\n    dialog.addEventListener(\"keydown\", (event) => {\n      if (event.key === \"Escape\") {\n        event.preventDefault();\n        event.stopPropagation();\n        dialog.close();\n      }\n    });\n\n    // When the dialog is closed, move the nodes (and classes) back to their\n    // original place\n    dialog.addEventListener(\"close\", () => {\n      cutAndPasteNodesAndClasses(dialog, sidebar);\n    });\n  });\n}\n\n/**\n * When the page loads, or the window resizes, or descendant nodes are added or\n * removed from the main element, check all code blocks and Jupyter notebook\n * outputs, and for each one that has scrollable overflow, set tabIndex = 0.\n */\nfunction addTabStopsToScrollableElements() {\n  const updateTabStops = () => {\n    document\n      .querySelectorAll(\n        [\n          // code blocks\n          \"pre\",\n          // NBSphinx notebook output\n          \".nboutput > .output_area\",\n          // Myst-NB\n          \".cell_output > .output\",\n          // ipywidgets\n          \".jp-RenderedHTMLCommon\",\n          // [rST table nodes](https://www.docutils.org/docs/ref/doctree.html#table)\n          \".pst-scrollable-table-container\",\n        ].join(\", \"),\n      )\n      .forEach((el) => {\n        el.tabIndex =\n          el.scrollWidth > el.clientWidth || el.scrollHeight > el.clientHeight\n            ? 0\n            : -1;\n      });\n  };\n  const debouncedUpdateTabStops = debounce(updateTabStops, 300);\n\n  // On window resize\n  window.addEventListener(\"resize\", debouncedUpdateTabStops);\n\n  // The following MutationObserver is for ipywidgets, which take some time to\n  // finish loading and rendering on the page (so even after the \"load\" event is\n  // fired, they still have not finished rendering). Would be nice to replace\n  // the MutationObserver if there is a way to hook into the ipywidgets code to\n  // know when it is done.\n  const mainObserver = new MutationObserver(debouncedUpdateTabStops);\n\n  // On descendant nodes added/removed from main element\n  mainObserver.observe(document.getElementById(\"main-content\"), {\n    subtree: true,\n    childList: true,\n  });\n\n  // On page load (when this function gets called)\n  updateTabStops();\n}\nfunction debounce(callback, wait) {\n  let timeoutId = null;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback(...args);\n    }, wait);\n  };\n}\n\n/*******************************************************************************\n * Announcement banner - fetch and load remote HTML\n */\nasync function setupAnnouncementBanner() {\n  const banner = document.querySelector(\".bd-header-announcement\");\n  const { pstAnnouncementUrl } = banner ? banner.dataset : null;\n\n  if (!pstAnnouncementUrl) {\n    return;\n  }\n\n  try {\n    const response = await fetch(pstAnnouncementUrl);\n    if (!response.ok) {\n      throw new Error(\n        `[PST]: HTTP response status not ok: ${response.status} ${response.statusText}`,\n      );\n    }\n    let data = await response.text();\n    data = data.trim();\n    if (data.length === 0) {\n      console.log(`[PST]: Empty announcement at: ${pstAnnouncementUrl}`);\n      return;\n    }\n    banner.innerHTML = `<div class=\"bd-header-announcement__content\">${data}</div>`;\n    banner.classList.remove(\"d-none\");\n  } catch (_error) {\n    console.log(`[PST]: Failed to load announcement at: ${pstAnnouncementUrl}`);\n    console.error(_error);\n  }\n}\n\n/*******************************************************************************\n * Reveal (and animate) the banners (version warning, announcement) together\n */\nasync function fetchRevealBannersTogether() {\n  // Wait until finished fetching and loading banners\n  await Promise.allSettled([fetchAndUseVersions(), setupAnnouncementBanner()]);\n\n  // The revealer element should have CSS rules that set height to 0, overflow\n  // to hidden, and an animation transition on the height (unless the user has\n  // turned off animations)\n  const revealer = document.querySelector(\".pst-async-banner-revealer\");\n  if (!revealer) {\n    return;\n  }\n\n  // Remove the d-none (display-none) class to calculate the children heights.\n  revealer.classList.remove(\"d-none\");\n\n  // Add together the heights of the element's children\n  const height = Array.from(revealer.children).reduce(\n    (height, el) => height + el.offsetHeight,\n    0,\n  );\n\n  // Use the calculated height to give the revealer a non-zero height (if\n  // animations allowed, the height change will animate)\n  revealer.style.setProperty(\"height\", `${height}px`);\n\n  // Wait for a bit more than 300ms (the transition duration), then set height\n  // to auto so the banner can resize if the window is resized.\n  setTimeout(() => {\n    revealer.style.setProperty(\"height\", \"auto\");\n  }, 320);\n}\n\n/**\n * Add the machinery needed to highlight elements in the TOC when scrolling.\n *\n */\nfunction setupArticleTocSyncing() {\n  // Right sidebar table of contents container\n  const pageToc = document.querySelector(\"#pst-page-toc-nav\");\n\n  // Not all pages have or include a table of contents. (For example, in the PST\n  // docs, at the time of this writing: /user_guide/index.html.)\n  if (!pageToc) {\n    return;\n  }\n\n  // The table of contents is a list of .toc-entry items each of which contains\n  // a link and possibly a nested list representing one level deeper in the\n  // table of contents.\n  const tocEntries = Array.from(pageToc.querySelectorAll(\".toc-entry\"));\n  const tocLinks = Array.from(pageToc.querySelectorAll(\"a\"));\n\n  // If there are no links in the TOC, there's no syncing to be done.\n  // (Currently, the template does not render the TOC container if there are no\n  // TOC links, so this condition should never evaluate to true if the TOC\n  // container is found on the page, but should the template change in the\n  // future, this check will prevent a runtime error.)\n  if (tocLinks.length === 0) {\n    return;\n  }\n\n  // Create a boolean variable that allows us to turn off the intersection\n  // observer (and then later back on). When the website visitor clicks an\n  // in-page link, we want that entry in the TOC to be highlighted/activated,\n  // NOT whichever TOC link the intersection observer callback would otherwise\n  // highlight.\n  let disableObserver = false;\n\n  function temporarilyDisableObserver(time) {\n    disableObserver = true;\n    setTimeout(() => {\n      disableObserver = false;\n    }, time);\n  }\n\n  /**\n   * If the provided URL hash fragment (beginning with \"#\") matches an entry in\n   * the page table of contents, highlight that entry and temporarily disable\n   * the intersection observer while the page scrolls to the corresponding\n   * heading.\n   */\n  function syncTocHash(hash) {\n    if (hash.length > 1) {\n      const matchingTocLink = tocLinks.find((tocLink) => tocLink.hash === hash);\n      if (matchingTocLink) {\n        // It's important to disable the intersection observer before\n        // highlighting the TOC link and its corresponding article heading. This\n        // is because the browser takes a little time to scroll to the article\n        // heading, and while scrolling, it could trigger intersection events\n        // that cause some other link in the table of contents to be\n        // highlighted.\n        temporarilyDisableObserver(1000);\n        activate(matchingTocLink);\n      }\n    }\n  }\n\n  // On page load...\n  //\n  // When the page loads, sync the page's table of contents.\n  syncTocHash(window.location.hash);\n\n  // On navigation to another part of the page...\n  //\n  // When the user navigates to another part of the page, sync the page's table\n  // of contents.\n  window.addEventListener(\"hashchange\", () => {\n    // By the time this event is fired, window.location.hash has already been\n    // updated with the new hash\n    syncTocHash(window.location.hash);\n  });\n\n  // On return to the same part of the page...\n  //\n  // The hashchange event will handle most cases where we need to sync the table\n  // of contents with a hash link click. But there is one edge case it doesn't\n  // handle, which is when the user clicks an internal page link whose hash is\n  // already in the browser address bar. For example, the user loads the page at\n  // #first-heading, scrolls to the bottom of the page, then clicks in the\n  // sidebar table of contents to go back up to the first heading in the\n  // article. In this case the \"hashchange\" event will not fire. Nonetheless, we\n  // want to guarantee that the TOC entry for the first heading gets\n  // highlighted. Note we cannot rely exclusively on the \"click\" event for all\n  // internal page navigations because it will not fire in the edge case where\n  // the user modifies the hash directly in the browser address bar.\n  window.addEventListener(\"click\", (event) => {\n    const link = event.target.closest(\"a\");\n    if (\n      link &&\n      link.hash === window.location.hash &&\n      link.origin === window.location.origin\n    ) {\n      syncTocHash(link.hash);\n    }\n  });\n\n  /**\n   * Activate an element and its chain of ancestor TOC entries; deactivate\n   * everything else in the TOC. Together with the theme CSS, this unfolds\n   * the TOC out to the given entry and highlights that entry.\n   *\n   * @param {HTMLElement} tocLink The TOC entry to be highlighted\n   */\n  function activate(tocLink) {\n    tocLinks.forEach((el) => {\n      if (el === tocLink) {\n        el.classList.add(\"active\");\n        el.setAttribute(\"aria-current\", \"true\");\n      } else {\n        el.classList.remove(\"active\");\n        el.removeAttribute(\"aria-current\");\n      }\n    });\n    tocEntries.forEach((el) => {\n      if (el.contains(tocLink)) {\n        el.classList.add(\"active\");\n      } else {\n        el.classList.remove(\"active\");\n      }\n    });\n  }\n\n  /**\n   * Get the heading in the article associated with the link in the table of contents\n   *\n   * @param {HTMLElement} tocLink TOC DOM element to use to grab an article heading\n   *\n   * @returns The article heading that the TOC element links to\n   */\n  function getHeading(tocLink) {\n    const href = tocLink.getAttribute(\"href\");\n    if (!href.startsWith(\"#\")) {\n      return;\n    }\n    const id = href.substring(1);\n    // There are cases where href=\"#\" (for example, the first one at /examples/kitchen-sink/structure.html)\n    if (!id) {\n      return;\n    }\n    // Use getElementById() because querySelector() requires escaping the id string\n    const target = document.getElementById(id);\n    // Often the target is a section but we want to track section's heading\n    const heading = target.querySelector(\":is(h1,h2,h3,h4,h5,h6)\");\n    // Fallback to the target if there is no heading (for example, links on the\n    // PST docs page /examples/kitchen-sink/api.html target <dt> elements)\n    return heading || target;\n  }\n\n  // Map heading elements to their associated TOC links\n  const headingsToTocLinks = new Map();\n  tocLinks.forEach((tocLink) => {\n    const heading = getHeading(tocLink);\n    if (heading) {\n      headingsToTocLinks.set(heading, tocLink);\n    }\n  });\n\n  let observer;\n\n  function connectIntersectionObserver() {\n    if (observer) {\n      observer.disconnect();\n    }\n\n    const header = document.querySelector(\"#pst-header\");\n    const headerHeight = header.getBoundingClientRect().height;\n\n    // Intersection observer options\n    const options = {\n      root: null,\n      rootMargin: `-${headerHeight}px 0px -70% 0px`, // Use -70% for the bottom margin so that intersection events happen in only the top third of the viewport\n      threshold: 0, // Trigger as soon as the heading goes into (or out of) the top 30% of the viewport\n    };\n\n    /**\n     *\n     * @param {IntersectionObserverEntry[]} entries Objects containing threshold-crossing\n     * event information\n     *\n     */\n    function callback(entries) {\n      if (disableObserver) {\n        return;\n      }\n      const entry = entries.filter((entry) => entry.isIntersecting).pop();\n      if (!entry) {\n        return;\n      }\n      const heading = entry.target;\n      const tocLink = headingsToTocLinks.get(heading);\n      activate(tocLink);\n    }\n\n    observer = new IntersectionObserver(callback, options);\n    Array.from(headingsToTocLinks.keys()).forEach((heading) => {\n      observer.observe(heading);\n    });\n  }\n\n  // If the user resizes the window, the header height may change and the\n  // intersection observer's root margin will need to be recalculated\n  window.addEventListener(\"resize\", debounce(connectIntersectionObserver, 300));\n  connectIntersectionObserver();\n}\n\n/*******************************************************************************\n * Set up expand/collapse button for primary sidebar\n */\nfunction setupCollapseSidebarButton() {\n  const button = document.getElementById(\"pst-collapse-sidebar-button\");\n  const sidebar = document.getElementById(\"pst-primary-sidebar\");\n\n  // If this page rendered without the button or sidebar, then there's nothing to do.\n  if (!button || !sidebar) {\n    return;\n  }\n\n  const sidebarSections = Array.from(sidebar.children);\n\n  const expandTooltip = new bootstrap.Tooltip(button, {\n    title: button.querySelector(\".pst-expand-sidebar-label\").textContent,\n\n    // In manual testing, relying on Bootstrap to handle \"hover\" and \"focus\" was buggy.\n    trigger: \"manual\",\n\n    placement: \"left\",\n    fallbackPlacements: [\"right\"],\n\n    // Offsetting the tooltip a bit more than the default [0, 0] solves an issue\n    // where the appearance of the tooltip triggers a mouseleave event which in\n    // turn triggers the call to hide the tooltip. So in certain areas around\n    // the button, it would appear to the user that tooltip flashes in and then\n    // back out.\n    offset: [0, 12],\n  });\n\n  const showTooltip = () => {\n    // Only show the \"expand sidebar\" tooltip when the sidebar is not expanded\n    if (button.getAttribute(\"aria-expanded\") === \"false\") {\n      expandTooltip.show();\n    }\n  };\n  const hideTooltip = () => {\n    expandTooltip.hide();\n  };\n\n  function squeezeSidebar(prefersReducedMotion, done) {\n    // Before squeezing the sidebar, freeze the widths of its subsections.\n    // Otherwise, the subsections will also narrow and cause the text in the\n    // sidebar to reflow and wrap, which we don't want. This is necessary\n    // because we do not remove the sidebar contents from the layout (with\n    // `display: none`). Rather, we hide the contents from both sighted users\n    // and screen readers (with `visibility: hidden`). This provides better\n    // stability to the overall layout.\n    sidebarSections.forEach(\n      (el) => (el.style.width = el.getBoundingClientRect().width + \"px\"),\n    );\n\n    const afterSqueeze = () => {\n      // After squeezing the sidebar, set aria-expanded to false\n      button.setAttribute(\"aria-expanded\", \"false\"); // \"false\" is in quotes because HTML attributes are strings\n\n      button.dataset.busy = false;\n    };\n\n    if (prefersReducedMotion) {\n      sidebar.classList.add(\"pst-squeeze\");\n      afterSqueeze();\n    } else {\n      sidebar.addEventListener(\"transitionend\", function onTransitionEnd() {\n        afterSqueeze();\n        sidebar.removeEventListener(\"transitionend\", onTransitionEnd);\n      });\n      sidebar.classList.add(\"pst-squeeze\");\n    }\n  }\n\n  function expandSidebar(prefersReducedMotion, done) {\n    hideTooltip();\n\n    const afterExpand = () => {\n      // After expanding the sidebar (which may be delayed by a CSS transition),\n      // unfreeze the widths of the subsections that were frozen when the sidebar\n      // was squeezed.\n      sidebarSections.forEach((el) => (el.style.width = null));\n\n      // After expanding the sidebar, set aria-expanded to \"true\" - in quotes\n      // because HTML attributes are strings.\n      button.setAttribute(\"aria-expanded\", \"true\");\n\n      button.dataset.busy = false;\n    };\n\n    if (prefersReducedMotion) {\n      sidebar.classList.remove(\"pst-squeeze\");\n      afterExpand();\n    } else {\n      sidebar.addEventListener(\"transitionend\", function onTransitionEnd() {\n        afterExpand();\n        sidebar.removeEventListener(\"transitionend\", onTransitionEnd);\n      });\n      sidebar.classList.remove(\"pst-squeeze\");\n    }\n  }\n\n  button.addEventListener(\"click\", () => {\n    if (button.dataset.busy === \"true\") {\n      return;\n    }\n    button.dataset.busy = \"true\";\n\n    const prefersReducedMotion = window.matchMedia(\n      \"(prefers-reduced-motion)\", // must be in parentheses\n    ).matches;\n\n    if (button.getAttribute(\"aria-expanded\") === \"true\") {\n      squeezeSidebar(prefersReducedMotion);\n    } else {\n      expandSidebar(prefersReducedMotion);\n    }\n  });\n\n  button.addEventListener(\"focus\", showTooltip);\n  button.addEventListener(\"mouseenter\", showTooltip);\n  button.addEventListener(\"mouseleave\", hideTooltip);\n  button.addEventListener(\"blur\", hideTooltip);\n}\n\n/*******************************************************************************\n * Call functions after document loading.\n */\n\n// This one first to kick off the network request for the version warning\n// and announcement banner data as early as possible.\ndocumentReady(fetchRevealBannersTogether);\n\ndocumentReady(addModeListener);\ndocumentReady(scrollToActive);\ndocumentReady(setupSearchButtons);\ndocumentReady(setupSearchAsYouType);\ndocumentReady(setupMobileSidebarKeyboardHandlers);\ndocumentReady(setupArticleTocSyncing);\ndocumentReady(() => {\n  try {\n    setupCollapseSidebarButton();\n  } catch (err) {\n    // This exact error message is used in pytest tests\n    console.log(\"[PST] Error setting up collapse sidebar button\");\n    console.error(err);\n  }\n});\n\n// Determining whether an element has scrollable content depends on stylesheets,\n// so we're checking for the \"load\" event rather than \"DOMContentLoaded\"\nif (document.readyState === \"complete\") {\n  addTabStopsToScrollableElements();\n} else {\n  window.addEventListener(\"load\", addTabStopsToScrollableElements);\n}\n"],"names":["documentReady","callback","document","readyState","addEventListener","validate","version","test","semver","compare","v1","v2","operator","assertValidOperator","res","n1","validateAndParse","n2","p1","pop","p2","r","compareSegments","split","compareVersions","operatorResMap","includes","TypeError","match","Error","shift","isWildcard","s","tryParse","v","n","parseInt","isNaN","compareStrings","a","b","ap","bp","String","forceType","i","Math","max","length","allowedOperators","Object","keys","op","indexOf","join","prefersDark","window","matchMedia","autoTheme","e","documentElement","dataset","theme","matches","setTheme","mode","console","error","colorScheme","querySelectorAll","forEach","el","classList","add","remove","localStorage","setItem","log","onchange","cycleMode","defaultMode","currentMode","getItem","arr","nextPosition","findSearchInput","forms","querySelector","toggleSearchField","input","searchDialog","getElementById","open","close","showModal","activeElement","blur","focus","select","scrollIntoView","block","useCommandKey","navigator","platform","closeDialogOnBackdropClick","currentTarget","dialog","clientX","clientY","left","right","top","bottom","getBoundingClientRect","resetSearchAsYouTypeResults","DOCUMENTATION_OPTIONS","search_as_you_type","results","createElement","tabIndex","event","key","preventDefault","stopPropagation","id","appendChild","root","URL_ROOT","content_root","linkObserver","MutationObserver","Array","from","link","href","getAttribute","startsWith","isObserved","container","observe","childList","getCurrentUrlPath","BUILDER","pagename","endsWith","substring","async","DismissBannerAndStorePref","VERSION","now","Date","banner_pref","JSON","parse","debug","stringify","checkPageExistsAndRedirect","currentFilePath","tryUrl","otherDocsHomepage","replace","fetch","method","ok","location","err","fetchAndUseVersions","versionSwitcherBtns","hasSwitcherMenu","hasVersionsJSON","hasOwnProperty","wantsWarningBanner","show_version_warning_banner","data","url","currentPath","result","URL","protocol","info","cutoff","origin","response","json","fetchVersionSwitcherJSON","theme_switcher_json_url","btn","hasMatchingPreferredEntry","map","entry","theme_switcher_version_match","preferred","name","some","Boolean","foundMatch","anchor","setAttribute","span","textContent","matchesAndIsPreferred","matchesAndIsFirst","innerText","menu","node","cloneNode","onclick","append","populateVersionSwitcher","preferredEntries","filter","howMany","preferredVersion","preferredURL","versionsAreComparable","dismiss_date_str","dismiss_date","days_passed","floor","banner","middle","inner","bold","button","close_btn","close_x","isDev","newerThanPreferred","createTextNode","showVersionWarningBanner","addTabStopsToScrollableElements","updateTabStops","scrollWidth","clientWidth","scrollHeight","clientHeight","debouncedUpdateTabStops","debounce","subtree","wait","timeoutId","args","clearTimeout","setTimeout","setupAnnouncementBanner","pstAnnouncementUrl","status","statusText","text","trim","innerHTML","_error","Promise","allSettled","revealer","height","children","reduce","offsetHeight","style","setProperty","sidebar","storedScrollTop","sessionStorage","active_pages","latest_active","offset","y","innerHeight","buffer","scrollTop","shortcuts","f","changeSearchShortcutKey","shiftKey","altKey","metaKey","ctrlKey","pathname","Search","lastQuery","searchInput","query","value","performSearch","primarySidebar","secondarySidebar","primaryDialog","secondaryDialog","primaryToggle","secondaryToggle","cutAndPasteNodesAndClasses","to","childNodes","cls","toggleButton","pageToc","tocEntries","tocLinks","disableObserver","syncTocHash","hash","matchingTocLink","find","tocLink","activate","removeAttribute","contains","target","closest","headingsToTocLinks","Map","observer","connectIntersectionObserver","disconnect","headerHeight","IntersectionObserver","entries","isIntersecting","heading","get","rootMargin","threshold","getHeading","set","sidebarSections","expandTooltip","bootstrap","Tooltip","title","trigger","placement","fallbackPlacements","showTooltip","show","hideTooltip","hide","busy","prefersReducedMotion","done","width","afterSqueeze","onTransitionEnd","removeEventListener","squeezeSidebar","afterExpand","expandSidebar","setupCollapseSidebarButton"],"sourceRoot":""}