Search.setIndex({"alltitles": {"**kwargs": [[8, "kwargs"]], "1D inverse problem demo using deriv2 from regtools": [[2, "1D-inverse-problem-demo-using-deriv2-from-regtools"]], "A CT dataset from the Diamond Light Source": [[12, "a-ct-dataset-from-the-diamond-light-source"]], "A Note on CIL AcquisitionGeometry:": [[1, "A-Note-on-CIL-AcquisitionGeometry:"]], "A Note on CIL ImageGeometry:": [[1, "A-Note-on-CIL-ImageGeometry:"]], "A detailed look at CIL geometry": [[1, "A-detailed-look-at-CIL-geometry"]], "A set of simulated volumes and CT data": [[12, "a-set-of-simulated-volumes-and-ct-data"]], "ASTRA": [[9, "astra"]], "Absorption to Transmission Converter": [[10, "absorption-to-transmission-converter"]], "AcquisitionData": [[4, "acquisitiondata"]], "AcquisitionGeometry": [[4, "acquisitiongeometry"]], "Algorithms (Deterministic)": [[8, "algorithms-deterministic"]], "Algorithms (Stochastic)": [[8, "algorithms-stochastic"]], "Analytical Reconstruction": [[11, "analytical-reconstruction"]], "Approximate Gradient base class": [[8, "approximate-gradient-base-class"]], "Approximate gradient methods": [[8, "approximate-gradient-methods"]], "Base class": [[8, "base-class"]], "Base classes": [[8, "base-classes"]], "Block Framework": [[6, "block-framework"], [8, "block-framework"]], "Block Function": [[8, "block-function"]], "Block Operator": [[8, "block-operator"]], "BlockDataContainer": [[4, "blockdatacontainer"], [8, "blockdatacontainer"]], "BlockGeometry": [[4, "blockgeometry"]], "Building documentation locally": [[3, "building-documentation-locally"]], "CCPi Regularisation": [[9, "ccpi-regularisation"]], "CGLS": [[8, "cgls"]], "CIL Plugins": [[9, "cil-plugins"]], "CIL version 23.0.1": [[2, "CIL-version-23.0.1"]], "CT Geometry": [[6, "ct-geometry"]], "Callbacks": [[8, "callbacks"]], "Centre Of Rotation Corrector": [[10, "centre-of-rotation-corrector"]], "Cite this work": [[5, "cite-this-work"]], "Composition of operator and a function": [[8, "composition-of-operator-and-a-function"]], "Cone-beam geometry": [[1, "Cone-beam-geometry"], [6, "cone-beam-geometry"]], "Cone2D Geometry (Fanbeam)": [[4, "cone2d-geometry-fanbeam"]], "Cone3D Geometry": [[4, "cone3d-geometry"]], "Configure the geometry": [[4, "configure-the-geometry"]], "Contacts": [[5, "contacts"]], "Contents:": [[5, null]], "Contributions guidelines": [[3, "contributions-guidelines"]], "Conventions on new CIL objects": [[3, "conventions-on-new-cil-objects"]], "Create a custom ImageGeometry": [[1, "Create-a-custom-ImageGeometry"]], "Create a more complex AcquisitionGeometry": [[1, "Create-a-more-complex-AcquisitionGeometry"]], "Create a simple AcquisitionGeometry": [[1, "Create-a-simple-AcquisitionGeometry"]], "Create a simple ImageGeometry": [[1, "Create-a-simple-ImageGeometry"]], "Create an offset AcquisitionGeometry": [[1, "Create-an-offset-AcquisitionGeometry"]], "Creator": [[3, "creator"]], "Data Binner": [[10, "data-binner"]], "Data Containers": [[4, "data-containers"]], "Data Manipulation": [[10, "data-manipulation"]], "Data Masking": [[10, "data-masking"]], "Data Normaliser": [[10, "data-normaliser"]], "Data Padder": [[10, "data-padder"]], "Data Slicer": [[10, "data-slicer"]], "DataContainer": [[4, "datacontainer"]], "DataOrder": [[4, "dataorder"]], "DataProcessor": [[4, "dataprocessor"]], "Demos and Examples": [[5, "demos-and-examples"]], "Developers\u2019 Guide": [[3, "developers-guide"]], "Docstrings": [[3, "docstrings"]], "Documentation": [[3, "documentation"]], "Example from cil": [[3, "example-from-cil"]], "Example:": [[4, "example"], [7, "example"], [8, "example"], [8, "id19"], [8, "id44"]], "FBP": [[9, "fbp"], [9, "id6"]], "FBP - Reconstructor for parallel-beam geometry": [[11, "fbp-reconstructor-for-parallel-beam-geometry"]], "FDK - Reconstructor for cone-beam geometry": [[11, "fdk-reconstructor-for-cone-beam-geometry"]], "FISTA": [[8, "fista"]], "Fan-beam geometry": [[1, "Fan-beam-geometry"], [6, "fan-beam-geometry"]], "Framework": [[4, "framework"]], "Functions": [[8, "functions"]], "GD": [[8, "gd"]], "GradientOperator": [[8, "gradientoperator"]], "HDF5 Utilities": [[7, "hdf5-utilities"]], "ISTA": [[8, "ista"]], "Image Quality metrics": [[12, "module-cil.utilities.quality_measures"]], "ImageData": [[4, "imagedata"]], "ImageGeometry": [[4, "imagegeometry"]], "Indicator box": [[8, "indicator-box"]], "Introduction": [[6, "introduction"]], "KullbackLeibler": [[8, "kullbackleibler"]], "L1 Norm": [[8, "l1-norm"]], "L1 Sparsity": [[8, "l1-sparsity"]], "L2 Norm Squared": [[8, "l2-norm-squared"]], "LADMM": [[8, "ladmm"]], "Least Squares": [[8, "least-squares"]], "Mask Generator from Data": [[10, "mask-generator-from-data"]], "Mixed L11 norm": [[8, "mixed-l11-norm"]], "Mixed L21 norm": [[8, "mixed-l21-norm"]], "Multi channel data": [[6, "multi-channel-data"]], "NeXuS": [[7, "nexus"]], "Nikon": [[7, "nikon"]], "Notebooks gallery": [[3, "notebooks-gallery"]], "Notes:": [[7, "notes"]], "Operator base classes": [[8, "operator-base-classes"]], "Operators": [[8, "operators"]], "Optimisation framework": [[8, "optimisation-framework"]], "Other methods": [[3, "other-methods"]], "Other regularisation functions": [[9, "other-regularisation-functions"]], "PDHG": [[8, "pdhg"]], "Parallel geometry": [[1, "Parallel-geometry"], [6, "parallel-geometry"]], "Parallel2D Geometry": [[4, "parallel2d-geometry"]], "Parallel3D Geometry": [[4, "parallel3d-geometry"]], "Parameters:": [[7, "parameters"], [8, "parameters"], [8, "id16"]], "Pre-processors": [[10, "pre-processors"]], "Processors": [[10, "processors"]], "Projection Operator": [[9, "projection-operator"], [9, "id7"]], "RAW File Writer": [[7, "raw-file-writer"]], "Read/ write AcquisitionData and ImageData": [[7, "read-write-acquisitiondata-and-imagedata"]], "Recon": [[11, "recon"]], "References": [[8, "references"]], "Rendered": [[3, "rendered"]], "Returns:": [[7, "returns"], [7, "id3"]], "Ring Remover": [[10, "ring-remover"]], "SIRT": [[8, "sirt"]], "SPDHG": [[8, "spdhg"]], "Samplers": [[8, "samplers"]], "Setter methods and properties": [[3, "setter-methods-and-properties"]], "Simple functions": [[8, "simple-functions"]], "Simulated image data": [[12, "simulated-image-data"]], "Smooth Mixed L21 norm": [[8, "smooth-mixed-l21-norm"]], "Software documentation Index": [[5, "software-documentation-index"]], "Source": [[3, "source"]], "Stochastic Gradient Descent Example": [[8, "stochastic-gradient-descent-example"]], "Stochastic Gradient function": [[8, "stochastic-gradient-function"]], "TIFF Reader/Writer": [[7, "tiff-reader-writer"]], "TIGRE": [[9, "tigre"]], "Test datasets": [[12, "test-datasets"]], "The structure of an AcquisitionGeometry": [[1, "The-structure-of-an-AcquisitionGeometry"]], "The structure of an ImageGeometry": [[1, "The-structure-of-an-ImageGeometry"]], "Todo": [[8, "id13"]], "TomoPhantom": [[9, "tomophantom"]], "Total variation": [[8, "total-variation"], [9, "total-variation"]], "Transmission to Absorption Converter": [[10, "transmission-to-absorption-converter"]], "Trivial operators": [[8, "trivial-operators"]], "Tutorials": [[0, "tutorials"]], "Use the geometry": [[4, "use-the-geometry"]], "Utilities": [[8, "utilities"], [12, "utilities"]], "VectorData": [[4, "vectordata"]], "Visualisation": [[12, "visualisation"]], "WaveletOperator": [[8, "waveletoperator"]], "Welcome to CIL\u2019s documentation!": [[5, "welcome-to-cil-s-documentation"]], "ZEISS": [[7, "zeiss"]], "islicer - interactive display of 2D slices": [[12, "islicer-interactive-display-of-2d-slices"]], "link_islicer - link islicer objects by index": [[12, "link-islicer-link-islicer-objects-by-index"]], "show1D - Display 1D slices": [[12, "show1d-display-1d-slices"]], "show2D - Display 2D slices": [[12, "show2d-display-2d-slices"]], "show_geometry - Display system geometry": [[12, "show-geometry-display-system-geometry"]]}, "docnames": ["demos", "demos/00_CIL_geometry", "demos/deriv2_cgls", "developer_guide", "framework", "index", "introduction", "io", "optimisation", "plugins", "processors", "recon", "utilities"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["demos.rst", "demos/00_CIL_geometry.ipynb", "demos/deriv2_cgls.ipynb", "developer_guide.rst", "framework.rst", "index.rst", "introduction.rst", "io.rst", "optimisation.rst", "plugins.rst", "processors.rst", "recon.rst", "utilities.rst"], "indexentries": {"__call__() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.__call__", false]], "__call__() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[9, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.__call__", false]], "__call__() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TGV.__call__", false]], "__call__() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TNV.__call__", false]], "__delattr__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__delattr__", false]], "__delattr__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__delattr__", false]], "__dir__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__dir__", false]], "__dir__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__dir__", false]], "__eq__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__eq__", false]], "__eq__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__eq__", false]], "__format__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__format__", false]], "__format__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__format__", false]], "__ge__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__ge__", false]], "__ge__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__ge__", false]], "__getattribute__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__getattribute__", false]], "__getattribute__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__getattribute__", false]], "__getitem__() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.__getitem__", false]], "__getstate__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__getstate__", false]], "__getstate__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__getstate__", false]], "__gt__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__gt__", false]], "__gt__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__gt__", false]], "__hash__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__hash__", false]], "__hash__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__hash__", false]], "__iadd__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__iadd__", false]], "__idiv__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__idiv__", false]], "__imul__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__imul__", false]], "__init__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__init__", false]], "__init__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__init__", false]], "__init__() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.__init__", false]], "__init__() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.__init__", false]], "__init__() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[9, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.__init__", false]], "__init__() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TGV.__init__", false]], "__init__() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TNV.__init__", false]], "__init_subclass__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__init_subclass__", false]], "__init_subclass__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__init_subclass__", false]], "__isub__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__isub__", false]], "__iter__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__iter__", false]], "__iter__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__iter__", false]], "__iter__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__iter__", false]], "__itruediv__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__itruediv__", false]], "__le__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__le__", false]], "__le__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__le__", false]], "__lt__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__lt__", false]], "__lt__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__lt__", false]], "__ne__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__ne__", false]], "__ne__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__ne__", false]], "__neg__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__neg__", false]], "__new__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__new__", false]], "__new__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__new__", false]], "__next__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__next__", false]], "__next__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__next__", false]], "__radd__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__radd__", false]], "__rdiv__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__rdiv__", false]], "__reduce__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__reduce__", false]], "__reduce__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__reduce__", false]], "__reduce_ex__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__reduce_ex__", false]], "__reduce_ex__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__reduce_ex__", false]], "__repr__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__repr__", false]], "__repr__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__repr__", false]], "__rmul__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__rmul__", false]], "__rmul__() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.__rmul__", false]], "__rmul__() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.__rmul__", false]], "__rmul__() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[9, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.__rmul__", false]], "__rmul__() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TGV.__rmul__", false]], "__rmul__() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TNV.__rmul__", false]], "__rpow__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__rpow__", false]], "__rsub__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__rsub__", false]], "__rtruediv__() (cil.framework.blockdatacontainer method)": [[8, "cil.framework.BlockDataContainer.__rtruediv__", false]], "__setattr__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__setattr__", false]], "__setattr__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__setattr__", false]], "__sizeof__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__sizeof__", false]], "__sizeof__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__sizeof__", false]], "__str__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__str__", false]], "__str__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__str__", false]], "__subclasshook__() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.__subclasshook__", false]], "__subclasshook__() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.__subclasshook__", false]], "__weakref__ (cil.framework.blockdatacontainer attribute)": [[8, "cil.framework.BlockDataContainer.__weakref__", false]], "__weakref__ (cil.optimisation.algorithms.fista attribute)": [[8, "cil.optimisation.algorithms.FISTA.__weakref__", false]], "__weakref__ (cil.optimisation.algorithms.ista attribute)": [[8, "cil.optimisation.algorithms.ISTA.__weakref__", false]], "absorptiontransmissionconverter (class in cil.processors)": [[10, "cil.processors.AbsorptionTransmissionConverter", false]], "acquisitiondata (class in cil.framework)": [[4, "cil.framework.AcquisitionData", false]], "acquisitiongeometry (class in cil.framework)": [[4, "cil.framework.AcquisitionGeometry", false]], "add() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.add", false], [8, "cil.framework.BlockDataContainer.add", false]], "adjoint() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.channelwiseoperator method)": [[8, "cil.optimisation.operators.ChannelwiseOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.compositionoperator method)": [[8, "cil.optimisation.operators.CompositionOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.diagonaloperator method)": [[8, "cil.optimisation.operators.DiagonalOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.finitedifferenceoperator method)": [[8, "cil.optimisation.operators.FiniteDifferenceOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.gradientoperator method)": [[8, "cil.optimisation.operators.GradientOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.identityoperator method)": [[8, "cil.optimisation.operators.IdentityOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.linearoperator method)": [[8, "cil.optimisation.operators.LinearOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.matrixoperator method)": [[8, "cil.optimisation.operators.MatrixOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.projectionmap method)": [[8, "cil.optimisation.operators.ProjectionMap.adjoint", false]], "adjoint() (cil.optimisation.operators.scaledoperator method)": [[8, "cil.optimisation.operators.ScaledOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.sumoperator method)": [[8, "cil.optimisation.operators.SumOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.symmetrisedgradientoperator method)": [[8, "cil.optimisation.operators.SymmetrisedGradientOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.waveletoperator method)": [[8, "cil.optimisation.operators.WaveletOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.zerooperator method)": [[8, "cil.optimisation.operators.ZeroOperator.adjoint", false]], "algorithm (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.Algorithm", false]], "allocate() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.allocate", false]], "allocate() (cil.framework.blockgeometry method)": [[4, "cil.framework.BlockGeometry.allocate", false]], "allocate() (cil.framework.imagegeometry method)": [[4, "cil.framework.ImageGeometry.allocate", false]], "apply_circular_mask() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.apply_circular_mask", false]], "approximate_gradient() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.approximate_gradient", false]], "approximate_gradient() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.approximate_gradient", false]], "approximategradientsumfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction", false]], "armijo_rule() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.armijo_rule", false]], "as_array() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.as_array", false]], "as_array() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.as_array", false]], "as_array() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.as_array", false]], "as_array() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.as_array", false]], "axpby() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.axpby", false], [8, "cil.framework.BlockDataContainer.axpby", false]], "binary_operations() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.binary_operations", false], [8, "cil.framework.BlockDataContainer.binary_operations", false]], "binner (class in cil.processors)": [[10, "cil.processors.Binner", false]], "blockdatacontainer (class in cil.framework)": [[4, "cil.framework.BlockDataContainer", false], [8, "cil.framework.BlockDataContainer", false]], "blockfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.BlockFunction", false]], "blockgeometry (class in cil.framework)": [[4, "cil.framework.BlockGeometry", false]], "blockoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.BlockOperator", false]], "calculate_lipschitz() (cil.optimisation.functions.totalvariation method)": [[8, "cil.optimisation.functions.TotalVariation.calculate_Lipschitz", false]], "calculate_norm() (cil.optimisation.operators.channelwiseoperator method)": [[8, "cil.optimisation.operators.ChannelwiseOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.diagonaloperator method)": [[8, "cil.optimisation.operators.DiagonalOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.gradientoperator method)": [[8, "cil.optimisation.operators.GradientOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.identityoperator method)": [[8, "cil.optimisation.operators.IdentityOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.linearoperator method)": [[8, "cil.optimisation.operators.LinearOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.waveletoperator method)": [[8, "cil.optimisation.operators.WaveletOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.zerooperator method)": [[8, "cil.optimisation.operators.ZeroOperator.calculate_norm", false]], "callback (class in cil.optimisation.utilities.callbacks)": [[8, "cil.optimisation.utilities.callbacks.Callback", false]], "centered_at() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.constantfunction method)": [[8, "cil.optimisation.functions.ConstantFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.function method)": [[8, "cil.optimisation.functions.Function.centered_at", false]], "centered_at() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.centered_at", false]], "centered_at() (cil.optimisation.functions.kullbackleibler method)": [[8, "cil.optimisation.functions.KullbackLeibler.centered_at", false]], "centered_at() (cil.optimisation.functions.l1norm method)": [[8, "cil.optimisation.functions.L1Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.l1sparsity method)": [[8, "cil.optimisation.functions.L1Sparsity.centered_at", false]], "centered_at() (cil.optimisation.functions.l2normsquared method)": [[8, "cil.optimisation.functions.L2NormSquared.centered_at", false]], "centered_at() (cil.optimisation.functions.leastsquares method)": [[8, "cil.optimisation.functions.LeastSquares.centered_at", false]], "centered_at() (cil.optimisation.functions.mixedl11norm method)": [[8, "cil.optimisation.functions.MixedL11Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.mixedl21norm method)": [[8, "cil.optimisation.functions.MixedL21Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.operatorcompositionfunction method)": [[8, "cil.optimisation.functions.OperatorCompositionFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.rosenbrock method)": [[8, "cil.optimisation.functions.Rosenbrock.centered_at", false]], "centered_at() (cil.optimisation.functions.scaledfunction method)": [[8, "cil.optimisation.functions.ScaledFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.smoothmixedl21norm method)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.sumfunction method)": [[8, "cil.optimisation.functions.SumFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.sumscalarfunction method)": [[8, "cil.optimisation.functions.SumScalarFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.totalvariation method)": [[8, "cil.optimisation.functions.TotalVariation.centered_at", false]], "centered_at() (cil.optimisation.functions.translatefunction method)": [[8, "cil.optimisation.functions.TranslateFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.weightedl2normsquared method)": [[8, "cil.optimisation.functions.WeightedL2NormSquared.centered_at", false]], "centered_at() (cil.optimisation.functions.zerofunction method)": [[8, "cil.optimisation.functions.ZeroFunction.centered_at", false]], "centreofrotationcorrector (class in cil.processors)": [[10, "cil.processors.CentreOfRotationCorrector", false]], "cgls (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.CGLS", false]], "channelwiseoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.ChannelwiseOperator", false]], "check_convergence() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.check_convergence", false]], "check_input() (cil.framework.dataprocessor method)": [[4, "cil.framework.DataProcessor.check_input", false]], "check_input() (cil.framework.processor method)": [[4, "cil.framework.Processor.check_input", false]], "check_input() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TNV.check_input", false]], "cil.utilities.quality_measures": [[12, "module-cil.utilities.quality_measures", false]], "clone() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.clone", false]], "clone() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.clone", false]], "clone() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.clone", false]], "clone() (cil.framework.imagegeometry method)": [[4, "cil.framework.ImageGeometry.clone", false]], "clone() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.clone", false]], "column_wise_compatible() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.column_wise_compatible", false]], "compositionoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.CompositionOperator", false]], "constant() (cil.processors.padder static method)": [[10, "cil.processors.Padder.constant", false]], "constantfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.ConstantFunction", false]], "convex_conjugate() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.constantfunction method)": [[8, "cil.optimisation.functions.ConstantFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.function method)": [[8, "cil.optimisation.functions.Function.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.kullbackleibler method)": [[8, "cil.optimisation.functions.KullbackLeibler.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.l1norm method)": [[8, "cil.optimisation.functions.L1Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.l1sparsity method)": [[8, "cil.optimisation.functions.L1Sparsity.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.l2normsquared method)": [[8, "cil.optimisation.functions.L2NormSquared.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.leastsquares method)": [[8, "cil.optimisation.functions.LeastSquares.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.mixedl11norm method)": [[8, "cil.optimisation.functions.MixedL11Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.mixedl21norm method)": [[8, "cil.optimisation.functions.MixedL21Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.operatorcompositionfunction method)": [[8, "cil.optimisation.functions.OperatorCompositionFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.rosenbrock method)": [[8, "cil.optimisation.functions.Rosenbrock.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.scaledfunction method)": [[8, "cil.optimisation.functions.ScaledFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.smoothmixedl21norm method)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sumfunction method)": [[8, "cil.optimisation.functions.SumFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sumscalarfunction method)": [[8, "cil.optimisation.functions.SumScalarFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.totalvariation method)": [[8, "cil.optimisation.functions.TotalVariation.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.translatefunction method)": [[8, "cil.optimisation.functions.TranslateFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.weightedl2normsquared method)": [[8, "cil.optimisation.functions.WeightedL2NormSquared.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.zerofunction method)": [[8, "cil.optimisation.functions.ZeroFunction.convex_conjugate", false]], "convex_conjugate() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[9, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.convex_conjugate", false]], "convex_conjugate() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TGV.convex_conjugate", false]], "convex_conjugate() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[9, "cil.plugins.ccpi_regularisation.functions.TNV.convex_conjugate", false]], "copy() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.copy", false]], "copy() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.copy", false], [8, "cil.framework.BlockDataContainer.copy", false]], "copy() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.copy", false]], "copy() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.copy", false]], "copy() (cil.framework.imagegeometry method)": [[4, "cil.framework.ImageGeometry.copy", false]], "copy() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.copy", false]], "create_cone2d() (cil.framework.acquisitiongeometry static method)": [[4, "cil.framework.AcquisitionGeometry.create_Cone2D", false]], "create_cone3d() (cil.framework.acquisitiongeometry static method)": [[4, "cil.framework.AcquisitionGeometry.create_Cone3D", false]], "create_parallel2d() (cil.framework.acquisitiongeometry static method)": [[4, "cil.framework.AcquisitionGeometry.create_Parallel2D", false]], "create_parallel3d() (cil.framework.acquisitiongeometry static method)": [[4, "cil.framework.AcquisitionGeometry.create_Parallel3D", false]], "data_passes (cil.optimisation.functions.approximategradientsumfunction property)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.data_passes", false]], "data_passes (cil.optimisation.functions.sgfunction property)": [[8, "cil.optimisation.functions.SGFunction.data_passes", false]], "data_passes_indices (cil.optimisation.functions.approximategradientsumfunction property)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.data_passes_indices", false]], "data_passes_indices (cil.optimisation.functions.sgfunction property)": [[8, "cil.optimisation.functions.SGFunction.data_passes_indices", false]], "datacontainer (class in cil.framework)": [[4, "cil.framework.DataContainer", false]], "dataorder (class in cil.framework)": [[4, "cil.framework.DataOrder", false]], "dataprocessor (class in cil.framework)": [[4, "cil.framework.DataProcessor", false]], "diagonaloperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.DiagonalOperator", false]], "direct() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.direct", false]], "direct() (cil.optimisation.operators.channelwiseoperator method)": [[8, "cil.optimisation.operators.ChannelwiseOperator.direct", false]], "direct() (cil.optimisation.operators.compositionoperator method)": [[8, "cil.optimisation.operators.CompositionOperator.direct", false]], "direct() (cil.optimisation.operators.diagonaloperator method)": [[8, "cil.optimisation.operators.DiagonalOperator.direct", false]], "direct() (cil.optimisation.operators.finitedifferenceoperator method)": [[8, "cil.optimisation.operators.FiniteDifferenceOperator.direct", false]], "direct() (cil.optimisation.operators.gradientoperator method)": [[8, "cil.optimisation.operators.GradientOperator.direct", false]], "direct() (cil.optimisation.operators.identityoperator method)": [[8, "cil.optimisation.operators.IdentityOperator.direct", false]], "direct() (cil.optimisation.operators.matrixoperator method)": [[8, "cil.optimisation.operators.MatrixOperator.direct", false]], "direct() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.direct", false]], "direct() (cil.optimisation.operators.projectionmap method)": [[8, "cil.optimisation.operators.ProjectionMap.direct", false]], "direct() (cil.optimisation.operators.scaledoperator method)": [[8, "cil.optimisation.operators.ScaledOperator.direct", false]], "direct() (cil.optimisation.operators.sparsefinitedifferenceoperator method)": [[8, "cil.optimisation.operators.SparseFiniteDifferenceOperator.direct", false]], "direct() (cil.optimisation.operators.sumoperator method)": [[8, "cil.optimisation.operators.SumOperator.direct", false]], "direct() (cil.optimisation.operators.symmetrisedgradientoperator method)": [[8, "cil.optimisation.operators.SymmetrisedGradientOperator.direct", false]], "direct() (cil.optimisation.operators.waveletoperator method)": [[8, "cil.optimisation.operators.WaveletOperator.direct", false]], "direct() (cil.optimisation.operators.zerooperator method)": [[8, "cil.optimisation.operators.ZeroOperator.direct", false]], "divide() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.divide", false], [8, "cil.framework.BlockDataContainer.divide", false]], "domain_geometry() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.domain_geometry", false]], "domain_geometry() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.domain_geometry", false]], "dot() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.dot", false]], "dot() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.dot", false]], "dot() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.dot", false]], "dot() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.dot", false]], "dot_test() (cil.optimisation.operators.linearoperator static method)": [[8, "cil.optimisation.operators.LinearOperator.dot_test", false]], "dtype (cil.framework.acquisitiondata property)": [[4, "cil.framework.AcquisitionData.dtype", false]], "dtype (cil.framework.datacontainer property)": [[4, "cil.framework.DataContainer.dtype", false]], "dtype (cil.framework.imagedata property)": [[4, "cil.framework.ImageData.dtype", false]], "dtype (cil.framework.vectordata property)": [[4, "cil.framework.VectorData.dtype", false]], "edge() (cil.processors.padder static method)": [[10, "cil.processors.Padder.edge", false]], "estimate_normalised_error() (cil.processors.normaliser static method)": [[10, "cil.processors.Normaliser.estimate_normalised_error", false]], "exp() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.exp", false]], "exp() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.exp", false]], "exp() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.exp", false]], "exp() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.exp", false]], "fbp (class in cil.plugins.astra)": [[9, "cil.plugins.astra.FBP", false]], "fbp (class in cil.plugins.tigre)": [[9, "cil.plugins.tigre.FBP", false]], "fbp (class in cil.recon)": [[11, "cil.recon.FBP", false]], "fdk (class in cil.recon)": [[11, "cil.recon.FDK", false]], "fgp_dtv (class in cil.plugins.ccpi_regularisation.functions)": [[9, "cil.plugins.ccpi_regularisation.functions.FGP_dTV", false]], "fgp_tv (class in cil.plugins.ccpi_regularisation.functions)": [[9, "cil.plugins.ccpi_regularisation.functions.FGP_TV", false]], "figure (cil.utilities.display.show1d attribute)": [[12, "cil.utilities.display.show1D.figure", false]], "fill() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.fill", false]], "fill() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.fill", false]], "fill() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.fill", false]], "fill() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.fill", false]], "finitedifferenceoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.FiniteDifferenceOperator", false]], "fista (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.FISTA", false]], "flag() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.flag", false]], "from_function() (cil.optimisation.utilities.sampler static method)": [[8, "cil.optimisation.utilities.Sampler.from_function", false], [8, "id38", false]], "full_gradient() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.full_gradient", false]], "full_gradient() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.full_gradient", false]], "function (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.Function", false]], "gd (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.GD", false]], "get() (cil.utilities.dataexample.simulated_cone_beam_data class method)": [[12, "cil.utilities.dataexample.SIMULATED_CONE_BEAM_DATA.get", false], [12, "id1", false]], "get() (cil.utilities.dataexample.simulated_parallel_beam_data class method)": [[12, "cil.utilities.dataexample.SIMULATED_PARALLEL_BEAM_DATA.get", false]], "get() (cil.utilities.dataexample.synchrotron_parallel_beam_data class method)": [[12, "cil.utilities.dataexample.SYNCHROTRON_PARALLEL_BEAM_DATA.get", false]], "get_as_list() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.get_as_list", false]], "get_data_axes_order() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.get_data_axes_order", false]], "get_data_axes_order() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.get_data_axes_order", false]], "get_data_axes_order() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.get_data_axes_order", false]], "get_data_axes_order() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.get_data_axes_order", false]], "get_data_offset() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.get_data_offset", false]], "get_data_scale() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.get_data_scale", false]], "get_dataset_metadata() (cil.io.utilities.hdf5_utilities static method)": [[7, "cil.io.utilities.HDF5_utilities.get_dataset_metadata", false]], "get_dimension_axis() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.get_dimension_axis", false]], "get_dimension_axis() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.get_dimension_axis", false]], "get_dimension_axis() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.get_dimension_axis", false]], "get_dimension_axis() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.get_dimension_axis", false]], "get_filter_array() (cil.recon.fbp method)": [[11, "cil.recon.FBP.get_filter_array", false]], "get_filter_array() (cil.recon.fdk method)": [[11, "cil.recon.FDK.get_filter_array", false]], "get_geometry() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.get_geometry", false]], "get_geometry() (cil.io.nikondatareader method)": [[7, "cil.io.NikonDataReader.get_geometry", false]], "get_geometry() (cil.io.zeissdatareader method)": [[7, "cil.io.ZEISSDataReader.get_geometry", false]], "get_imagedata() (in module cil.plugins.tomophantom)": [[9, "cil.plugins.TomoPhantom.get_ImageData", false]], "get_imagegeometry() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.get_ImageGeometry", false]], "get_input() (cil.framework.dataprocessor method)": [[4, "cil.framework.DataProcessor.get_input", false]], "get_input() (cil.framework.processor method)": [[4, "cil.framework.Processor.get_input", false]], "get_item() (cil.framework.blockgeometry method)": [[4, "cil.framework.BlockGeometry.get_item", false]], "get_item() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.get_item", false]], "get_last_loss() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.get_last_loss", false]], "get_last_objective() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.get_last_objective", false]], "get_metadata() (cil.io.zeissdatareader method)": [[7, "cil.io.ZEISSDataReader.get_metadata", false]], "get_norms_as_list() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.get_norms_as_list", false]], "get_output() (cil.framework.dataprocessor method)": [[4, "cil.framework.DataProcessor.get_output", false]], "get_output() (cil.framework.processor method)": [[4, "cil.framework.Processor.get_output", false]], "get_output() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.get_output", false]], "get_output() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.get_output", false]], "get_output() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.get_output", false]], "get_output() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.get_output", false]], "get_output() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.get_output", false]], "get_output() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.get_output", false]], "get_output() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.get_output", false]], "get_output() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.get_output", false]], "get_output() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.get_output", false]], "get_output() (cil.plugins.astra.fbp method)": [[9, "cil.plugins.astra.FBP.get_output", false]], "get_output() (cil.plugins.tigre.fbp method)": [[9, "cil.plugins.tigre.FBP.get_output", false]], "get_output() (cil.processors.absorptiontransmissionconverter method)": [[10, "cil.processors.AbsorptionTransmissionConverter.get_output", false]], "get_output() (cil.processors.binner method)": [[10, "cil.processors.Binner.get_output", false]], "get_output() (cil.processors.centreofrotationcorrector method)": [[10, "cil.processors.CentreOfRotationCorrector.get_output", false]], "get_output() (cil.processors.masker method)": [[10, "cil.processors.Masker.get_output", false]], "get_output() (cil.processors.maskgenerator method)": [[10, "cil.processors.MaskGenerator.get_output", false]], "get_output() (cil.processors.normaliser method)": [[10, "cil.processors.Normaliser.get_output", false]], "get_output() (cil.processors.padder method)": [[10, "cil.processors.Padder.get_output", false]], "get_output() (cil.processors.ringremover method)": [[10, "cil.processors.RingRemover.get_output", false]], "get_output() (cil.processors.slicer method)": [[10, "cil.processors.Slicer.get_output", false]], "get_output() (cil.processors.transmissionabsorptionconverter method)": [[10, "cil.processors.TransmissionAbsorptionConverter.get_output", false]], "get_output_shape() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.get_output_shape", false]], "get_roi() (cil.io.nikondatareader method)": [[7, "cil.io.NikonDataReader.get_roi", false]], "get_samples() (cil.optimisation.utilities.sampler method)": [[8, "cil.optimisation.utilities.Sampler.get_samples", false]], "get_samples() (cil.optimisation.utilities.samplerrandom method)": [[8, "cil.optimisation.utilities.SamplerRandom.get_samples", false]], "get_slice() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.get_slice", false]], "get_slice() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.get_slice", false]], "get_slice() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.get_slice", false]], "get_slice() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.get_slice", false]], "get_slice() (cil.framework.imagegeometry method)": [[4, "cil.framework.ImageGeometry.get_slice", false]], "get_slice() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.get_slice", false]], "gradient() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.gradient", false]], "gradient() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.gradient", false]], "gradient() (cil.optimisation.functions.constantfunction method)": [[8, "cil.optimisation.functions.ConstantFunction.gradient", false]], "gradient() (cil.optimisation.functions.function method)": [[8, "cil.optimisation.functions.Function.gradient", false]], "gradient() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.gradient", false]], "gradient() (cil.optimisation.functions.kullbackleibler method)": [[8, "cil.optimisation.functions.KullbackLeibler.gradient", false]], "gradient() (cil.optimisation.functions.l1norm method)": [[8, "cil.optimisation.functions.L1Norm.gradient", false]], "gradient() (cil.optimisation.functions.l1sparsity method)": [[8, "cil.optimisation.functions.L1Sparsity.gradient", false]], "gradient() (cil.optimisation.functions.l2normsquared method)": [[8, "cil.optimisation.functions.L2NormSquared.gradient", false]], "gradient() (cil.optimisation.functions.leastsquares method)": [[8, "cil.optimisation.functions.LeastSquares.gradient", false]], "gradient() (cil.optimisation.functions.mixedl11norm method)": [[8, "cil.optimisation.functions.MixedL11Norm.gradient", false]], "gradient() (cil.optimisation.functions.mixedl21norm method)": [[8, "cil.optimisation.functions.MixedL21Norm.gradient", false]], "gradient() (cil.optimisation.functions.operatorcompositionfunction method)": [[8, "cil.optimisation.functions.OperatorCompositionFunction.gradient", false]], "gradient() (cil.optimisation.functions.rosenbrock method)": [[8, "cil.optimisation.functions.Rosenbrock.gradient", false]], "gradient() (cil.optimisation.functions.scaledfunction method)": [[8, "cil.optimisation.functions.ScaledFunction.gradient", false]], "gradient() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.gradient", false]], "gradient() (cil.optimisation.functions.smoothmixedl21norm method)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm.gradient", false]], "gradient() (cil.optimisation.functions.sumfunction method)": [[8, "cil.optimisation.functions.SumFunction.gradient", false]], "gradient() (cil.optimisation.functions.sumscalarfunction method)": [[8, "cil.optimisation.functions.SumScalarFunction.gradient", false]], "gradient() (cil.optimisation.functions.totalvariation method)": [[8, "cil.optimisation.functions.TotalVariation.gradient", false]], "gradient() (cil.optimisation.functions.translatefunction method)": [[8, "cil.optimisation.functions.TranslateFunction.gradient", false]], "gradient() (cil.optimisation.functions.weightedl2normsquared method)": [[8, "cil.optimisation.functions.WeightedL2NormSquared.gradient", false]], "gradient() (cil.optimisation.functions.zerofunction method)": [[8, "cil.optimisation.functions.ZeroFunction.gradient", false]], "gradient_operator (cil.optimisation.functions.totalvariation property)": [[8, "cil.optimisation.functions.TotalVariation.gradient_operator", false]], "gradientoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.GradientOperator", false]], "hdf5_utilities (class in cil.io.utilities)": [[7, "cil.io.utilities.HDF5_utilities", false]], "herman_meyer() (cil.optimisation.utilities.sampler static method)": [[8, "cil.optimisation.utilities.Sampler.herman_meyer", false], [8, "id39", false]], "identityoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.IdentityOperator", false]], "image_sharpness() (cil.processors.centreofrotationcorrector static method)": [[10, "cil.processors.CentreOfRotationCorrector.image_sharpness", false]], "imagedata (class in cil.framework)": [[4, "cil.framework.ImageData", false]], "imagegeometry (class in cil.framework)": [[4, "cil.framework.ImageGeometry", false]], "indicatorbox (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.IndicatorBox", false]], "interpolate() (cil.processors.masker static method)": [[10, "cil.processors.Masker.interpolate", false]], "is_compatible() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.is_compatible", false], [8, "cil.framework.BlockDataContainer.is_compatible", false]], "is_linear() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.compositionoperator method)": [[8, "cil.optimisation.operators.CompositionOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.linearoperator method)": [[8, "cil.optimisation.operators.LinearOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.is_linear", false]], "is_linear() (cil.optimisation.operators.scaledoperator method)": [[8, "cil.optimisation.operators.ScaledOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.sumoperator method)": [[8, "cil.optimisation.operators.SumOperator.is_linear", false]], "is_orthogonal() (cil.optimisation.operators.identityoperator method)": [[8, "cil.optimisation.operators.IdentityOperator.is_orthogonal", false]], "is_orthogonal() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.is_orthogonal", false]], "is_orthogonal() (cil.optimisation.operators.waveletoperator method)": [[8, "cil.optimisation.operators.WaveletOperator.is_orthogonal", false]], "is_provably_convergent() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.is_provably_convergent", false]], "islicer (class in cil.utilities.jupyter)": [[12, "cil.utilities.jupyter.islicer", false]], "ista (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.ISTA", false]], "iterations (cil.optimisation.algorithms.algorithm property)": [[8, "cil.optimisation.algorithms.Algorithm.iterations", false]], "iterations (cil.optimisation.algorithms.cgls property)": [[8, "cil.optimisation.algorithms.CGLS.iterations", false]], "iterations (cil.optimisation.algorithms.fista property)": [[8, "cil.optimisation.algorithms.FISTA.iterations", false]], "iterations (cil.optimisation.algorithms.gd property)": [[8, "cil.optimisation.algorithms.GD.iterations", false]], "iterations (cil.optimisation.algorithms.ista property)": [[8, "cil.optimisation.algorithms.ISTA.iterations", false]], "iterations (cil.optimisation.algorithms.ladmm property)": [[8, "cil.optimisation.algorithms.LADMM.iterations", false]], "iterations (cil.optimisation.algorithms.pdhg property)": [[8, "cil.optimisation.algorithms.PDHG.iterations", false]], "iterations (cil.optimisation.algorithms.sirt property)": [[8, "cil.optimisation.algorithms.SIRT.iterations", false]], "iterations (cil.optimisation.algorithms.spdhg property)": [[8, "cil.optimisation.algorithms.SPDHG.iterations", false]], "kullbackleibler (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.KullbackLeibler", false]], "l (cil.optimisation.functions.approximategradientsumfunction property)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.L", false]], "l (cil.optimisation.functions.blockfunction property)": [[8, "cil.optimisation.functions.BlockFunction.L", false]], "l (cil.optimisation.functions.constantfunction property)": [[8, "cil.optimisation.functions.ConstantFunction.L", false]], "l (cil.optimisation.functions.function property)": [[8, "cil.optimisation.functions.Function.L", false]], "l (cil.optimisation.functions.indicatorbox property)": [[8, "cil.optimisation.functions.IndicatorBox.L", false]], "l (cil.optimisation.functions.kullbackleibler property)": [[8, "cil.optimisation.functions.KullbackLeibler.L", false]], "l (cil.optimisation.functions.l1norm property)": [[8, "cil.optimisation.functions.L1Norm.L", false]], "l (cil.optimisation.functions.l1sparsity property)": [[8, "cil.optimisation.functions.L1Sparsity.L", false]], "l (cil.optimisation.functions.l2normsquared property)": [[8, "cil.optimisation.functions.L2NormSquared.L", false]], "l (cil.optimisation.functions.leastsquares property)": [[8, "cil.optimisation.functions.LeastSquares.L", false]], "l (cil.optimisation.functions.mixedl11norm property)": [[8, "cil.optimisation.functions.MixedL11Norm.L", false]], "l (cil.optimisation.functions.mixedl21norm property)": [[8, "cil.optimisation.functions.MixedL21Norm.L", false]], "l (cil.optimisation.functions.operatorcompositionfunction property)": [[8, "cil.optimisation.functions.OperatorCompositionFunction.L", false]], "l (cil.optimisation.functions.rosenbrock property)": [[8, "cil.optimisation.functions.Rosenbrock.L", false]], "l (cil.optimisation.functions.scaledfunction property)": [[8, "cil.optimisation.functions.ScaledFunction.L", false]], "l (cil.optimisation.functions.sgfunction property)": [[8, "cil.optimisation.functions.SGFunction.L", false]], "l (cil.optimisation.functions.smoothmixedl21norm property)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm.L", false]], "l (cil.optimisation.functions.sumfunction property)": [[8, "cil.optimisation.functions.SumFunction.L", false]], "l (cil.optimisation.functions.sumscalarfunction property)": [[8, "cil.optimisation.functions.SumScalarFunction.L", false]], "l (cil.optimisation.functions.totalvariation property)": [[8, "cil.optimisation.functions.TotalVariation.L", false]], "l (cil.optimisation.functions.translatefunction property)": [[8, "cil.optimisation.functions.TranslateFunction.L", false]], "l (cil.optimisation.functions.weightedl2normsquared property)": [[8, "cil.optimisation.functions.WeightedL2NormSquared.L", false]], "l (cil.optimisation.functions.zerofunction property)": [[8, "cil.optimisation.functions.ZeroFunction.L", false]], "l1norm (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.L1Norm", false]], "l1sparsity (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.L1Sparsity", false]], "l2normsquared (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.L2NormSquared", false]], "ladmm (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.LADMM", false]], "leastsquares (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.LeastSquares", false]], "linear_ramp() (cil.processors.padder static method)": [[10, "cil.processors.Padder.linear_ramp", false]], "linearoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.LinearOperator", false]], "link_islicer (class in cil.utilities.jupyter)": [[12, "cil.utilities.jupyter.link_islicer", false]], "lmax (cil.optimisation.functions.approximategradientsumfunction property)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.Lmax", false]], "lmax (cil.optimisation.functions.sgfunction property)": [[8, "cil.optimisation.functions.SGFunction.Lmax", false]], "lmax (cil.optimisation.functions.sumfunction property)": [[8, "cil.optimisation.functions.SumFunction.Lmax", false]], "lmax (cil.optimisation.functions.sumscalarfunction property)": [[8, "cil.optimisation.functions.SumScalarFunction.Lmax", false]], "load() (cil.utilities.dataexample.testdata method)": [[12, "cil.utilities.dataexample.TestData.load", false]], "load_data() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.load_data", false]], "load_projections() (cil.io.nikondatareader method)": [[7, "cil.io.NikonDataReader.load_projections", false]], "log() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.log", false]], "log() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.log", false]], "log() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.log", false]], "log() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.log", false]], "logfilecallback (class in cil.optimisation.utilities.callbacks)": [[8, "cil.optimisation.utilities.callbacks.LogfileCallback", false]], "loss (cil.optimisation.algorithms.algorithm property)": [[8, "cil.optimisation.algorithms.Algorithm.loss", false]], "loss (cil.optimisation.algorithms.cgls property)": [[8, "cil.optimisation.algorithms.CGLS.loss", false]], "loss (cil.optimisation.algorithms.fista property)": [[8, "cil.optimisation.algorithms.FISTA.loss", false]], "loss (cil.optimisation.algorithms.gd property)": [[8, "cil.optimisation.algorithms.GD.loss", false]], "loss (cil.optimisation.algorithms.ista property)": [[8, "cil.optimisation.algorithms.ISTA.loss", false]], "loss (cil.optimisation.algorithms.ladmm property)": [[8, "cil.optimisation.algorithms.LADMM.loss", false]], "loss (cil.optimisation.algorithms.pdhg property)": [[8, "cil.optimisation.algorithms.PDHG.loss", false]], "loss (cil.optimisation.algorithms.sirt property)": [[8, "cil.optimisation.algorithms.SIRT.loss", false]], "loss (cil.optimisation.algorithms.spdhg property)": [[8, "cil.optimisation.algorithms.SPDHG.loss", false]], "mae() (in module cil.utilities.quality_measures)": [[12, "cil.utilities.quality_measures.mae", false]], "masker (class in cil.processors)": [[10, "cil.processors.Masker", false]], "maskgenerator (class in cil.processors)": [[10, "cil.processors.MaskGenerator", false]], "maskoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.MaskOperator", false]], "matrixoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.MatrixOperator", false]], "max() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.max", false]], "max() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.max", false]], "max() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.max", false]], "max() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.max", false]], "max_iteration (cil.optimisation.algorithms.algorithm property)": [[8, "cil.optimisation.algorithms.Algorithm.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.cgls property)": [[8, "cil.optimisation.algorithms.CGLS.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.fista property)": [[8, "cil.optimisation.algorithms.FISTA.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.gd property)": [[8, "cil.optimisation.algorithms.GD.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.ista property)": [[8, "cil.optimisation.algorithms.ISTA.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.ladmm property)": [[8, "cil.optimisation.algorithms.LADMM.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.pdhg property)": [[8, "cil.optimisation.algorithms.PDHG.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.sirt property)": [[8, "cil.optimisation.algorithms.SIRT.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.spdhg property)": [[8, "cil.optimisation.algorithms.SPDHG.max_iteration", false]], "maximum() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.maximum", false], [8, "cil.framework.BlockDataContainer.maximum", false]], "mean() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.mean", false]], "mean() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.mean", false]], "mean() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.mean", false]], "mean() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.mean", false]], "mean() (cil.processors.masker static method)": [[10, "cil.processors.Masker.mean", false]], "mean() (cil.processors.maskgenerator static method)": [[10, "cil.processors.MaskGenerator.mean", false]], "median() (cil.processors.masker static method)": [[10, "cil.processors.Masker.median", false]], "median() (cil.processors.maskgenerator static method)": [[10, "cil.processors.MaskGenerator.median", false]], "min() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.min", false]], "min() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.min", false]], "min() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.min", false]], "min() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.min", false]], "minimum() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.minimum", false], [8, "cil.framework.BlockDataContainer.minimum", false]], "mixedl11norm (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.MixedL11Norm", false]], "mixedl21norm (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.MixedL21Norm", false]], "module": [[12, "module-cil.utilities.quality_measures", false]], "mse() (in module cil.utilities.quality_measures)": [[12, "cil.utilities.quality_measures.mse", false]], "multiply() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.multiply", false], [8, "cil.framework.BlockDataContainer.multiply", false]], "ndim (cil.framework.acquisitiondata property)": [[4, "cil.framework.AcquisitionData.ndim", false]], "ndim (cil.framework.datacontainer property)": [[4, "cil.framework.DataContainer.ndim", false]], "ndim (cil.framework.imagedata property)": [[4, "cil.framework.ImageData.ndim", false]], "ndim (cil.framework.vectordata property)": [[4, "cil.framework.VectorData.ndim", false]], "next() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.next", false], [8, "cil.framework.BlockDataContainer.next", false]], "next() (cil.optimisation.utilities.sampler method)": [[8, "cil.optimisation.utilities.Sampler.next", false]], "nexusdatareader (class in cil.io)": [[7, "cil.io.NEXUSDataReader", false]], "nexusdatawriter (class in cil.io)": [[7, "cil.io.NEXUSDataWriter", false]], "nikondatareader (class in cil.io)": [[7, "cil.io.NikonDataReader", false]], "norm() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.norm", false]], "norm() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.norm", false]], "norm() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.norm", false]], "norm() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.norm", false]], "norm() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.norm", false]], "norm() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.norm", false]], "norm() (cil.optimisation.operators.scaledoperator method)": [[8, "cil.optimisation.operators.ScaledOperator.norm", false]], "normaliser (class in cil.processors)": [[10, "cil.processors.Normaliser", false]], "num_threads (cil.optimisation.functions.indicatorbox property)": [[8, "cil.optimisation.functions.IndicatorBox.num_threads", false]], "number_of_dimensions (cil.framework.acquisitiondata property)": [[4, "cil.framework.AcquisitionData.number_of_dimensions", false]], "number_of_dimensions (cil.framework.datacontainer property)": [[4, "cil.framework.DataContainer.number_of_dimensions", false]], "number_of_dimensions (cil.framework.imagedata property)": [[4, "cil.framework.ImageData.number_of_dimensions", false]], "number_of_dimensions (cil.framework.vectordata property)": [[4, "cil.framework.VectorData.number_of_dimensions", false]], "objective (cil.optimisation.algorithms.algorithm property)": [[8, "cil.optimisation.algorithms.Algorithm.objective", false]], "objective (cil.optimisation.algorithms.cgls property)": [[8, "cil.optimisation.algorithms.CGLS.objective", false]], "objective (cil.optimisation.algorithms.fista property)": [[8, "cil.optimisation.algorithms.FISTA.objective", false]], "objective (cil.optimisation.algorithms.gd property)": [[8, "cil.optimisation.algorithms.GD.objective", false]], "objective (cil.optimisation.algorithms.ista property)": [[8, "cil.optimisation.algorithms.ISTA.objective", false]], "objective (cil.optimisation.algorithms.ladmm property)": [[8, "cil.optimisation.algorithms.LADMM.objective", false]], "objective (cil.optimisation.algorithms.pdhg property)": [[8, "cil.optimisation.algorithms.PDHG.objective", false]], "objective (cil.optimisation.algorithms.sirt property)": [[8, "cil.optimisation.algorithms.SIRT.objective", false]], "objective (cil.optimisation.algorithms.spdhg property)": [[8, "cil.optimisation.algorithms.SPDHG.objective", false]], "operator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.Operator", false]], "operatorcompositionfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.OperatorCompositionFunction", false]], "padder (class in cil.processors)": [[10, "cil.processors.Padder", false]], "partition() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.partition", false]], "pdhg (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.PDHG", false]], "power() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.power", false], [8, "cil.framework.BlockDataContainer.power", false]], "powermethod() (cil.optimisation.operators.linearoperator static method)": [[8, "cil.optimisation.operators.LinearOperator.PowerMethod", false]], "print_metadata() (cil.io.utilities.hdf5_utilities static method)": [[7, "cil.io.utilities.HDF5_utilities.print_metadata", false]], "process() (cil.processors.binner method)": [[10, "cil.processors.Binner.process", false]], "process() (cil.processors.slicer method)": [[10, "cil.processors.Slicer.process", false]], "processor (class in cil.framework)": [[4, "cil.framework.Processor", false]], "progresscallback (class in cil.optimisation.utilities.callbacks)": [[8, "cil.optimisation.utilities.callbacks.ProgressCallback", false]], "projectionmap (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.ProjectionMap", false]], "projectionoperator (class in cil.plugins.astra)": [[9, "cil.plugins.astra.ProjectionOperator", false]], "projectionoperator (class in cil.plugins.tigre)": [[9, "cil.plugins.tigre.ProjectionOperator", false]], "proximal() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.proximal", false]], "proximal() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.proximal", false]], "proximal() (cil.optimisation.functions.constantfunction method)": [[8, "cil.optimisation.functions.ConstantFunction.proximal", false]], "proximal() (cil.optimisation.functions.function method)": [[8, "cil.optimisation.functions.Function.proximal", false]], "proximal() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.proximal", false]], "proximal() (cil.optimisation.functions.kullbackleibler method)": [[8, "cil.optimisation.functions.KullbackLeibler.proximal", false]], "proximal() (cil.optimisation.functions.l1norm method)": [[8, "cil.optimisation.functions.L1Norm.proximal", false]], "proximal() (cil.optimisation.functions.l1sparsity method)": [[8, "cil.optimisation.functions.L1Sparsity.proximal", false]], "proximal() (cil.optimisation.functions.l2normsquared method)": [[8, "cil.optimisation.functions.L2NormSquared.proximal", false]], "proximal() (cil.optimisation.functions.leastsquares method)": [[8, "cil.optimisation.functions.LeastSquares.proximal", false]], "proximal() (cil.optimisation.functions.mixedl11norm method)": [[8, "cil.optimisation.functions.MixedL11Norm.proximal", false]], "proximal() (cil.optimisation.functions.mixedl21norm method)": [[8, "cil.optimisation.functions.MixedL21Norm.proximal", false]], "proximal() (cil.optimisation.functions.operatorcompositionfunction method)": [[8, "cil.optimisation.functions.OperatorCompositionFunction.proximal", false]], "proximal() (cil.optimisation.functions.rosenbrock method)": [[8, "cil.optimisation.functions.Rosenbrock.proximal", false]], "proximal() (cil.optimisation.functions.scaledfunction method)": [[8, "cil.optimisation.functions.ScaledFunction.proximal", false]], "proximal() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.proximal", false]], "proximal() (cil.optimisation.functions.smoothmixedl21norm method)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm.proximal", false]], "proximal() (cil.optimisation.functions.sumfunction method)": [[8, "cil.optimisation.functions.SumFunction.proximal", false]], "proximal() (cil.optimisation.functions.sumscalarfunction method)": [[8, "cil.optimisation.functions.SumScalarFunction.proximal", false]], "proximal() (cil.optimisation.functions.totalvariation method)": [[8, "cil.optimisation.functions.TotalVariation.proximal", false]], "proximal() (cil.optimisation.functions.translatefunction method)": [[8, "cil.optimisation.functions.TranslateFunction.proximal", false]], "proximal() (cil.optimisation.functions.weightedl2normsquared method)": [[8, "cil.optimisation.functions.WeightedL2NormSquared.proximal", false]], "proximal() (cil.optimisation.functions.zerofunction method)": [[8, "cil.optimisation.functions.ZeroFunction.proximal", false]], "proximal_conjugate() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.blockfunction method)": [[8, "cil.optimisation.functions.BlockFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.constantfunction method)": [[8, "cil.optimisation.functions.ConstantFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.function method)": [[8, "cil.optimisation.functions.Function.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.kullbackleibler method)": [[8, "cil.optimisation.functions.KullbackLeibler.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.l1norm method)": [[8, "cil.optimisation.functions.L1Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.l1sparsity method)": [[8, "cil.optimisation.functions.L1Sparsity.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.l2normsquared method)": [[8, "cil.optimisation.functions.L2NormSquared.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.leastsquares method)": [[8, "cil.optimisation.functions.LeastSquares.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.mixedl11norm method)": [[8, "cil.optimisation.functions.MixedL11Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.mixedl21norm method)": [[8, "cil.optimisation.functions.MixedL21Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.operatorcompositionfunction method)": [[8, "cil.optimisation.functions.OperatorCompositionFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.rosenbrock method)": [[8, "cil.optimisation.functions.Rosenbrock.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.scaledfunction method)": [[8, "cil.optimisation.functions.ScaledFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.smoothmixedl21norm method)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sumfunction method)": [[8, "cil.optimisation.functions.SumFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sumscalarfunction method)": [[8, "cil.optimisation.functions.SumScalarFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.totalvariation method)": [[8, "cil.optimisation.functions.TotalVariation.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.translatefunction method)": [[8, "cil.optimisation.functions.TranslateFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.weightedl2normsquared method)": [[8, "cil.optimisation.functions.WeightedL2NormSquared.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.zerofunction method)": [[8, "cil.optimisation.functions.ZeroFunction.proximal_conjugate", false]], "psnr() (in module cil.utilities.quality_measures)": [[12, "cil.utilities.quality_measures.psnr", false]], "quantile() (cil.processors.maskgenerator static method)": [[10, "cil.processors.MaskGenerator.quantile", false]], "random_noise() (cil.utilities.dataexample.testdata static method)": [[12, "cil.utilities.dataexample.TestData.random_noise", false]], "random_with_replacement() (cil.optimisation.utilities.sampler static method)": [[8, "cil.optimisation.utilities.Sampler.random_with_replacement", false], [8, "id36", false]], "random_without_replacement() (cil.optimisation.utilities.sampler static method)": [[8, "cil.optimisation.utilities.Sampler.random_without_replacement", false], [8, "id37", false]], "range_geometry() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.range_geometry", false]], "range_geometry() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.range_geometry", false]], "rawfilewriter (class in cil.io)": [[7, "cil.io.RAWFileWriter", false]], "read() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.read", false]], "read() (cil.io.nikondatareader method)": [[7, "cil.io.NikonDataReader.read", false]], "read() (cil.io.tiffstackreader method)": [[7, "cil.io.TIFFStackReader.read", false]], "read() (cil.io.utilities.hdf5_utilities static method)": [[7, "cil.io.utilities.HDF5_utilities.read", false]], "read() (cil.io.zeissdatareader method)": [[7, "cil.io.ZEISSDataReader.read", false]], "read_as_acquisitiondata() (cil.io.tiffstackreader method)": [[7, "cil.io.TIFFStackReader.read_as_AcquisitionData", false]], "read_as_imagedata() (cil.io.tiffstackreader method)": [[7, "cil.io.TIFFStackReader.read_as_ImageData", false]], "read_as_original() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.read_as_original", false]], "read_rescaled() (cil.io.tiffstackreader method)": [[7, "cil.io.TIFFStackReader.read_rescaled", false]], "read_scale_offset() (cil.io.tiffstackreader method)": [[7, "cil.io.TIFFStackReader.read_scale_offset", false]], "read_to() (cil.io.utilities.hdf5_utilities static method)": [[7, "cil.io.utilities.HDF5_utilities.read_to", false]], "reflect() (cil.processors.padder static method)": [[10, "cil.processors.Padder.reflect", false]], "reorder() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.reorder", false]], "reorder() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.reorder", false]], "reorder() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.reorder", false]], "reorder() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.reorder", false]], "reset() (cil.recon.fbp method)": [[11, "cil.recon.FBP.reset", false]], "reset() (cil.recon.fdk method)": [[11, "cil.recon.FDK.reset", false]], "ringremover (class in cil.processors)": [[10, "cil.processors.RingRemover", false]], "rosenbrock (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.Rosenbrock", false]], "row_wise_compatible() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.row_wise_compatible", false]], "run() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.run", false]], "run() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.run", false]], "run() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.run", false]], "run() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.run", false]], "run() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.run", false]], "run() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.run", false]], "run() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.run", false]], "run() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.run", false]], "run() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.run", false]], "run() (cil.recon.fbp method)": [[11, "cil.recon.FBP.run", false]], "run() (cil.recon.fbp.fbp method)": [[3, "cil.recon.FBP.FBP.run", false]], "run() (cil.recon.fdk method)": [[11, "cil.recon.FDK.run", false]], "sampler (class in cil.optimisation.utilities)": [[8, "cil.optimisation.utilities.Sampler", false]], "samplerrandom (class in cil.optimisation.utilities)": [[8, "cil.optimisation.utilities.SamplerRandom", false]], "sapyb() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.sapyb", false]], "sapyb() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.sapyb", false], [8, "cil.framework.BlockDataContainer.sapyb", false]], "sapyb() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.sapyb", false]], "sapyb() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.sapyb", false]], "sapyb() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.sapyb", false]], "save() (cil.utilities.display.show1d method)": [[12, "cil.utilities.display.show1D.save", false]], "save() (cil.utilities.display.show2d method)": [[12, "cil.utilities.display.show2D.save", false]], "save() (cil.utilities.display.show_geometry method)": [[12, "cil.utilities.display.show_geometry.save", false]], "scaledfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.ScaledFunction", false]], "scaledoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.ScaledOperator", false]], "scikit_random_noise() (cil.utilities.dataexample.testdata static method)": [[12, "cil.utilities.dataexample.TestData.scikit_random_noise", false]], "sequential() (cil.optimisation.utilities.sampler static method)": [[8, "cil.optimisation.utilities.Sampler.sequential", false], [8, "id0", false]], "set_angles() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.set_angles", false]], "set_channels() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.set_channels", false]], "set_data_partition_weights() (cil.optimisation.functions.approximategradientsumfunction method)": [[8, "cil.optimisation.functions.ApproximateGradientSumFunction.set_data_partition_weights", false]], "set_data_partition_weights() (cil.optimisation.functions.sgfunction method)": [[8, "cil.optimisation.functions.SGFunction.set_data_partition_weights", false]], "set_fft_order() (cil.recon.fbp method)": [[11, "cil.recon.FBP.set_fft_order", false]], "set_fft_order() (cil.recon.fdk method)": [[11, "cil.recon.FDK.set_fft_order", false]], "set_filter() (cil.recon.fbp method)": [[11, "cil.recon.FBP.set_filter", false]], "set_filter() (cil.recon.fdk method)": [[11, "cil.recon.FDK.set_filter", false]], "set_filter_inplace() (cil.recon.fbp method)": [[11, "cil.recon.FBP.set_filter_inplace", false]], "set_filter_inplace() (cil.recon.fdk method)": [[11, "cil.recon.FDK.set_filter_inplace", false]], "set_gamma_fconj() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.set_gamma_fconj", false]], "set_gamma_g() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.set_gamma_g", false]], "set_image_geometry() (cil.recon.fbp method)": [[11, "cil.recon.FBP.set_image_geometry", false]], "set_image_geometry() (cil.recon.fdk method)": [[11, "cil.recon.FDK.set_image_geometry", false]], "set_input() (cil.framework.dataprocessor method)": [[4, "cil.framework.DataProcessor.set_input", false]], "set_input() (cil.framework.processor method)": [[4, "cil.framework.Processor.set_input", false]], "set_input() (cil.plugins.astra.fbp method)": [[9, "cil.plugins.astra.FBP.set_input", false]], "set_input() (cil.plugins.tigre.fbp method)": [[9, "cil.plugins.tigre.FBP.set_input", false]], "set_input() (cil.processors.absorptiontransmissionconverter method)": [[10, "cil.processors.AbsorptionTransmissionConverter.set_input", false]], "set_input() (cil.processors.binner method)": [[10, "cil.processors.Binner.set_input", false]], "set_input() (cil.processors.centreofrotationcorrector method)": [[10, "cil.processors.CentreOfRotationCorrector.set_input", false]], "set_input() (cil.processors.masker method)": [[10, "cil.processors.Masker.set_input", false]], "set_input() (cil.processors.maskgenerator method)": [[10, "cil.processors.MaskGenerator.set_input", false]], "set_input() (cil.processors.normaliser method)": [[10, "cil.processors.Normaliser.set_input", false]], "set_input() (cil.processors.padder method)": [[10, "cil.processors.Padder.set_input", false]], "set_input() (cil.processors.ringremover method)": [[10, "cil.processors.RingRemover.set_input", false]], "set_input() (cil.processors.slicer method)": [[10, "cil.processors.Slicer.set_input", false]], "set_input() (cil.processors.transmissionabsorptionconverter method)": [[10, "cil.processors.TransmissionAbsorptionConverter.set_input", false]], "set_input() (cil.recon.fbp method)": [[11, "cil.recon.FBP.set_input", false]], "set_input() (cil.recon.fdk method)": [[11, "cil.recon.FDK.set_input", false]], "set_labels() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.set_labels", false]], "set_norm() (cil.optimisation.operators.operator method)": [[8, "cil.optimisation.operators.Operator.set_norm", false]], "set_norms() (cil.optimisation.operators.blockoperator method)": [[8, "cil.optimisation.operators.BlockOperator.set_norms", false]], "set_num_threads() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.set_num_threads", false]], "set_panel() (cil.framework.acquisitiongeometry method)": [[4, "cil.framework.AcquisitionGeometry.set_panel", false]], "set_relaxation_parameter() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.set_relaxation_parameter", false]], "set_split_processing() (cil.recon.fbp method)": [[11, "cil.recon.FBP.set_split_processing", false]], "set_step_size() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.set_step_size", false]], "set_step_size() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.set_step_size", false]], "set_step_sizes() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.set_step_sizes", false]], "set_suppress_evaluation() (cil.optimisation.functions.indicatorbox method)": [[8, "cil.optimisation.functions.IndicatorBox.set_suppress_evaluation", false]], "set_up() (cil.io.nexusdatareader method)": [[7, "cil.io.NEXUSDataReader.set_up", false]], "set_up() (cil.io.nexusdatawriter method)": [[7, "cil.io.NEXUSDataWriter.set_up", false]], "set_up() (cil.io.zeissdatareader method)": [[7, "cil.io.ZEISSDataReader.set_up", false]], "set_up() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.set_up", false]], "set_up() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.set_up", false]], "set_up() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.set_up", false]], "set_up() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.set_up", false]], "set_up() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.set_up", false]], "set_up() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.set_up", false]], "set_up() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.set_up", false]], "set_up() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.set_up", false]], "set_up() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.set_up", false]], "sgfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.SGFunction", false]], "shape (cil.framework.acquisitiondata property)": [[4, "cil.framework.AcquisitionData.shape", false]], "shape (cil.framework.datacontainer property)": [[4, "cil.framework.DataContainer.shape", false]], "shape (cil.framework.imagedata property)": [[4, "cil.framework.ImageData.shape", false]], "shape (cil.framework.vectordata property)": [[4, "cil.framework.VectorData.shape", false]], "should_stop() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.should_stop", false]], "should_stop() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.should_stop", false]], "should_stop() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.should_stop", false]], "should_stop() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.should_stop", false]], "should_stop() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.should_stop", false]], "should_stop() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.should_stop", false]], "should_stop() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.should_stop", false]], "should_stop() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.should_stop", false]], "should_stop() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.should_stop", false]], "show1d (class in cil.utilities.display)": [[12, "cil.utilities.display.show1D", false]], "show2d (class in cil.utilities.display)": [[12, "cil.utilities.display.show2D", false]], "show_geometry (class in cil.utilities.display)": [[12, "cil.utilities.display.show_geometry", false]], "simulated_cone_beam_data (class in cil.utilities.dataexample)": [[12, "cil.utilities.dataexample.SIMULATED_CONE_BEAM_DATA", false], [12, "id0", false]], "simulated_parallel_beam_data (class in cil.utilities.dataexample)": [[12, "cil.utilities.dataexample.SIMULATED_PARALLEL_BEAM_DATA", false]], "sirt (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.SIRT", false]], "size (cil.framework.acquisitiondata property)": [[4, "cil.framework.AcquisitionData.size", false]], "size (cil.framework.datacontainer property)": [[4, "cil.framework.DataContainer.size", false]], "size (cil.framework.imagedata property)": [[4, "cil.framework.ImageData.size", false]], "size (cil.framework.vectordata property)": [[4, "cil.framework.VectorData.size", false]], "slice_metadata() (cil.io.zeissdatareader method)": [[7, "cil.io.ZEISSDataReader.slice_metadata", false]], "slicer (class in cil.processors)": [[10, "cil.processors.Slicer", false]], "smoothmixedl21norm (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.SmoothMixedL21Norm", false]], "sparsefinitedifferenceoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.SparseFiniteDifferenceOperator", false]], "spdhg (class in cil.optimisation.algorithms)": [[8, "cil.optimisation.algorithms.SPDHG", false]], "special_values() (cil.processors.maskgenerator static method)": [[10, "cil.processors.MaskGenerator.special_values", false]], "squared_norm() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.squared_norm", false]], "squared_norm() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.squared_norm", false]], "squared_norm() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.squared_norm", false]], "squared_norm() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.squared_norm", false]], "staggered() (cil.optimisation.utilities.sampler static method)": [[8, "cil.optimisation.utilities.Sampler.staggered", false], [8, "id35", false]], "subtract() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.subtract", false], [8, "cil.framework.BlockDataContainer.subtract", false]], "sum() (cil.framework.acquisitiondata method)": [[4, "cil.framework.AcquisitionData.sum", false]], "sum() (cil.framework.datacontainer method)": [[4, "cil.framework.DataContainer.sum", false]], "sum() (cil.framework.imagedata method)": [[4, "cil.framework.ImageData.sum", false]], "sum() (cil.framework.vectordata method)": [[4, "cil.framework.VectorData.sum", false]], "sumfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.SumFunction", false]], "sumoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.SumOperator", false]], "sumscalarfunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.SumScalarFunction", false]], "symmetric() (cil.processors.padder static method)": [[10, "cil.processors.Padder.symmetric", false]], "symmetrisedgradientoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.SymmetrisedGradientOperator", false]], "synchrotron_parallel_beam_data (class in cil.utilities.dataexample)": [[12, "cil.utilities.dataexample.SYNCHROTRON_PARALLEL_BEAM_DATA", false]], "t (cil.optimisation.operators.blockoperator property)": [[8, "cil.optimisation.operators.BlockOperator.T", false]], "testdata (class in cil.utilities.dataexample)": [[12, "cil.utilities.dataexample.TestData", false]], "textprogresscallback (class in cil.optimisation.utilities.callbacks)": [[8, "cil.optimisation.utilities.callbacks.TextProgressCallback", false]], "tgv (class in cil.plugins.ccpi_regularisation.functions)": [[9, "cil.plugins.ccpi_regularisation.functions.TGV", false]], "threshold() (cil.processors.maskgenerator static method)": [[10, "cil.processors.MaskGenerator.threshold", false]], "tiffstackreader (class in cil.io)": [[7, "cil.io.TIFFStackReader", false]], "tiffwriter (class in cil.io)": [[7, "cil.io.TIFFWriter", false]], "tnv (class in cil.plugins.ccpi_regularisation.functions)": [[9, "cil.plugins.ccpi_regularisation.functions.TNV", false]], "totalvariation (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.TotalVariation", false]], "translatefunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.TranslateFunction", false]], "transmissionabsorptionconverter (class in cil.processors)": [[10, "cil.processors.TransmissionAbsorptionConverter", false]], "unary_operations() (cil.framework.blockdatacontainer method)": [[4, "cil.framework.BlockDataContainer.unary_operations", false], [8, "cil.framework.BlockDataContainer.unary_operations", false]], "update() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.update", false]], "update() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.update", false]], "update() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.update", false]], "update() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.update", false]], "update() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.update", false]], "update() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.update", false]], "update() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.update", false]], "update() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.update", false]], "update() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.update", false]], "update_objective() (cil.optimisation.algorithms.algorithm method)": [[8, "cil.optimisation.algorithms.Algorithm.update_objective", false]], "update_objective() (cil.optimisation.algorithms.cgls method)": [[8, "cil.optimisation.algorithms.CGLS.update_objective", false]], "update_objective() (cil.optimisation.algorithms.fista method)": [[8, "cil.optimisation.algorithms.FISTA.update_objective", false]], "update_objective() (cil.optimisation.algorithms.gd method)": [[8, "cil.optimisation.algorithms.GD.update_objective", false]], "update_objective() (cil.optimisation.algorithms.ista method)": [[8, "cil.optimisation.algorithms.ISTA.update_objective", false]], "update_objective() (cil.optimisation.algorithms.ladmm method)": [[8, "cil.optimisation.algorithms.LADMM.update_objective", false]], "update_objective() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.update_objective", false]], "update_objective() (cil.optimisation.algorithms.sirt method)": [[8, "cil.optimisation.algorithms.SIRT.update_objective", false]], "update_objective() (cil.optimisation.algorithms.spdhg method)": [[8, "cil.optimisation.algorithms.SPDHG.update_objective", false]], "update_step_sizes() (cil.optimisation.algorithms.pdhg method)": [[8, "cil.optimisation.algorithms.PDHG.update_step_sizes", false]], "value() (cil.processors.masker static method)": [[10, "cil.processors.Masker.value", false]], "vectordata (class in cil.framework)": [[4, "cil.framework.VectorData", false]], "waveletoperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.WaveletOperator", false]], "weightedl2normsquared (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.WeightedL2NormSquared", false]], "wrap() (cil.processors.padder static method)": [[10, "cil.processors.Padder.wrap", false]], "write() (cil.io.nexusdatawriter method)": [[7, "cil.io.NEXUSDataWriter.write", false]], "write() (cil.io.rawfilewriter method)": [[7, "cil.io.RAWFileWriter.write", false]], "write() (cil.io.tiffwriter method)": [[7, "cil.io.TIFFWriter.write", false]], "xcorrelation() (cil.processors.centreofrotationcorrector static method)": [[10, "cil.processors.CentreOfRotationCorrector.xcorrelation", false]], "zeissdatareader (class in cil.io)": [[7, "cil.io.ZEISSDataReader", false]], "zerofunction (class in cil.optimisation.functions)": [[8, "cil.optimisation.functions.ZeroFunction", false]], "zerooperator (class in cil.optimisation.operators)": [[8, "cil.optimisation.operators.ZeroOperator", false]]}, "objects": {"cil.framework": [[4, 0, 1, "", "AcquisitionData"], [4, 0, 1, "", "AcquisitionGeometry"], [8, 0, 1, "", "BlockDataContainer"], [4, 0, 1, "", "BlockGeometry"], [4, 0, 1, "", "DataContainer"], [4, 0, 1, "", "DataOrder"], [4, 0, 1, "", "DataProcessor"], [4, 0, 1, "", "ImageData"], [4, 0, 1, "", "ImageGeometry"], [4, 0, 1, "", "Processor"], [4, 0, 1, "", "VectorData"]], "cil.framework.AcquisitionData": [[4, 1, 1, "", "as_array"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "dot"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "fill"], [4, 1, 1, "", "get_data_axes_order"], [4, 1, 1, "", "get_dimension_axis"], [4, 1, 1, "", "get_slice"], [4, 1, 1, "", "log"], [4, 1, 1, "", "max"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "min"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "norm"], [4, 2, 1, "", "number_of_dimensions"], [4, 1, 1, "", "partition"], [4, 1, 1, "", "reorder"], [4, 1, 1, "", "sapyb"], [4, 2, 1, "", "shape"], [4, 2, 1, "", "size"], [4, 1, 1, "", "squared_norm"], [4, 1, 1, "", "sum"]], "cil.framework.AcquisitionGeometry": [[4, 1, 1, "", "allocate"], [4, 1, 1, "", "create_Cone2D"], [4, 1, 1, "", "create_Cone3D"], [4, 1, 1, "", "create_Parallel2D"], [4, 1, 1, "", "create_Parallel3D"], [4, 1, 1, "", "get_ImageGeometry"], [4, 1, 1, "", "get_slice"], [4, 1, 1, "", "set_angles"], [4, 1, 1, "", "set_channels"], [4, 1, 1, "", "set_labels"], [4, 1, 1, "", "set_panel"]], "cil.framework.BlockDataContainer": [[8, 1, 1, "", "__iadd__"], [8, 1, 1, "", "__idiv__"], [8, 1, 1, "", "__imul__"], [8, 1, 1, "", "__isub__"], [8, 1, 1, "", "__iter__"], [8, 1, 1, "", "__itruediv__"], [8, 1, 1, "", "__neg__"], [8, 1, 1, "", "__radd__"], [8, 1, 1, "", "__rdiv__"], [8, 1, 1, "", "__rmul__"], [8, 1, 1, "", "__rpow__"], [8, 1, 1, "", "__rsub__"], [8, 1, 1, "", "__rtruediv__"], [8, 3, 1, "", "__weakref__"], [8, 1, 1, "", "add"], [8, 1, 1, "", "axpby"], [8, 1, 1, "", "binary_operations"], [8, 1, 1, "", "copy"], [8, 1, 1, "", "divide"], [8, 1, 1, "", "is_compatible"], [8, 1, 1, "", "maximum"], [8, 1, 1, "", "minimum"], [8, 1, 1, "", "multiply"], [8, 1, 1, "", "next"], [8, 1, 1, "", "power"], [8, 1, 1, "", "sapyb"], [8, 1, 1, "", "subtract"], [8, 1, 1, "", "unary_operations"]], "cil.framework.BlockGeometry": [[4, 1, 1, "", "allocate"], [4, 1, 1, "", "get_item"]], "cil.framework.DataContainer": [[4, 1, 1, "", "as_array"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "dot"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "fill"], [4, 1, 1, "", "get_data_axes_order"], [4, 1, 1, "", "get_dimension_axis"], [4, 1, 1, "", "get_slice"], [4, 1, 1, "", "log"], [4, 1, 1, "", "max"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "min"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "norm"], [4, 2, 1, "", "number_of_dimensions"], [4, 1, 1, "", "reorder"], [4, 1, 1, "", "sapyb"], [4, 2, 1, "", "shape"], [4, 2, 1, "", "size"], [4, 1, 1, "", "squared_norm"], [4, 1, 1, "", "sum"]], "cil.framework.DataProcessor": [[4, 1, 1, "", "check_input"], [4, 1, 1, "", "get_input"], [4, 1, 1, "", "get_output"], [4, 1, 1, "", "set_input"]], "cil.framework.ImageData": [[4, 1, 1, "", "apply_circular_mask"], [4, 1, 1, "", "as_array"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "dot"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "fill"], [4, 1, 1, "", "get_data_axes_order"], [4, 1, 1, "", "get_dimension_axis"], [4, 1, 1, "", "get_slice"], [4, 1, 1, "", "log"], [4, 1, 1, "", "max"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "min"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "norm"], [4, 2, 1, "", "number_of_dimensions"], [4, 1, 1, "", "reorder"], [4, 1, 1, "", "sapyb"], [4, 2, 1, "", "shape"], [4, 2, 1, "", "size"], [4, 1, 1, "", "squared_norm"], [4, 1, 1, "", "sum"]], "cil.framework.ImageGeometry": [[4, 1, 1, "", "allocate"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "get_slice"]], "cil.framework.Processor": [[4, 1, 1, "", "check_input"], [4, 1, 1, "", "get_input"], [4, 1, 1, "", "get_output"], [4, 1, 1, "", "set_input"]], "cil.framework.VectorData": [[4, 1, 1, "", "as_array"], [4, 1, 1, "", "clone"], [4, 1, 1, "", "copy"], [4, 1, 1, "", "dot"], [4, 2, 1, "", "dtype"], [4, 1, 1, "", "exp"], [4, 1, 1, "", "fill"], [4, 1, 1, "", "get_data_axes_order"], [4, 1, 1, "", "get_dimension_axis"], [4, 1, 1, "", "get_slice"], [4, 1, 1, "", "log"], [4, 1, 1, "", "max"], [4, 1, 1, "", "mean"], [4, 1, 1, "", "min"], [4, 2, 1, "", "ndim"], [4, 1, 1, "", "norm"], [4, 2, 1, "", "number_of_dimensions"], [4, 1, 1, "", "reorder"], [4, 1, 1, "", "sapyb"], [4, 2, 1, "", "shape"], [4, 2, 1, "", "size"], [4, 1, 1, "", "squared_norm"], [4, 1, 1, "", "sum"]], "cil.io": [[7, 0, 1, "", "NEXUSDataReader"], [7, 0, 1, "", "NEXUSDataWriter"], [7, 0, 1, "", "NikonDataReader"], [7, 0, 1, "", "RAWFileWriter"], [7, 0, 1, "", "TIFFStackReader"], [7, 0, 1, "", "TIFFWriter"], [7, 0, 1, "", "ZEISSDataReader"]], "cil.io.NEXUSDataReader": [[7, 1, 1, "", "get_data_offset"], [7, 1, 1, "", "get_data_scale"], [7, 1, 1, "", "get_geometry"], [7, 1, 1, "", "load_data"], [7, 1, 1, "", "read"], [7, 1, 1, "", "read_as_original"], [7, 1, 1, "", "set_up"]], "cil.io.NEXUSDataWriter": [[7, 1, 1, "", "set_up"], [7, 1, 1, "", "write"]], "cil.io.NikonDataReader": [[7, 1, 1, "", "get_geometry"], [7, 1, 1, "", "get_roi"], [7, 1, 1, "", "load_projections"], [7, 1, 1, "", "read"]], "cil.io.RAWFileWriter": [[7, 1, 1, "", "write"]], "cil.io.TIFFStackReader": [[7, 1, 1, "", "read"], [7, 1, 1, "", "read_as_AcquisitionData"], [7, 1, 1, "", "read_as_ImageData"], [7, 1, 1, "", "read_rescaled"], [7, 1, 1, "", "read_scale_offset"]], "cil.io.TIFFWriter": [[7, 1, 1, "", "write"]], "cil.io.ZEISSDataReader": [[7, 1, 1, "", "get_geometry"], [7, 1, 1, "", "get_metadata"], [7, 1, 1, "", "read"], [7, 1, 1, "", "set_up"], [7, 1, 1, "", "slice_metadata"]], "cil.io.utilities": [[7, 0, 1, "", "HDF5_utilities"]], "cil.io.utilities.HDF5_utilities": [[7, 1, 1, "", "get_dataset_metadata"], [7, 1, 1, "", "print_metadata"], [7, 1, 1, "", "read"], [7, 1, 1, "", "read_to"]], "cil.optimisation.algorithms": [[8, 0, 1, "", "Algorithm"], [8, 0, 1, "", "CGLS"], [8, 0, 1, "", "FISTA"], [8, 0, 1, "", "GD"], [8, 0, 1, "", "ISTA"], [8, 0, 1, "", "LADMM"], [8, 0, 1, "", "PDHG"], [8, 0, 1, "", "SIRT"], [8, 0, 1, "", "SPDHG"]], "cil.optimisation.algorithms.Algorithm": [[8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.CGLS": [[8, 1, 1, "", "flag"], [8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.FISTA": [[8, 1, 1, "", "__delattr__"], [8, 1, 1, "", "__dir__"], [8, 1, 1, "", "__eq__"], [8, 1, 1, "", "__format__"], [8, 1, 1, "", "__ge__"], [8, 1, 1, "", "__getattribute__"], [8, 1, 1, "", "__getstate__"], [8, 1, 1, "", "__gt__"], [8, 1, 1, "", "__hash__"], [8, 1, 1, "", "__init__"], [8, 1, 1, "", "__init_subclass__"], [8, 1, 1, "", "__iter__"], [8, 1, 1, "", "__le__"], [8, 1, 1, "", "__lt__"], [8, 1, 1, "", "__ne__"], [8, 1, 1, "", "__new__"], [8, 1, 1, "", "__next__"], [8, 1, 1, "", "__reduce__"], [8, 1, 1, "", "__reduce_ex__"], [8, 1, 1, "", "__repr__"], [8, 1, 1, "", "__setattr__"], [8, 1, 1, "", "__sizeof__"], [8, 1, 1, "", "__str__"], [8, 1, 1, "", "__subclasshook__"], [8, 3, 1, "", "__weakref__"], [8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_step_size"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.GD": [[8, 1, 1, "", "armijo_rule"], [8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.ISTA": [[8, 1, 1, "", "__delattr__"], [8, 1, 1, "", "__dir__"], [8, 1, 1, "", "__eq__"], [8, 1, 1, "", "__format__"], [8, 1, 1, "", "__ge__"], [8, 1, 1, "", "__getattribute__"], [8, 1, 1, "", "__getstate__"], [8, 1, 1, "", "__gt__"], [8, 1, 1, "", "__hash__"], [8, 1, 1, "", "__init__"], [8, 1, 1, "", "__init_subclass__"], [8, 1, 1, "", "__iter__"], [8, 1, 1, "", "__le__"], [8, 1, 1, "", "__lt__"], [8, 1, 1, "", "__ne__"], [8, 1, 1, "", "__new__"], [8, 1, 1, "", "__next__"], [8, 1, 1, "", "__reduce__"], [8, 1, 1, "", "__reduce_ex__"], [8, 1, 1, "", "__repr__"], [8, 1, 1, "", "__setattr__"], [8, 1, 1, "", "__sizeof__"], [8, 1, 1, "", "__str__"], [8, 1, 1, "", "__subclasshook__"], [8, 3, 1, "", "__weakref__"], [8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_step_size"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.LADMM": [[8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.PDHG": [[8, 1, 1, "", "check_convergence"], [8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_gamma_fconj"], [8, 1, 1, "", "set_gamma_g"], [8, 1, 1, "", "set_step_sizes"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"], [8, 1, 1, "", "update_step_sizes"]], "cil.optimisation.algorithms.SIRT": [[8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_relaxation_parameter"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.algorithms.SPDHG": [[8, 1, 1, "", "get_last_loss"], [8, 1, 1, "", "get_last_objective"], [8, 1, 1, "", "get_output"], [8, 1, 1, "", "is_provably_convergent"], [8, 2, 1, "", "iterations"], [8, 2, 1, "", "loss"], [8, 2, 1, "", "max_iteration"], [8, 2, 1, "", "objective"], [8, 1, 1, "", "run"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "should_stop"], [8, 1, 1, "", "update"], [8, 1, 1, "", "update_objective"]], "cil.optimisation.functions": [[8, 0, 1, "", "ApproximateGradientSumFunction"], [8, 0, 1, "", "BlockFunction"], [8, 0, 1, "", "ConstantFunction"], [8, 0, 1, "", "Function"], [8, 0, 1, "", "IndicatorBox"], [8, 0, 1, "", "KullbackLeibler"], [8, 0, 1, "", "L1Norm"], [8, 0, 1, "", "L1Sparsity"], [8, 0, 1, "", "L2NormSquared"], [8, 0, 1, "", "LeastSquares"], [8, 0, 1, "", "MixedL11Norm"], [8, 0, 1, "", "MixedL21Norm"], [8, 0, 1, "", "OperatorCompositionFunction"], [8, 0, 1, "", "Rosenbrock"], [8, 0, 1, "", "SGFunction"], [8, 0, 1, "", "ScaledFunction"], [8, 0, 1, "", "SmoothMixedL21Norm"], [8, 0, 1, "", "SumFunction"], [8, 0, 1, "", "SumScalarFunction"], [8, 0, 1, "", "TotalVariation"], [8, 0, 1, "", "TranslateFunction"], [8, 0, 1, "", "WeightedL2NormSquared"], [8, 0, 1, "", "ZeroFunction"]], "cil.optimisation.functions.ApproximateGradientSumFunction": [[8, 2, 1, "", "L"], [8, 2, 1, "", "Lmax"], [8, 1, 1, "", "approximate_gradient"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 2, 1, "", "data_passes"], [8, 2, 1, "", "data_passes_indices"], [8, 1, 1, "", "full_gradient"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"], [8, 1, 1, "", "set_data_partition_weights"]], "cil.optimisation.functions.BlockFunction": [[8, 2, 1, "", "L"], [8, 1, 1, "", "__call__"], [8, 1, 1, "", "__init__"], [8, 1, 1, "", "__rmul__"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.ConstantFunction": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.Function": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.IndicatorBox": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 2, 1, "", "num_threads"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"], [8, 1, 1, "", "set_num_threads"], [8, 1, 1, "", "set_suppress_evaluation"]], "cil.optimisation.functions.KullbackLeibler": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.L1Norm": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.L1Sparsity": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.L2NormSquared": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.LeastSquares": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.MixedL11Norm": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.MixedL21Norm": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.OperatorCompositionFunction": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.Rosenbrock": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SGFunction": [[8, 2, 1, "", "L"], [8, 2, 1, "", "Lmax"], [8, 1, 1, "", "approximate_gradient"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 2, 1, "", "data_passes"], [8, 2, 1, "", "data_passes_indices"], [8, 1, 1, "", "full_gradient"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"], [8, 1, 1, "", "set_data_partition_weights"]], "cil.optimisation.functions.ScaledFunction": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SmoothMixedL21Norm": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SumFunction": [[8, 2, 1, "", "L"], [8, 2, 1, "", "Lmax"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SumScalarFunction": [[8, 2, 1, "", "L"], [8, 2, 1, "", "Lmax"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.TotalVariation": [[8, 2, 1, "", "L"], [8, 1, 1, "", "calculate_Lipschitz"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 2, 1, "", "gradient_operator"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.TranslateFunction": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.WeightedL2NormSquared": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.ZeroFunction": [[8, 2, 1, "", "L"], [8, 1, 1, "", "centered_at"], [8, 1, 1, "", "convex_conjugate"], [8, 1, 1, "", "gradient"], [8, 1, 1, "", "proximal"], [8, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.operators": [[8, 0, 1, "", "BlockOperator"], [8, 0, 1, "", "ChannelwiseOperator"], [8, 0, 1, "", "CompositionOperator"], [8, 0, 1, "", "DiagonalOperator"], [8, 0, 1, "", "FiniteDifferenceOperator"], [8, 0, 1, "", "GradientOperator"], [8, 0, 1, "", "IdentityOperator"], [8, 0, 1, "", "LinearOperator"], [8, 0, 1, "", "MaskOperator"], [8, 0, 1, "", "MatrixOperator"], [8, 0, 1, "", "Operator"], [8, 0, 1, "", "ProjectionMap"], [8, 0, 1, "", "ScaledOperator"], [8, 0, 1, "", "SparseFiniteDifferenceOperator"], [8, 0, 1, "", "SumOperator"], [8, 0, 1, "", "SymmetrisedGradientOperator"], [8, 0, 1, "", "WaveletOperator"], [8, 0, 1, "", "ZeroOperator"]], "cil.optimisation.operators.BlockOperator": [[8, 2, 1, "", "T"], [8, 1, 1, "", "__getitem__"], [8, 1, 1, "", "__init__"], [8, 1, 1, "", "__rmul__"], [8, 1, 1, "", "adjoint"], [8, 1, 1, "", "column_wise_compatible"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "domain_geometry"], [8, 1, 1, "", "get_as_list"], [8, 1, 1, "", "get_item"], [8, 1, 1, "", "get_norms_as_list"], [8, 1, 1, "", "get_output_shape"], [8, 1, 1, "", "is_linear"], [8, 1, 1, "", "norm"], [8, 1, 1, "", "range_geometry"], [8, 1, 1, "", "row_wise_compatible"], [8, 1, 1, "", "set_norms"]], "cil.optimisation.operators.ChannelwiseOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.CompositionOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "is_linear"]], "cil.optimisation.operators.DiagonalOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.FiniteDifferenceOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.GradientOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.IdentityOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "is_orthogonal"]], "cil.optimisation.operators.LinearOperator": [[8, 1, 1, "", "PowerMethod"], [8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "dot_test"], [8, 1, 1, "", "is_linear"]], "cil.optimisation.operators.MatrixOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.Operator": [[8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "domain_geometry"], [8, 1, 1, "", "is_linear"], [8, 1, 1, "", "is_orthogonal"], [8, 1, 1, "", "norm"], [8, 1, 1, "", "range_geometry"], [8, 1, 1, "", "set_norm"]], "cil.optimisation.operators.ProjectionMap": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.ScaledOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "is_linear"], [8, 1, 1, "", "norm"]], "cil.optimisation.operators.SparseFiniteDifferenceOperator": [[8, 1, 1, "", "direct"]], "cil.optimisation.operators.SumOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "is_linear"]], "cil.optimisation.operators.SymmetrisedGradientOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "direct"]], "cil.optimisation.operators.WaveletOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"], [8, 1, 1, "", "is_orthogonal"]], "cil.optimisation.operators.ZeroOperator": [[8, 1, 1, "", "adjoint"], [8, 1, 1, "", "calculate_norm"], [8, 1, 1, "", "direct"]], "cil.optimisation.utilities": [[8, 0, 1, "", "Sampler"], [8, 0, 1, "", "SamplerRandom"]], "cil.optimisation.utilities.Sampler": [[8, 1, 1, "id38", "from_function"], [8, 1, 1, "", "get_samples"], [8, 1, 1, "id39", "herman_meyer"], [8, 1, 1, "", "next"], [8, 1, 1, "id36", "random_with_replacement"], [8, 1, 1, "id37", "random_without_replacement"], [8, 1, 1, "id0", "sequential"], [8, 1, 1, "id35", "staggered"]], "cil.optimisation.utilities.SamplerRandom": [[8, 1, 1, "", "get_samples"]], "cil.optimisation.utilities.callbacks": [[8, 0, 1, "", "Callback"], [8, 0, 1, "", "LogfileCallback"], [8, 0, 1, "", "ProgressCallback"], [8, 0, 1, "", "TextProgressCallback"]], "cil.plugins.TomoPhantom": [[9, 4, 1, "", "get_ImageData"]], "cil.plugins.astra": [[9, 0, 1, "", "FBP"], [9, 0, 1, "", "ProjectionOperator"]], "cil.plugins.astra.FBP": [[9, 1, 1, "", "get_output"], [9, 1, 1, "", "set_input"]], "cil.plugins.ccpi_regularisation.functions": [[9, 0, 1, "", "FGP_TV"], [9, 0, 1, "", "FGP_dTV"], [9, 0, 1, "", "TGV"], [9, 0, 1, "", "TNV"]], "cil.plugins.ccpi_regularisation.functions.FGP_dTV": [[9, 1, 1, "", "__call__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__rmul__"], [9, 1, 1, "", "convex_conjugate"]], "cil.plugins.ccpi_regularisation.functions.TGV": [[9, 1, 1, "", "__call__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__rmul__"], [9, 1, 1, "", "convex_conjugate"]], "cil.plugins.ccpi_regularisation.functions.TNV": [[9, 1, 1, "", "__call__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__rmul__"], [9, 1, 1, "", "check_input"], [9, 1, 1, "", "convex_conjugate"]], "cil.plugins.tigre": [[9, 0, 1, "", "FBP"], [9, 0, 1, "", "ProjectionOperator"]], "cil.plugins.tigre.FBP": [[9, 1, 1, "", "get_output"], [9, 1, 1, "", "set_input"]], "cil.processors": [[10, 0, 1, "", "AbsorptionTransmissionConverter"], [10, 0, 1, "", "Binner"], [10, 0, 1, "", "CentreOfRotationCorrector"], [10, 0, 1, "", "MaskGenerator"], [10, 0, 1, "", "Masker"], [10, 0, 1, "", "Normaliser"], [10, 0, 1, "", "Padder"], [10, 0, 1, "", "RingRemover"], [10, 0, 1, "", "Slicer"], [10, 0, 1, "", "TransmissionAbsorptionConverter"]], "cil.processors.AbsorptionTransmissionConverter": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "set_input"]], "cil.processors.Binner": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "process"], [10, 1, 1, "", "set_input"]], "cil.processors.CentreOfRotationCorrector": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "image_sharpness"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "xcorrelation"]], "cil.processors.MaskGenerator": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "mean"], [10, 1, 1, "", "median"], [10, 1, 1, "", "quantile"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "special_values"], [10, 1, 1, "", "threshold"]], "cil.processors.Masker": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "interpolate"], [10, 1, 1, "", "mean"], [10, 1, 1, "", "median"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "value"]], "cil.processors.Normaliser": [[10, 1, 1, "", "estimate_normalised_error"], [10, 1, 1, "", "get_output"], [10, 1, 1, "", "set_input"]], "cil.processors.Padder": [[10, 1, 1, "", "constant"], [10, 1, 1, "", "edge"], [10, 1, 1, "", "get_output"], [10, 1, 1, "", "linear_ramp"], [10, 1, 1, "", "reflect"], [10, 1, 1, "", "set_input"], [10, 1, 1, "", "symmetric"], [10, 1, 1, "", "wrap"]], "cil.processors.RingRemover": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "set_input"]], "cil.processors.Slicer": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "process"], [10, 1, 1, "", "set_input"]], "cil.processors.TransmissionAbsorptionConverter": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "set_input"]], "cil.recon": [[11, 0, 1, "", "FBP"], [11, 0, 1, "", "FDK"]], "cil.recon.FBP": [[11, 1, 1, "", "get_filter_array"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "run"], [11, 1, 1, "", "set_fft_order"], [11, 1, 1, "", "set_filter"], [11, 1, 1, "", "set_filter_inplace"], [11, 1, 1, "", "set_image_geometry"], [11, 1, 1, "", "set_input"], [11, 1, 1, "", "set_split_processing"]], "cil.recon.FBP.FBP": [[3, 1, 1, "", "run"]], "cil.recon.FDK": [[11, 1, 1, "", "get_filter_array"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "run"], [11, 1, 1, "", "set_fft_order"], [11, 1, 1, "", "set_filter"], [11, 1, 1, "", "set_filter_inplace"], [11, 1, 1, "", "set_image_geometry"], [11, 1, 1, "", "set_input"]], "cil.utilities": [[12, 5, 0, "-", "quality_measures"]], "cil.utilities.dataexample": [[12, 0, 1, "id0", "SIMULATED_CONE_BEAM_DATA"], [12, 0, 1, "", "SIMULATED_PARALLEL_BEAM_DATA"], [12, 0, 1, "", "SYNCHROTRON_PARALLEL_BEAM_DATA"], [12, 0, 1, "", "TestData"]], "cil.utilities.dataexample.SIMULATED_CONE_BEAM_DATA": [[12, 1, 1, "id1", "get"]], "cil.utilities.dataexample.SIMULATED_PARALLEL_BEAM_DATA": [[12, 1, 1, "", "get"]], "cil.utilities.dataexample.SYNCHROTRON_PARALLEL_BEAM_DATA": [[12, 1, 1, "", "get"]], "cil.utilities.dataexample.TestData": [[12, 1, 1, "", "load"], [12, 1, 1, "", "random_noise"], [12, 1, 1, "", "scikit_random_noise"]], "cil.utilities.display": [[12, 0, 1, "", "show1D"], [12, 0, 1, "", "show2D"], [12, 0, 1, "", "show_geometry"]], "cil.utilities.display.show1D": [[12, 3, 1, "", "figure"], [12, 1, 1, "", "save"]], "cil.utilities.display.show2D": [[12, 1, 1, "", "save"]], "cil.utilities.display.show_geometry": [[12, 1, 1, "", "save"]], "cil.utilities.jupyter": [[12, 0, 1, "", "islicer"], [12, 0, 1, "", "link_islicer"]], "cil.utilities.quality_measures": [[12, 4, 1, "", "mae"], [12, 4, 1, "", "mse"], [12, 4, 1, "", "psnr"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "terms": {"": [2, 3, 4, 7, 8, 12], "0": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "00": 8, "000": 2, "0000654846240296": 8, "0005647295658866": 8, "001": 2, "00186": 8, "003": 9, "005": [2, 10], "008": 8, "008567": 10, "01": [2, 9, 12], "010": 8, "018": 8, "0192": [5, 8], "0193": [5, 8], "020": 8, "0251": 8, "025129": 9, "03": 2, "04": [2, 9], "05": [1, 8, 9, 10, 12], "055010": 9, "05e": 8, "06": [2, 8], "07002e": 2, "07019e": 2, "07526e": 2, "08": 8, "080716542": 8, "081": 2, "09076934x": 8, "0x7f4f2021b230": 1, "0x7f4f2027b230": 1, "0x7f4f205c5c10": 1, "0x7f4f22bc5520": 1, "0x7f4f230b74d0": 1, "0x7f4f234b3ec0": 1, "0x7f4f2350deb0": 1, "0x7f4f706bc5c0": 1, "1": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12], "10": [1, 2, 4, 5, 7, 8, 9, 10, 12], "100": [1, 2, 7, 8, 9], "1000": [1, 2], "1000000": 8, "1007": 8, "1015": 8, "1016": 9, "1024": 1, "1046": 8, "105": 2, "106": 2, "108": 2, "1088": 9, "109": 2, "1098": [5, 8], "11": [1, 2, 4, 8], "110": 2, "1102995080": 8, "1109": 8, "111": 2, "1137": 8, "11770": 8, "12": [1, 2, 8, 11], "120": [8, 10], "128": [9, 10], "13": 2, "130": 2, "1321": 8, "1364": [9, 10], "14": 2, "145": 8, "15": [2, 8, 11, 12], "1533217": 8, "16": [2, 7, 8, 11], "16038e": 2, "16896e": 2, "17": [8, 10], "170": 1, "171": 1, "172": 1, "173": 1, "174": 1, "175": 1, "176": 1, "177": 1, "178": 1, "179": 1, "18": 8, "180": [1, 10], "183": 8, "1887": 11, "189": 2, "194": 2, "1976": 9, "1992": 8, "1d": [1, 4, 5, 6, 10], "1e": [2, 8, 10], "1k": 2, "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "20": [8, 12], "200": [1, 7, 10], "2001": 8, "2003": 8, "2007": 2, "2008": 11, "2009": 8, "2010": 8, "2011": 8, "2016": 8, "2017": [8, 11], "2018": [8, 9], "2019": [8, 9, 12], "202": 8, "2020": [5, 8], "20200192": [2, 5, 8], "20200193": [5, 8], "2021": [1, 2, 5, 8], "2022": [1, 3, 8], "2023": 2, "2028250": 8, "2048": 1, "2057": 9, "21": 8, "213659415696782e": 2, "22": 8, "2204": [2, 8], "23": [5, 8, 10], "24": 9, "2419": 8, "2434": 8, "25": 8, "256": 12, "2783": 8, "28": 8, "2808": 8, "2_2": [6, 8], "2beta": 8, "2c": 8, "2ca": 8, "2d": [1, 3, 4, 5, 6, 8, 9, 10], "2pi": 9, "2w": 8, "2wx": 8, "2x": [1, 8], "3": [1, 2, 4, 7, 8, 9, 10, 12], "300": [7, 8], "32": [4, 11], "35": 12, "360": 9, "360deg": 10, "377": 8, "379": [2, 8], "381": 8, "3d": [1, 3, 4, 6, 7, 8, 9, 10, 12], "4": [1, 2, 4, 6, 7, 8, 9, 10], "40": 8, "400": 8, "430": 8, "46": 2, "47": 8, "48289": 11, "4d": [6, 7, 8, 9, 12], "4t_": 8, "5": [1, 2, 4, 7, 8, 9, 10, 12], "50": [8, 9, 12], "500": [1, 12], "550": 7, "5x": 1, "6": [1, 2, 4, 7, 8, 10, 12], "64": 8, "640x480": 2, "649": 8, "664": 8, "7": [1, 2, 4, 8, 10], "7142857142857": 7, "73406e": 2, "73899e": 2, "73it": 8, "76": 8, "8": [1, 2, 4, 7, 8, 10, 11, 12], "87": 8, "9": [1, 2, 7, 8], "9225": 8, "9780898719277": 8, "99": 4, "9ntwu9megq": 5, "A": [2, 4, 5, 6, 7, 8, 9, 10, 11], "AND": 12, "AS": [1, 2, 3, 12], "And": 1, "As": [1, 8], "At": 1, "BE": 12, "BUT": 12, "BY": 12, "By": [7, 8], "FOR": 12, "For": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12], "IF": 12, "IN": 12, "If": [1, 4, 5, 7, 8, 9, 10, 11, 12], "In": [1, 4, 6, 7, 8, 10, 12], "It": [1, 3, 4, 6, 8, 9, 10, 11], "NO": 12, "NOT": 12, "No": [1, 3, 11], "OF": [1, 2, 3, 12], "ON": 12, "OR": [1, 2, 3, 12], "Of": 5, "On": [2, 8], "One": [1, 12], "Or": 10, "SUCH": 12, "THE": 12, "TO": 12, "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "Then": 8, "There": [4, 8], "These": [1, 7, 10], "To": [1, 3, 6, 7, 8, 12], "Will": [4, 12], "With": [6, 8], "_": [3, 6, 8, 9], "_1": 8, "_2": [2, 8], "__array_priority__": 8, "__call__": [8, 9], "__delattr__": 8, "__dir__": 8, "__eq__": 8, "__format__": 8, "__ge__": 8, "__getattribute__": 8, "__getitem__": 8, "__getstate__": 8, "__gt__": 8, "__hash__": 8, "__iadd__": 8, "__idiv__": 8, "__imul__": 8, "__init__": [8, 9], "__init_subclass__": 8, "__isub__": 8, "__iter__": 8, "__itruediv__": 8, "__le__": 8, "__lt__": 8, "__mul__": 8, "__ne__": 8, "__neg__": 8, "__new__": 8, "__next__": 8, "__radd__": 8, "__rdiv__": 8, "__reduce__": 8, "__reduce_ex__": 8, "__repr__": 8, "__rmul__": [8, 9], "__rpow__": 8, "__rsub__": 8, "__rtruediv__": 8, "__setattr__": [4, 8], "__sizeof__": 8, "__str__": 8, "__subclasscheck__": 8, "__subclasshook__": 8, "__version__": 2, "__weakref__": 8, "_as_gen": 12, "_dual": [8, 9], "_gradient": 8, "_po_class": 3, "_pre_filt": 3, "_process_chunk": 3, "_setup_po_for_chunk": 3, "_slices_per_chunk": 3, "_tqdmtext": 8, "a_": 8, "a_partit": 8, "a_subset": 8, "ab": [4, 8, 10], "abc": 8, "abcmeta": 8, "abl": [6, 8, 9], "about": [7, 10], "about_original_data": 7, "abov": [1, 5, 6, 8, 9, 12], "absolut": [8, 10, 12], "absorpt": 5, "absorptiontransmissionconvert": 10, "abspath": 7, "abstract": 8, "ac": 2, "acc": 8, "acceler": [6, 8, 10], "accept": [3, 4, 7, 8, 10], "access": [1, 8], "accord": 4, "accordingli": 8, "account": 1, "accumul": 4, "accur": [8, 11], "accuraci": 10, "achiev": [6, 8, 10], "acquir": [6, 8], "acquisit": [1, 4, 5, 6, 7, 8, 9, 11, 12], "acquisition_data": 1, "acquisition_geometri": [3, 7, 9, 12], "acquisitiondata": [1, 5, 6, 8, 10, 11, 12], "acquisitiondataset": 10, "acquisitiongeomerti": 4, "acquisitiongeometri": [5, 6, 7, 8, 9, 10, 12], "across": [9, 10], "act": 8, "activ": 3, "actor": [6, 8], "actual": [3, 8], "ad": [8, 9], "ad1": 7, "adapt": 12, "add": [1, 3, 4, 8, 9, 12], "addit": [3, 4, 8, 10, 11, 12], "adher": 3, "adjoint": [3, 8, 9], "adjoint_weight": 9, "adjust": 7, "admm": 8, "advanc": [3, 6, 8], "advis": 12, "affect": 8, "after": [2, 8, 10, 12], "ag": [1, 8, 9], "ag1": 7, "again": 8, "against": 12, "agre": [1, 2, 3], "ai": 8, "aim": 5, "al": [2, 5, 8], "alg": 8, "algebr": [4, 8], "algebra": [4, 8, 11], "algo": 8, "algorithm": [1, 2, 5, 6, 9, 10, 11], "alia": [4, 7, 8, 12], "align": [1, 4, 8, 10], "all": [3, 4, 7, 8, 9, 10, 11, 12], "alloc": [2, 3, 4, 8, 11], "allow": [4, 6, 7, 8, 9, 10, 11, 12], "almost": 8, "alon": 12, "along": [1, 4, 7, 8, 10, 12], "alpha": [6, 8, 9], "alphabet": 7, "alreadi": 1, "also": [1, 2, 3, 5, 6, 7, 8, 10], "alter": 10, "altern": [7, 8, 10], "although": [2, 8], "alwai": [7, 8], "ametova": 8, "amir": 8, "amount": [1, 6, 8, 12], "an": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "analyt": [5, 8], "ang_tol": 10, "angl": [1, 4, 7, 9, 10], "angle_unit": [1, 4, 9], "angular": [1, 4, 9, 10], "ani": [1, 2, 3, 4, 6, 8, 9, 10, 12], "anisotrop": [8, 9], "anoth": 8, "anti": 1, "antonin": 8, "aop": [2, 8], "apach": [1, 2, 3], "apart": 10, "api": 12, "appear": 10, "append": 8, "appli": [4, 6, 7, 8, 9, 10, 11, 12], "applic": [1, 2, 3, 8], "apply_circular_mask": 4, "appropri": [3, 4, 8, 9], "approx": 8, "approxim": [2, 5, 7, 9], "approximate_gradi": 8, "approximategradientsumfunct": 8, "ar": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12], "arbitrari": 8, "archiv": 8, "area": [8, 9, 11], "arg": [3, 4, 8, 12], "argmin": [6, 8, 9], "argument": [1, 3, 4, 8, 12], "aris": 12, "armijo": 8, "armijo_rul": 8, "around": 8, "arrai": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12], "arrang": [6, 7], "artefact": [4, 10], "articl": [5, 9], "artifact": 10, "arxiv": 8, "as_arrai": [2, 4], "ascent": 8, "aspect": 12, "assembli": 6, "assign": 10, "associ": 1, "assum": [8, 12], "astra": [4, 5, 6, 8, 10, 11], "asymmetr": 10, "asymptot": 8, "asyncio": 8, "atik": 2, "atol": 8, "attribut": [4, 6, 7, 10], "au": 8, "augment": 8, "author": [1, 2, 3, 12], "auto": 8, "avail": 8, "averag": [7, 10], "avinash": 8, "avoid": [8, 10], "ax": [2, 4, 7, 8, 10], "axi": [1, 4, 7, 10, 12], "axis_0": 7, "axis_1": 7, "axis_2": 7, "axis_label": [7, 12], "axis_labels_1": 7, "axis_labels_2": 7, "axis_nam": 10, "axis_name1": 10, "axis_name2": 10, "axpbi": [4, 8], "azimuth": 12, "b": [2, 3, 4, 6, 8, 9], "b_": 8, "b_i": 8, "b_subset": 8, "back": [6, 7, 9, 11, 12], "backend": [8, 10, 11], "background": 8, "backproject": [8, 11], "backward": [4, 7, 8, 9], "backward_project": 9, "bar": 8, "base": [1, 3, 4, 5, 6, 10, 11, 12], "basi": [1, 2, 3], "basic": [2, 4, 5, 7, 8], "basicconfig": 10, "batch": [4, 8], "bdc": 4, "bdc1": [4, 8], "bdc2": [4, 8], "beam": [4, 5, 9, 10, 12], "becaus": [8, 12], "beck": 8, "becom": 8, "been": [1, 2, 7, 8, 9], "beer": 10, "befor": [7, 8, 10, 12], "begin": [2, 3, 6, 8, 10], "behav": [4, 8], "behaviour": [2, 7, 8, 10, 12], "being": [5, 8, 10, 12], "below": [1, 2, 6, 8, 10, 12], "benefit": 8, "berlin": 11, "best": [9, 10], "beta": 8, "betck": 8, "better": [6, 8], "between": [4, 6, 8, 9, 10, 11, 12], "beyond": [6, 12], "bi": 8, "bibian": 8, "big": 8, "biject": 8, "bill": 2, "bin": [7, 10], "binari": [4, 7, 12], "binary_oper": [4, 8], "binner": 5, "binom": [6, 8], "biologi": 8, "biorthogon": 8, "bit": 7, "blob": 7, "block": [2, 4, 5], "blockdatacontain": [2, 5, 6, 12], "blockfunct": [5, 6, 8], "blockgeometri": [5, 6, 8, 9], "blockoper": [2, 5, 6, 8, 9], "blur": 10, "bmatrix": 8, "bn": 2, "bnd_cond": 8, "boat": 12, "bodi": 8, "book": 8, "bool": [7, 8, 10, 12], "boolean": [4, 8, 9, 10, 11, 12], "boolian": 4, "bop": 2, "border": 10, "both": [1, 4, 5, 6, 8, 10], "bottom": [1, 3, 4], "bound": 8, "boundari": [2, 8, 10], "box": [2, 5, 12], "broadcast": 9, "brows": 7, "btik": 2, "build": [5, 6, 8], "built": 8, "burca": 8, "busi": [8, 12], "buzug": 11, "byod": 2, "bypass": 4, "byte": 8, "c": [2, 3, 4, 7, 8, 9, 10, 12], "cach": 8, "calcul": [4, 7, 8, 9, 10, 12], "calculate_lipschitz": 8, "calculate_norm": 8, "call": [6, 7, 8, 9, 11], "callabl": 8, "callback": 5, "cambridg": 2, "camera": 12, "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "cannot": 12, "canon": 8, "cap": 3, "capabl": 9, "care": 12, "carola": 8, "cartesian": 8, "case": [2, 4, 7, 8, 10, 12], "cast": 4, "caus": [2, 10, 12], "ccpi": [2, 5, 7], "ccpi_regularis": 9, "cd": 3, "cdot": 8, "ceil": [3, 8], "center": [1, 6, 8, 10, 12], "center_i": [1, 4], "center_x": [1, 4], "center_z": [1, 4], "centered_at": 8, "centr": [1, 4, 5, 8, 12], "central": 10, "centreofrotationcorrector": 10, "cern": 9, "certain": 8, "cgl": [2, 5, 6], "cglsb": 2, "chambol": 8, "chan": 8, "chang": [1, 3, 7, 8, 9, 12], "channel": [1, 4, 5, 8, 9, 10, 12], "channel_label": 4, "channel_spac": 1, "channelwis": 8, "channelwiseoper": 8, "chapter": 8, "characterist": 6, "cheaper": 8, "check": [2, 4, 7, 8], "check_converg": 8, "check_input": [4, 9], "child": 8, "choic": 8, "choos": [2, 8], "chose": 8, "chosen": [8, 10], "chunk": [3, 7, 11], "cil": [4, 6, 7, 8, 10, 11, 12], "cil_log_level": 10, "circ": 8, "circular": [1, 4, 6, 8, 9, 11], "clair": 8, "class": [3, 4, 5, 7, 9, 10, 11, 12], "classmethod": 12, "clear": 8, "clearer": 1, "clearli": 3, "clip": 12, "clockwis": 1, "clone": [3, 4, 8], "close": [3, 8], "closest": 10, "cmake": 3, "cmap": 12, "coarsest": 8, "code": [1, 2, 3, 5, 7, 8, 9, 12], "coeffici": 8, "coincid": 10, "col": 8, "collect": [5, 8], "collim": [1, 6], "color": 12, "colorbar": 12, "colormap": 12, "colour": 12, "column": [4, 7, 8, 12], "column_wise_compat": 8, "com": [3, 8], "comment": 3, "common": [1, 6, 8], "commonli": [1, 4, 8], "commut": [4, 8], "compar": [2, 12], "comparison": [8, 12], "compat": [4, 7, 8, 9, 11], "complex": [4, 5, 8], "complex128": 4, "compli": 3, "complianc": [1, 2, 3], "compon": [1, 8, 10, 11], "compos": 8, "composed_with_adjoint": 8, "composit": 5, "compositionoper": 8, "compress": 7, "compressed_data": 7, "compris": [6, 8], "comput": [8, 9, 10, 11], "computation": 8, "computer": 8, "concret": 8, "conda": 3, "conda_prefix": 3, "condit": [1, 2, 3, 8, 12], "cone": [4, 5, 9, 10, 12], "cone2d": 5, "cone3d": 5, "cone_2d_geometri": 1, "cone_3d_geometri": 1, "config": [1, 3, 7], "configpars": 7, "configur": [1, 3, 5, 7, 8, 9, 10, 11], "conjug": [4, 8, 9], "consecut": 8, "consequenti": 12, "consid": [2, 5, 6, 8, 12], "consist": [4, 8], "constant": [8, 9, 10], "constant_valu": 10, "constantfunct": 8, "constrain": 8, "constraint": [8, 9], "construct": [5, 7, 8, 11], "contain": [1, 3, 5, 6, 7, 8, 10, 11, 12], "content": [7, 8], "continu": 8, "contract": 12, "contribut": [5, 8, 10], "contributor": 12, "control": [1, 3, 8, 11], "convent": [5, 6, 8], "converg": 8, "convert": [2, 3, 5, 12], "convex": [8, 9], "convex_conjug": [8, 9], "convolut": 8, "coordin": [1, 12], "cooridin": 1, "copi": [1, 2, 3, 4, 8], "copyright": [1, 2, 3, 12], "core": [2, 3, 5, 6, 8], "correct": [1, 4, 8, 10, 11], "corrector": 5, "correl": [8, 10], "correlation_spac": 8, "correspond": [7, 8, 10, 12], "corrupt": 12, "cosin": 11, "cost": 8, "costli": 8, "could": [1, 4, 8], "counter_offset": 7, "cours": 8, "courtesi": [7, 8], "cpu": [8, 9], "creat": [3, 4, 5, 6, 7, 8, 10, 11, 12], "create_cone2d": [1, 4, 9], "create_cone3d": [1, 4, 9], "create_local_env_for_cil_development_test": 3, "create_parallel2d": [1, 4], "create_parallel3d": [1, 4], "creation": 8, "creator": [5, 9], "criteria": 10, "criterion": [2, 8, 9], "crop": [7, 10], "cross": 10, "ct": [1, 4, 5, 10, 11], "cubic": 10, "cuda": 9, "current": [3, 4, 8], "custom": [5, 8, 11], "custom_list": 8, "customis": [9, 11], "cut": 11, "cutoff": 11, "d": [3, 4, 8, 10], "d_": 8, "damag": 12, "damp": 10, "dark": 10, "dark_field": 10, "data": [1, 2, 5, 7, 8, 9, 11], "data_bin": 10, "data_block": 2, "data_centr": 10, "data_channel0": 12, "data_channel1": 12, "data_dir": 12, "data_pad": 10, "data_pass": 8, "data_passes_indic": 8, "data_rang": 12, "data_sl": 10, "data_typ": 7, "datacontain": [5, 7, 8, 9, 10, 12], "datacontainer0": 4, "datacontainer1": 4, "dataexampl": [8, 11, 12], "dataord": 5, "dataprocessor": 5, "dataset": [1, 3, 4, 5, 6, 7, 9, 10, 11], "date": 5, "davi": 11, "db1": 10, "db10": 10, "db35": 10, "dc": [4, 11], "dc1": 12, "dc2": 12, "dcmake_install_prefix": 3, "dd": 10, "deal": 8, "dealloc": 8, "deblur": 8, "debug": [8, 10], "decai": 2, "decnum": 10, "decompos": 8, "decomposit": [2, 8, 10], "deduc": 8, "deep": 8, "deep_copi": 4, "def": [3, 8], "default": [1, 3, 4, 7, 8, 9, 10, 11, 12], "defin": [4, 5, 6, 7, 8, 9, 10, 12], "definit": [3, 6, 8, 9], "degre": [1, 4, 9, 10, 12], "delattr": 8, "delplanck": 8, "delta": 8, "delta_dark": 10, "delta_flat": 10, "demo": [3, 6, 8], "demonstr": 2, "denois": 8, "denot": 8, "dens": 8, "depend": [3, 6, 7, 8, 10], "deprec": [4, 8], "depth": 7, "deriv": [2, 8, 12], "deriv2": 5, "descent": 5, "describ": [1, 4, 6, 7, 8, 9], "descript": [1, 6, 9, 10, 11], "design": [6, 8], "desir": [2, 8, 10], "desiri": 10, "dest_sel": 7, "destin": 7, "detail": [4, 5, 8, 10], "detect": 10, "detector": [1, 4, 6, 7, 10, 11], "detector_direction_i": [1, 4], "detector_direction_x": [1, 4], "detector_i": 4, "detector_posit": [1, 4], "detector_x": 4, "determin": [4, 9], "determinist": 5, "devaiat": 10, "devel": 5, "develop": [2, 5, 6, 8], "deviat": [10, 12], "devic": [8, 9], "df": 10, "diag": 8, "diagon": 8, "diagonaloper": 8, "diamond": [1, 5], "dict": [7, 8, 10], "dictionari": [4, 7, 10], "differ": [5, 6, 8, 9, 10, 12], "differenti": 8, "digaonaloper": 8, "dimens": [1, 3, 4, 7, 8, 9, 10, 12], "dimension": [2, 8, 12], "dimension_label": [4, 8, 10], "dir": 8, "direct": [1, 4, 7, 8, 9, 12], "direct_method": 9, "direct_onli": 8, "direction0": 12, "direction1": 12, "directli": [1, 4, 7, 8, 10], "directori": [3, 7, 12], "dirhtml": 3, "discard": [8, 10], "disclaim": 12, "discord": 5, "discret": [2, 8], "discretis": 2, "disk": 7, "displai": [1, 5, 6], "disretis": 2, "distanc": [1, 4, 6, 8, 12], "distribut": [1, 2, 3, 8, 12], "divid": [1, 3, 4, 8, 10], "divis": [4, 8, 10], "dl": 12, "dn": 10, "do": [2, 3, 7, 8], "doc": [3, 7, 8, 10], "docs_environ": 3, "docstr": 5, "document": [8, 9, 12], "doe": [3, 4, 8, 9, 10, 12], "doi": [5, 8, 10], "domain": [8, 11, 12], "domain_geometri": [2, 8], "domain_init": 8, "domin": 8, "done": [4, 8], "dot": [4, 8], "dot_test": 8, "doubl": [1, 10], "down": 12, "download": [3, 8], "downsampl": [8, 10], "draw": 8, "drawn": 8, "dset_path": 7, "dt": 2, "dtype": [4, 7, 8, 9, 12], "dual": [1, 8], "dualiti": 8, "due": [8, 10], "duff": 2, "dure": [3, 4, 8], "dwt": 8, "dynam": [5, 8, 12], "e": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12], "each": [1, 3, 4, 7, 8, 10, 12], "earli": [2, 8], "earlier": 9, "earlystop": 8, "eas": 8, "easiest": 3, "easili": 8, "edg": [4, 8, 10], "edit": 2, "edoardo": [1, 8], "edu": 8, "effect": 8, "effici": 8, "effort": 10, "ehrhardt": 8, "eigenvalu": 8, "eigenvector": 8, "either": [1, 2, 3, 6, 8, 10, 12], "element": [4, 7, 8, 10], "elev": 12, "elif": 3, "ell": 8, "els": [3, 9], "email": 3, "embed": 3, "emiss": 8, "emit": [1, 6], "emploi": 5, "empti": [1, 4, 8], "en": 8, "enabl": [5, 10], "enclos": 3, "end": [2, 3, 6, 7, 8, 10], "end_valu": 10, "endors": 12, "enforc": [5, 8], "engin": [4, 8], "enough": 5, "ensur": [1, 8, 10], "entri": [7, 8], "env": 3, "environ": 3, "environment_nam": 3, "ep": 2, "epsilon": 8, "epsrc": 2, "eq": [8, 11], "eqnarrai": 8, "equal": [1, 4, 8, 9, 12], "equat": 2, "equival": [6, 7, 8], "erfcinv": 10, "erni": 8, "error": [2, 4, 10, 12], "essenti": 3, "esser": 8, "estim": 10, "estimate_normalised_error": 10, "et": [2, 5, 8], "eta": [8, 9], "euclid": 8, "euclidean": [4, 8], "eval": 7, "evalu": [8, 9, 12], "evangelo": 8, "evelina": 8, "even": [4, 8, 12], "event": [2, 8, 12], "everi": [8, 10, 12], "everyth": 7, "evolv": 3, "exact": [2, 7, 8], "exactli": 8, "exampl": [1, 2, 9, 10, 11, 12], "except": [1, 2, 3], "excess": 3, "exclud": 1, "exclus": [10, 12], "execut": 8, "exemplari": 12, "exist": 8, "exp": 4, "expect": [2, 4, 8, 10], "expens": 8, "explicit": 8, "explicitli": 12, "expon": 10, "expos": 12, "express": [1, 2, 3, 4, 6, 8, 12], "ext": 8, "extend": [8, 10, 12], "extens": [1, 3, 7, 8], "extern": 3, "extract": [7, 12], "extrapol": 10, "ey": 2, "f": [3, 6, 8, 9, 10], "f1": 8, "f2": 8, "f_": 8, "f_0": 8, "f_1": 8, "f_i": 8, "f_n": 8, "fact": [4, 7, 8], "factor": [6, 7, 10, 12], "fail": [4, 8], "fals": [3, 4, 7, 8, 10, 11, 12], "fan": 5, "fanbeam": 5, "fardel": [1, 8], "fashion": 8, "fast": [8, 9], "faster": 8, "favour": 3, "fbp": [3, 4, 5, 6, 10], "fdk": [5, 6, 9, 10], "fdk_cuda": 9, "feldkamp": 11, "fft": 11, "fft_order": 11, "fgp": [8, 9], "fgp_dtv": 9, "fgp_tv": 9, "fidel": [6, 8], "field": [1, 3, 6, 10], "figsiz": 12, "figur": [2, 12], "file": [1, 2, 3, 5, 6, 8], "file_nam": 7, "filedescriptororpath": 8, "filenam": [7, 12], "fill": [3, 4, 7, 8, 9, 10, 11], "filter": [6, 9, 10, 11], "filter_inplac": 3, "final": 8, "find": [3, 8, 10], "fine": 10, "finit": 8, "finitedifferenceoper": 8, "first": [1, 2, 6, 7, 8, 9, 10, 12], "firstli": [5, 8], "fista": 5, "fit": [4, 8, 10, 12], "fix": 8, "fix_rang": 12, "flag": [8, 10], "flat": 10, "flat_field": 10, "flatten": [8, 10], "flip": 7, "fliplr": 7, "float": [2, 4, 7, 8, 9, 10, 11, 12], "float32": [4, 7, 8, 9], "float64": 4, "fname": 7, "folder": [3, 7], "follow": [3, 4, 7, 8, 11, 12], "fontsiz": 12, "forc": 4, "fork": 10, "form": [6, 8, 11, 12], "format": [3, 6], "format_spec": 8, "formatt": 8, "formul": [2, 5, 8], "formula": 8, "forth": 8, "forward": [2, 8, 9], "forward_project": 9, "found": [5, 8, 12], "fourier": [10, 11], "frac": [6, 8, 9], "frame": 4, "framework": [1, 2, 5, 7], "fredholm": 2, "free": 2, "frequenc": 11, "frequency_cutoff": 11, "from": [1, 4, 5, 6, 7, 8, 9, 11], "from_funct": 8, "fromfil": 7, "full": [1, 3, 6, 7, 8, 11], "full_gradi": 8, "full_matric": 2, "fulli": [1, 3, 7], "function": [2, 4, 5, 6, 7, 11, 12], "function_num": 8, "function_numb": 8, "fundament": 8, "further": [3, 5, 8, 9, 11], "futher": 11, "futur": [2, 8], "g": [3, 4, 5, 6, 7, 8, 9, 10, 12], "g1": 9, "g2": 9, "galerkin": 2, "galleri": 5, "gamma": [8, 9], "gamma_fconj": 8, "gamma_g": 8, "gantri": 6, "gap": [8, 10], "gaussian": 12, "gd": 5, "ge": 8, "gemma": [1, 8], "gener": [3, 4, 5, 7, 8, 9, 12], "generalis": [8, 9], "geometr": 9, "geometri": [3, 5, 7, 8, 9, 10], "geometry_bin": 10, "geometry_sl": 10, "geq": 2, "geq1": 8, "geq2": 8, "get": [7, 8, 11, 12], "get_as_list": 8, "get_data_axes_ord": 4, "get_data_offset": 7, "get_data_scal": 7, "get_dataset_metadata": 7, "get_dimension_axi": 4, "get_filter_arrai": 11, "get_geometri": 7, "get_imagedata": [5, 9], "get_imagegeometri": [1, 3, 4, 8, 9], "get_input": 4, "get_item": [4, 8], "get_last_loss": 8, "get_last_object": 8, "get_metadata": 7, "get_norms_as_list": 8, "get_ouput": 10, "get_output": [4, 8, 9, 10], "get_output_shap": 8, "get_roi": 7, "get_sampl": 8, "get_slic": [4, 8, 12], "getattr": 8, "getlogg": 10, "gg": 5, "git": [3, 5], "github": [2, 3, 5], "give": [1, 4, 6, 8, 10], "given": [1, 8], "global": [8, 12], "gm_domain": 8, "gm_rang": 8, "go": [3, 6, 7], "goal": 6, "good": 12, "govern": [1, 2, 3], "gpu": 9, "gradient": [5, 9], "gradient_oper": 8, "gradientoper": 5, "grai": 12, "grant": 2, "greater": [4, 8, 11], "greatli": [1, 6], "green": 2, "grid": 12, "ground": [2, 12], "ground_truth": 12, "group": [7, 8], "grow": 8, "gt": [1, 2, 8], "guarante": 8, "guess": 8, "guid": [5, 8], "guidelin": 5, "guler": 8, "h_": 8, "ha": [1, 2, 3, 4, 6, 7, 8, 9], "haar": [8, 10], "hackathon": 2, "hadamard": 8, "half": [1, 8, 10], "ham": 11, "hand": [1, 8], "handl": [4, 5, 6, 11], "hann": 11, "hansen": 2, "happen": 4, "hard": 10, "hardwar": 11, "hash": 8, "have": [1, 2, 3, 4, 6, 7, 8, 10, 11], "hdf5": 5, "hdf5_util": [5, 7], "hdl": 11, "header": 8, "height": 12, "held": [4, 8], "help": 3, "helper": 8, "henc": 8, "here": [1, 3, 8], "hereof": 8, "herman": 8, "herman_mey": 8, "high": [5, 8], "higher": [11, 12], "highli": 11, "hold": [1, 4, 8, 10], "home": [4, 7, 8, 9, 10, 11, 12], "horizont": [1, 4, 7, 10], "horizontal_i": [1, 4, 8, 10, 12], "horizontal_x": [1, 4, 8, 10, 12], "hospit": 2, "hotdog": 12, "how": [1, 2, 8], "howev": [1, 2, 7, 8, 12], "hstack": 2, "html": [2, 3, 7, 8, 10, 12], "http": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12], "hybrid": 8, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "i_0": 7, "ib": 8, "id": [3, 8], "ideal": 10, "ident": [2, 8], "identifi": [3, 10], "identityoper": [2, 8], "ieee": 8, "ig": [1, 2, 4, 8, 9], "ignor": [8, 9, 10], "ii": [5, 8], "ill": 2, "illustr": 6, "imag": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "image_geometri": [3, 7, 9, 11, 12], "image_sharp": 10, "imagedata": [1, 3, 5, 6, 8, 9, 10, 11, 12], "imagegeometri": [5, 6, 7, 8, 9, 10, 11, 12], "implement": [2, 5, 8], "impli": [1, 2, 3, 12], "implicitli": 2, "import": [1, 2, 7, 8, 9, 10, 11, 12], "impos": [6, 8], "improv": 2, "in_plac": 4, "inbuilt": 2, "inch": 12, "incid": [6, 10], "incident": 12, "includ": [4, 8, 10, 12], "inclus": 10, "incorpar": 9, "incorrect": 10, "increas": [8, 10, 11], "increment": 8, "independ": [1, 4, 7, 8], "index": [2, 4, 7, 8, 10], "indic": [4, 5, 7, 10, 11], "indicatorbox": 8, "indirect": 12, "individu": 8, "industri": 8, "inequ": 8, "inexact": 8, "inf": [8, 10], "infin": 8, "infinit": 8, "influenc": [1, 6], "info": [7, 8, 9, 10], "inform": [3, 4, 5, 7, 8, 9, 10, 12], "infrastructur": 8, "infti": 8, "ingredi": 8, "inherit": [4, 8], "ini": 7, "inifnam": 7, "initi": [7, 8, 10, 12], "initial_angl": 4, "initial_bin": 10, "initialis": [4, 7, 8, 10], "inlin": 8, "inner": [4, 8], "innov": [1, 2, 3], "inpaintingand": 8, "inplac": 11, "input": [3, 4, 5, 8, 9, 10, 11, 12], "insid": [4, 8], "instal": [3, 8, 9], "instanc": [1, 3, 4, 7, 8], "instanti": [4, 8], "instead": [2, 3, 8, 12], "institut": 2, "instruct": 3, "instrument": [1, 6, 10], "int": [3, 4, 7, 8, 9, 10, 11, 12], "int_0": 2, "integ": [8, 9, 10, 12], "integr": 2, "intend": 8, "intens": 10, "interact": [5, 8], "interest": [1, 4, 10], "intermedi": 12, "intern": [4, 7, 8], "interpol": [9, 10], "interpret": [8, 10, 11], "interrupt": 12, "intersect": 9, "interv": [2, 8, 12], "introduc": 8, "introduct": 5, "introductori": 8, "intuit": 12, "invers": [5, 8], "investig": 2, "invok": 8, "io": [2, 3, 6, 7, 8], "iop": 9, "iopscienc": 9, "ipynb": 3, "ipywidget": 12, "irrespect": 8, "is_compat": [4, 8], "is_fortran": 7, "is_linear": 8, "is_orthogon": 8, "is_provably_converg": 8, "is_virtu": 7, "isaac": 2, "islic": 5, "isotrop": [8, 9], "issubclass": 8, "ista": 5, "iter": [2, 6, 8, 9, 12], "iteration_numb": 8, "ith": 8, "its": [3, 8, 12], "itself": [3, 8], "j": [5, 8, 9], "jakob": [2, 8], "januari": 8, "join": 5, "journal": 8, "json": 7, "julian": 8, "jun": 8, "jupyt": 12, "just": [2, 4, 8], "j\u00f8rgensen": [2, 5], "k": [2, 8, 9], "k_i": 8, "kak": 8, "keep": [8, 12], "kei": [3, 4, 7, 10], "kernel": 2, "keyward": 8, "keyword": [4, 8], "kind": [1, 2, 3], "kinemat": 10, "kingdom": [1, 2, 3], "kl_div": 8, "kmax": 8, "knowledg": [6, 8], "known": 8, "kress": 11, "kullback": 8, "kullbackleibl": 5, "kw": [4, 8], "kwarg": [3, 4, 9, 12], "kx": 8, "l": [2, 6, 8, 11], "l1": [5, 9], "l11": 5, "l1norm": 8, "l1sparsiti": 8, "l2": [5, 9], "l21": 5, "l2norm_": 8, "l2normsquar": 8, "l_": 8, "lab": [1, 6], "label": [1, 2, 4, 7, 8, 12], "ladmm": 5, "lagrangian": 8, "lak": [9, 11], "lambert": 10, "laminograpi": 1, "langl": [8, 9], "languag": [1, 2, 3, 9], "larg": [4, 8], "larger": 8, "largest": 8, "last": [8, 10], "latest": 8, "laura": 1, "law": [1, 2, 3, 10], "layout": 7, "lb": 8, "le": 8, "lead": [7, 8, 10], "least": [2, 4, 5, 6], "leastsquar": 8, "lectur": 8, "left": [1, 4, 7, 8, 12], "leftrightarrow": [8, 9], "legend": [2, 12], "leibler": 8, "len": 8, "length": [4, 8, 11, 12], "leq": 8, "leq1": 8, "ler": 8, "less": 8, "let": 8, "level": [5, 7, 8, 10, 12], "liabil": 12, "liabl": 12, "librari": [2, 3, 4, 5, 6, 8], "licens": [1, 2, 3], "light": 5, "like": [1, 2, 6, 7, 8], "limit": [1, 2, 3, 8, 9, 12], "linalg": 2, "line": [7, 8, 12], "line_colour": 12, "line_styl": 12, "linear": [8, 10], "linear_ramp": 10, "linearoper": 8, "linestyl": 12, "link": [3, 5, 8], "link_islic": 5, "linspac": [2, 9], "lionheart": [2, 8], "lipschitz": 8, "lipshitz": 8, "list": [4, 5, 7, 8, 10, 11, 12], "list_of_funct": 8, "lmax": 8, "load": [7, 12], "load_data": 7, "load_project": 7, "loader": 6, "local": [5, 12], "local_var": 12, "localvar": 12, "locat": 4, "log": [2, 3, 4, 8, 10, 11], "log0": 8, "log10": 8, "log_2": 8, "log_fil": 8, "logan": 11, "logarithm": 10, "logfilecallback": 8, "loglog": 2, "long": [4, 8], "longer": [1, 8], "look": [2, 5, 7], "loop": [7, 8, 10], "loss": [8, 10, 12], "lossi": 7, "low": 8, "low_val": 12, "lower": [8, 9, 10, 12], "lstsq": 2, "lsvrg": 8, "lsvrgfunction": 8, "lt": [1, 2], "lu": [6, 8], "lvert": 8, "m": [3, 8, 11, 12], "machin": 6, "mad": 10, "made": [2, 8], "mae": [5, 12], "magnif": [1, 6], "magnitud": 8, "mai": [1, 2, 3, 4, 5, 8, 10, 11, 12], "mail": 5, "main": [5, 6, 8], "mainli": [1, 6], "maintain": 12, "make": [1, 2, 3, 6, 8], "malcolm": 8, "manchest": [1, 2, 3], "mani": 8, "manipul": [5, 6], "manual": [7, 12], "map": [8, 12], "marc": 8, "march": 2, "margaret": 2, "markiewicz": 8, "martin": 8, "mask": [4, 5, 8, 12], "masker": 10, "maskgener": 10, "maskoper": 8, "match": [2, 4, 8, 9], "materi": 12, "math": [4, 8], "mathbb": 8, "mathcal": 8, "mathemat": [2, 5, 8], "mathrm": [6, 8, 9], "matlab": 2, "matplotlib": [2, 12], "matric": 8, "matrix": [2, 6, 8, 12], "matrixoper": [2, 8], "matter": 1, "matthia": 8, "max": [2, 4, 8, 9, 12], "max_": 8, "max_iter": [2, 8, 9], "max_quantil": 10, "max_val": 10, "maximis": 10, "maximum": [4, 8, 9, 12], "mayer": 8, "mbox": [8, 9], "mean": [4, 8, 10, 12], "meaning": 8, "meant": 3, "measur": [6, 8, 10, 11], "med": 8, "media": 8, "median": 10, "medicin": 8, "member": [1, 3], "memori": [4, 8, 11], "merchant": 12, "messag": 10, "met": [8, 12], "meta": [1, 4], "metadata": [5, 7], "method": [1, 2, 4, 5, 6, 7, 9, 10, 11], "metric": 5, "meyer": 8, "mic": 8, "midlin": 10, "mildli": 2, "min": [4, 8, 12], "min_": 8, "min_intens": 10, "min_quantil": 10, "min_val": 10, "min_x": [2, 8], "mingqiang": 8, "minim": [7, 8], "minimis": 8, "minimum": [4, 8, 9, 12], "minit": 8, "minmax": 12, "mirror": [8, 10], "misalign": 10, "miss": 10, "mix": 5, "mixedl11norm": 8, "mixedl21norm": 8, "mkdemo": 3, "mo25": 8, "mo25_ch6": 8, "mode": [4, 7, 8, 10, 12], "model": [2, 9], "modern": 11, "modif": 12, "modifi": [4, 11], "modul": [6, 8, 9, 10, 11], "modulu": 8, "moment": 8, "monitor": 8, "mop": 8, "mop_norm": 8, "more": [4, 5, 6, 7, 8, 10, 11, 12], "moreau": 8, "most": [1, 4, 8], "mri": 8, "mse": [5, 12], "multi": [1, 5, 7, 8, 10, 12], "multichannel": [5, 8, 9], "multicontrast": 8, "multipl": [3, 4, 7, 8, 9, 10, 12], "multiplc": 8, "multipli": [4, 8, 10], "multiprocess": 8, "murgatroyd": 1, "must": [3, 4, 7, 8, 10, 11, 12], "mx1": 8, "my_data": 7, "my_sampling_funct": 8, "n": [2, 3, 8, 9, 10, 11, 12], "n_subset": 8, "nabla": 8, "nabla_x": 8, "nabla_xf_": 8, "name": [3, 4, 7, 8, 10, 12], "nan": 10, "nbsphinx": 3, "nbyte": 7, "ndarrai": [4, 7, 8, 10, 11, 12], "ndim": [4, 7, 8, 9], "nearest": 10, "necessari": [1, 3, 4, 7], "need": [1, 3, 7, 8, 10, 12], "neg": [2, 7, 8, 9, 10, 11, 12], "neglig": 12, "neither": 12, "neq": 8, "nest": [4, 8, 12], "nesterov": 8, "net": 11, "neumann": 8, "neutron": 10, "never": 8, "new": [4, 5, 8], "new_ord": 4, "newlin": 8, "newton": 2, "newtoninstitut": 2, "next": [4, 8, 10, 12], "nexu": [1, 5, 6], "nexusdataread": [5, 7], "nexusdatawrit": [5, 7], "nice": 8, "nightli": 2, "nikon": [1, 5, 6], "nikondataread": [5, 7], "nois": [2, 8, 12], "noisi": 2, "noisy_data": 8, "non": [3, 5, 8, 9], "none": [2, 3, 4, 7, 8, 9, 10, 11, 12], "nonlinear": 2, "nonneg": 9, "nonzero": 12, "nor": 12, "norm": [2, 4, 5, 9], "norm2sq": 8, "normal": [4, 8], "normalis": [5, 7, 8], "notat": 8, "note": [8, 9, 10, 11, 12], "notebook": [1, 2, 5, 6, 8], "noth": 8, "notic": [7, 8, 12], "notimpl": 8, "notimplementederror": 8, "nov": 8, "now": [1, 2, 6, 8, 9], "np": [2, 3, 7, 8, 9], "nss": 8, "num_batch": 4, "num_channel": [1, 4], "num_chunk": 3, "num_col": 12, "num_indic": 8, "num_model": 9, "num_pixel": [1, 4], "num_pixels_h": 4, "num_pixels_v": 4, "num_sampl": 8, "num_thread": [4, 8], "numba": 8, "number": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "number_of_dimens": 4, "numer": [2, 4], "numpi": [2, 4, 7, 8, 10, 11, 12], "numpy_vers": 3, "numpydoc": 3, "nx": 7, "nx1": 8, "o": [2, 7, 8], "o_": 8, "object": [1, 2, 4, 5, 6, 7, 8, 10], "objective_funct": 8, "observ": 2, "obtain": [1, 2, 3, 7], "occur": 12, "odd": 2, "oe": [9, 10], "off": [8, 11], "offset": [3, 4, 5, 7, 9, 10, 11], "often": 3, "omega": 8, "onc": 8, "one": [2, 4, 5, 6, 8, 10, 12], "ones": [7, 8], "onli": [3, 4, 7, 8, 9, 10, 11, 12], "onto": [1, 6, 8, 10], "op": [2, 8], "op0": 8, "op1": 8, "op2": 8, "open": 8, "oper": [2, 3, 4, 5, 6, 10, 12], "operator1": 8, "operator2": 8, "operator_block": 2, "operatorcompositionfunct": 8, "optim": [5, 8], "optimis": [2, 5, 6, 9, 11], "option": [3, 4, 7, 8, 9, 10, 11, 12], "orbit": 11, "order": [1, 4, 7, 8, 11, 12], "ordin": 7, "org": [1, 2, 3, 5, 7, 8, 9, 10, 12], "orient": [1, 3, 5, 8], "origin": [1, 3, 4, 7, 8, 12], "original_data": 7, "orthogon": 8, "orthonorm": 2, "ortogon": 1, "osman": 8, "other": [4, 5, 8, 10, 12], "otherwis": [4, 8, 10, 12], "otim": 8, "our": [1, 2, 4, 5, 6, 8], "out": [3, 4, 7, 8, 9, 10, 11, 12], "outcom": 8, "outer": 12, "outlier": 10, "output": [3, 4, 5, 7, 8, 10, 11, 12], "outsid": [4, 10, 11, 12], "over": [1, 4, 8, 10], "overrid": 8, "overridden": 8, "overset": 8, "own": [1, 3], "owner": 3, "p": [2, 3, 8, 12], "p_i": 8, "pack": 7, "packag": [3, 5, 8], "pad": [1, 8, 10], "pad_valu": 10, "pad_width": 10, "padder": 5, "page": [5, 7], "pair": [8, 12], "panel": [1, 3, 4, 10], "paper": 5, "papoutselli": [5, 8], "parallel": [4, 5, 9, 10, 12], "parallel2d": 5, "parallel3d": 5, "parallel_2d_geometri": 1, "parallel_3d_geometri": 1, "param": [4, 8, 12], "paramet": [1, 3, 4, 6, 9, 10, 11, 12], "parent": [4, 8], "pars": 7, "part": [2, 5, 8, 9], "partial_": 8, "partial_i": 8, "partial_x": 8, "particular": [8, 12], "partit": [4, 8], "partitioned_data": 8, "pasca": [1, 8], "pass": [1, 3, 4, 8, 9, 10, 11, 12], "path": [7, 12], "pattern": 8, "pawel": 8, "pbar": 3, "pdf": 8, "pdf_1": 8, "pdhg": 5, "peak": 12, "penalis": 8, "pepper": 12, "per": [8, 12], "percent": 12, "percentag": 4, "perfect": 8, "perfectli": 1, "perform": [4, 8, 10], "period": 8, "permiss": [1, 2, 3, 12], "permit": 12, "permut": 4, "pet": 8, "peter": 8, "phantom": 9, "phil": 5, "philip": 8, "philosoph": [2, 8], "photon": [10, 11], "physic": [1, 8], "pi": [9, 11], "pi_": 8, "pickl": 8, "pixel": [1, 4, 6, 7, 9, 10, 11, 12], "pixel_num_v": 3, "pixel_s": [1, 4], "pixel_size_h": 4, "pixel_size_v": 4, "pixelwis": 12, "pjm": 8, "place": [1, 4, 6, 11], "placehold": [4, 8], "plantagi": 11, "play_interv": 12, "pleas": [3, 4, 5, 6, 9, 10], "plot": [2, 8, 12], "plt": 2, "plug": 8, "plugin": [5, 6, 8], "png": 12, "po": 9, "pock": 8, "point": [1, 2, 4, 6, 8, 12], "pointer": 4, "poisson": [8, 12], "poissonloglikelihoodwithlinearmodelformean": 8, "poorli": 12, "popul": 10, "pose": 2, "posed": 2, "posit": [1, 3, 4, 8, 9, 10, 11, 12], "positron": 8, "possibl": [4, 8, 12], "potenti": 8, "power": [2, 4, 5, 8, 11, 12], "powermethod": 8, "pp": 2, "practic": [8, 10], "pre": [5, 6, 8, 11], "precalcul": 8, "preced": [4, 8], "precondit": 8, "predefin": 11, "prefix": 7, "prepar": 11, "prepend": 8, "present": [4, 8, 12], "preserv": 12, "preval": 12, "previou": [1, 8, 9, 10], "primal": 8, "prime": 8, "principl": 8, "print": [1, 2, 3, 7, 8, 10], "print_metadata": 7, "prior": [6, 8, 12], "prob": 8, "prob_weight": 8, "probabl": 8, "problem": [5, 6, 8, 9, 12], "problem_": [8, 9], "process": [3, 4, 6, 8, 9, 10, 11], "processor": [4, 5, 6, 9], "procur": 12, "produc": [8, 12], "product": [4, 8, 12], "profil": 10, "profit": 12, "programm": 2, "progress": [8, 10], "progresscallback": 8, "proj": 8, "proj_filt": 3, "project": [1, 5, 6, 7, 8, 10, 11], "projecteuclid": 8, "projection_": 8, "projection_index": 10, "projectionmap": 8, "projectionoper": [8, 9], "projector": [6, 8, 9, 11], "promot": 12, "prompt": 8, "proper": [8, 12], "properti": [4, 5, 8], "proport": [8, 12], "protect": 3, "protocol": 8, "prototyp": [5, 8], "provabl": 8, "prove": 8, "provid": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "prox": [8, 9], "prox_": 8, "proxim": [8, 9], "proximal_conjug": 8, "pseudo": 12, "psnr": [5, 12], "purpos": [8, 12], "py": [3, 8], "pydata": 3, "pyplot": [2, 12], "python": [2, 3, 5, 8], "python2": [4, 8], "python_vers": 3, "pywavelet": 8, "pywt": 10, "q": 8, "qeq0": 9, "quad": 8, "quadrat": [8, 10], "qualiti": [1, 5, 6], "quality_measur": 12, "quantil": 10, "quarter": 10, "question": 8, "quiet": 8, "qx": 8, "r": [2, 4, 5, 8], "r014604": 2, "r_1": 6, "r_2": 6, "rad": 11, "radia": 5, "radian": 4, "radiat": [1, 6], "radiu": 4, "rai": [1, 4, 6, 9], "rainbow": 12, "rais": [3, 4, 8], "ral": 8, "ram": [9, 11], "ramp": 10, "randn": 2, "random": [2, 4, 8, 12], "random_int": 4, "random_nois": 12, "random_permut": 4, "random_with_replac": 8, "random_without_replac": 8, "randomli": 8, "randomsampl": 8, "randomwithoutreplac": 8, "rang": [1, 2, 3, 8, 9, 10, 11, 12], "range_geometri": 8, "range_init": 8, "rangl": [8, 9], "rapid": [5, 8], "rare": 12, "rasch": 8, "rate": 8, "rather": [8, 10], "ratio": [9, 12], "ration": 12, "raw": 5, "rawfilewrit": [5, 7], "ray_direct": 4, "rcond": 2, "re": [6, 8], "reach": [1, 2, 6, 8, 9], "read": [1, 5, 10], "read_arrai": 7, "read_as_acquisitiondata": 7, "read_as_imagedata": 7, "read_as_origin": 7, "read_data": 7, "read_dtyp": 7, "read_resc": 7, "read_scale_offset": 7, "read_shap": 7, "read_to": 7, "reader": [1, 5, 6], "readthedoc": 8, "real": [4, 5, 6, 8], "recal": 8, "receiv": 8, "recognis": [6, 8], "recommend": [8, 10, 11], "recon": [3, 5, 6], "reconstruct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "reconstructor": [3, 5, 6, 9], "record": 8, "recostruct": 2, "recov": 8, "rect": 11, "recurs": [3, 7], "redistribut": 12, "reduc": [1, 4, 6, 8, 11, 12], "reduct": 4, "ref": 8, "refer": [3, 4, 5, 6, 7, 9, 10, 11, 12], "referenc": [3, 4, 9, 10, 11], "reflect": [8, 10], "reg": 2, "reg_param": 2, "region": [1, 10], "regtool": 5, "regular": [2, 8], "regularis": [2, 5, 6, 8], "rel": [8, 9, 10], "relat": [4, 8], "relav": 1, "relax": 8, "relev": [1, 7], "remain": 10, "remaind": 3, "remov": 5, "reorder": [4, 8], "repeat": 8, "replac": [3, 8, 12], "repo": 3, "repositori": [5, 6], "repositoryy": 8, "repr": 8, "repres": [4, 7, 8, 10, 12], "reproduc": [5, 12], "request": [3, 4, 7, 10, 11, 12], "requir": [1, 2, 3, 4, 8, 9, 10, 11], "rescal": [7, 9], "rescaled_data": 7, "research": [1, 2, 3], "reserv": 12, "reset": 11, "reshap": [2, 7, 8], "resid": 7, "resolut": [1, 4, 10], "resolution_chart": 12, "resort": 4, "respect": [4, 6, 7, 8, 10, 12], "rest": 8, "restart": 8, "restor": 8, "resul": [4, 8], "result": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "ret": 3, "retain": 12, "return": [1, 3, 4, 8, 9, 10, 11, 12], "return_al": 8, "revers": [4, 8], "rewritten": 8, "rgensen": 8, "rich": 2, "richt\u00e1rik": 8, "right": [1, 4, 7, 8, 12], "rightarrow": 8, "righthand": 2, "ring": 5, "ringremov": 10, "rnt": 2, "rof": 8, "roi": [1, 7, 10], "roll": [1, 10], "root": [7, 8], "rosenbrock": 8, "rotat": [1, 4, 5, 6, 9], "rotation_axi": 1, "rotation_axis_direct": [1, 4], "rotation_axis_posit": [1, 4], "roughli": 2, "round": 12, "routin": [2, 8, 11], "row": [1, 3, 4, 6, 7, 8], "row_wise_compat": 8, "royal": [2, 8], "royalsocietypublish": 8, "rst": 3, "rsta": [5, 8], "rtol": 8, "rtsd": 8, "rtype": 8, "rule": 8, "run": [2, 3, 4, 8, 9, 10, 11], "rvert_": 8, "ryan": 8, "s10107": 8, "s10589": 8, "s10851": 8, "s_": 7, "saddl": 8, "sag": 8, "saga": 8, "sagafunct": 8, "sagfunct": 8, "sai": 8, "salt": 12, "salt_vs_pepp": 12, "same": [3, 4, 7, 8, 9, 10, 12], "sampl": [6, 8], "sampler": 5, "samplerrandom": 8, "sampling_typ": 8, "sapyb": [4, 8], "satisfi": 8, "save": [1, 6, 7, 8, 12], "savefig": 12, "scalar": [4, 8, 9, 12], "scale": [2, 5, 7, 8, 10, 12], "scaledfunct": 8, "scaledoper": 8, "scaleoffset": 7, "scan": [6, 10], "scatter": [1, 6, 8], "schemat": 12, "schonlieb": 8, "sch\u00f6nlieb": 8, "scienc": [2, 8], "scikit": 12, "scikit_random_nois": 12, "scipi": 8, "screen": 8, "script": 3, "search": [10, 12], "search_rang": 10, "sec": 8, "second": [2, 6, 8, 10, 12], "secondli": 5, "section": [7, 8], "see": [1, 2, 3, 4, 8, 9, 10, 12], "seed": [4, 8, 12], "select": [6, 7, 8, 11, 12], "selector": 12, "self": [3, 4, 8, 9, 11], "semi": 8, "sensibl": 7, "separ": [3, 8, 12], "sequenc": 8, "sequenti": [4, 8, 12], "serial": 8, "serv": 3, "server": 3, "servic": 12, "set": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11], "set_": 3, "set_angl": [1, 4, 9], "set_channel": [1, 4, 9], "set_data_partition_weight": 8, "set_fft_ord": 11, "set_filt": 11, "set_filter_inplac": 11, "set_gamma_fconj": 8, "set_gamma_g": 8, "set_image_geometri": 11, "set_input": [4, 9, 10, 11], "set_label": [1, 4], "set_norm": 8, "set_num_thread": 8, "set_panel": [1, 4, 9], "set_relaxation_paramet": 8, "set_split_process": [3, 11], "set_step_s": 8, "set_suppress_evalu": 8, "set_up": [7, 8], "setattr": 8, "setlevel": 10, "setter": [5, 8], "sever": [8, 10], "sgd": 8, "sgfunction": 8, "sgn": 8, "sh": 3, "shall": 12, "shape": [3, 4, 7, 8, 12], "share": 8, "sharp": 10, "shepp": 11, "shift": 8, "shinkoper": 8, "shortcut": 7, "shorter": 8, "should": [3, 4, 7, 8, 9, 10, 11, 12], "should_stop": 8, "show": [1, 2, 12], "show1d": 5, "show2d": 5, "show_geometri": [1, 5], "shown": 12, "shrinkag": 8, "siam": 8, "siddon": 9, "side": [2, 10], "sigma": [8, 10], "sigma_": 8, "sigma_1": 8, "sigma_iw_i": 8, "sigma_iw_ix_i": 8, "sign": [4, 8, 12], "signal": [8, 12], "signatur": 8, "signific": [1, 6], "similar": 8, "simpl": [3, 5, 9, 11], "simple_phantom_2d": 12, "simpli": 6, "simplifi": 8, "simul": [5, 6], "simulated_cone_beam_data": [11, 12], "simulated_parallel_beam_data": [8, 11, 12], "simulated_sphere_volum": 12, "simultan": 8, "sinc": 8, "singh": 8, "singl": [1, 4, 6, 7, 8, 10, 11, 12], "singular": [2, 8], "sinogram": 4, "sirf": 8, "sirt": 5, "size": [1, 2, 3, 4, 7, 8, 9, 10, 12], "skimag": 12, "skip": 7, "slanei": 8, "slice": [1, 4, 5, 6, 7, 10, 11], "slice_index": 10, "slice_list": 12, "slice_metadata": 7, "slice_numb": 12, "slicer": 5, "slices_per_chunk": [3, 11], "slider": 12, "slight": 10, "small": [2, 3, 8, 9, 12], "smaller": 1, "smooth": [5, 9], "smoothmixedl21norm": 8, "so": [2, 3, 6, 8], "soc": 5, "societi": [2, 8], "softwar": [1, 2, 3, 8, 12], "softx": 9, "sol": [8, 9], "solut": [2, 6, 8, 9], "solv": [2, 5, 6, 8, 12], "some": [8, 10], "some_data": 4, "someth": 7, "soon": 8, "sop": 8, "sort": 4, "sourc": [1, 4, 5, 6, 7, 8, 9, 10, 11], "source_posit": [1, 4], "source_sel": 7, "space": [1, 8, 9, 10], "spacechannel": 8, "spars": 8, "sparsefinitedifferenceoper": 8, "sparsiti": 5, "spatial": [4, 8, 10], "spdhg": 5, "special": [8, 10, 12], "special_valu": 10, "specialis": 1, "specif": [1, 2, 3, 7, 8, 10, 12], "specifi": [1, 4, 7, 8, 10, 12], "specifii": 1, "speckl": 12, "spectral": [5, 6, 8, 10], "sphere": 12, "sphinx": 3, "split": [8, 11], "springer": [8, 11], "sqrt": [4, 8, 9, 10], "squar": [2, 4, 5, 6, 12], "squared_norm": 4, "stabl": [7, 10, 12], "stack": [1, 7, 10], "stackexchang": 8, "stage": 6, "stagger": [4, 8], "standard": [4, 6, 7, 8, 10, 11, 12], "stanford": 8, "start": [3, 7, 8, 10, 12], "statement": 10, "static": [4, 7, 8, 10, 12], "stationari": 6, "statist": 11, "statu": 8, "std": 10, "step": [1, 3, 6, 7, 8, 9, 10], "step_siz": 8, "stephen": 8, "stfc": [1, 2], "still": 2, "sting": 4, "stochast": 5, "stop": [2, 8, 9, 10], "stopiter": 8, "store": [1, 2, 3, 4, 8], "store_output": 4, "str": [4, 7, 8, 9, 10, 12], "strategi": 8, "strength": 10, "strict": 12, "strictli": 8, "stride": [4, 8], "string": [4, 7, 8, 9, 10, 11, 12], "stripe": 10, "strong_convexity_const": [8, 9], "strongli": [8, 9], "structur": [5, 8], "style": [3, 10], "sub": 9, "subclass": [4, 7, 8], "subdivid": 1, "subject": 8, "submodul": 3, "subplot": 12, "subproblem": 8, "subsequ": 8, "subset": 8, "substitut": [10, 12], "subtract": [4, 8], "suffici": [1, 6], "suit": 6, "suitabl": [3, 4, 10], "sum": [4, 8], "sum_": 8, "sumfunct": 8, "sumoper": 8, "sumscalarfunct": 8, "sup": [8, 9], "super": 8, "support": [2, 8, 10], "suppos": 8, "suppress": [3, 4, 8, 9, 10, 11, 12], "suppress_evalu": 8, "sure": [3, 8], "svd": 2, "svrg": 8, "svrgfunction": 8, "swap": 8, "symmetr": [8, 10], "symmetris": 8, "symmetrisedgradientoper": 8, "synchrotron": [1, 6], "synchrotron_parallel_beam_data": 12, "syntax": 3, "system": [1, 4, 5, 6, 8], "system_descript": 3, "t": [2, 4, 7, 8, 11], "t026677": 2, "t_": 8, "ta": 8, "tabl": 8, "take": [4, 7, 8, 10, 11, 12], "target": [3, 10], "task": 9, "tau": [8, 9], "tau_": 8, "team": 12, "teboul": 8, "techniqu": [6, 8], "templat": 3, "tempor": [8, 9], "temporari": 11, "temporarili": 12, "term": [6, 8, 9], "termin": 8, "test": [2, 3, 5, 6, 8], "testalgo": 8, "testdata": 12, "text": [3, 7, 8], "textbf": 8, "textprogresscallback": 8, "tgv": 9, "th": [8, 12], "than": [7, 8, 9, 10, 11], "thank": 2, "thei": [1, 3, 4, 8, 10, 12], "them": [1, 7, 8, 12], "theme": 3, "theoret": [8, 10], "theori": 12, "therefor": [4, 8, 9], "theta": 8, "theta_": 8, "thi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "thieleman": 8, "think": 2, "thoma": 8, "those": 4, "though": 1, "thread": [4, 8], "three": [6, 8], "threshold": [8, 10], "threshold_factor": 10, "threshold_valu": 10, "through": [7, 12], "thu": 8, "tiff": [1, 5, 12], "tiffstackread": [5, 7], "tiffwrit": [5, 7], "tigr": [4, 5, 6, 10, 11], "tikhonov": [2, 6, 8], "tikonov": 2, "tild": [6, 8], "tilt": 1, "time": [2, 3, 6, 8, 11, 12], "tip": 8, "titl": [2, 12], "tmp_nexu": 7, "tnv": 9, "tofil": 7, "togeth": [7, 10], "toggl": 8, "toler": [2, 8, 9, 10], "tomograph": [2, 4, 5, 8], "tomographi": [1, 2, 5, 8, 11], "tomographicimag": [2, 3, 5], "tomophantom": [5, 6], "toni": 8, "too": [8, 11], "tool": [2, 6], "toolbox": [9, 11], "toolkit": [6, 9], "top": [4, 12], "tort": 12, "tot_slic": 3, "total": [3, 5], "totalvari": [8, 9], "tqdm": [3, 8], "tqdm_asyncio": 8, "tqdm_class": 8, "tqdm_kwarg": 8, "track": 8, "trade": 8, "trajectori": [1, 6, 9], "tran": [5, 8], "transact": [2, 8], "transform": [8, 11], "translat": [2, 8], "translatefunct": 8, "transmiss": [5, 6], "transmissionabsorptionconvert": 10, "transpos": [7, 8], "treat": 8, "trigger": 8, "trivial": 5, "true": [2, 4, 7, 8, 9, 10, 11, 12], "true_adjoint": 8, "truedivis": 8, "truth": [2, 12], "try": 4, "tune": [10, 11], "tupl": [4, 7, 8, 10, 12], "turn": [1, 8], "turner": 8, "tutori": 5, "tv": [8, 9], "tw": 8, "tweak": 1, "twice": 2, "two": [2, 4, 8, 10, 11, 12], "twx": 8, "tx": 8, "txm": 7, "txrm": 7, "txt": 8, "type": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "typeerror": 8, "typic": [1, 6, 8], "u": [2, 4, 6, 8, 9], "u2": 7, "uint16": 7, "uint8": 7, "uk": 2, "ukri": [1, 2], "un": 2, "unari": [4, 8], "unary_oper": [4, 8], "unbin": 10, "unchang": 8, "uncompress": 7, "under": [1, 2, 3, 8], "underbrac": 8, "underscor": 3, "underset": [6, 8, 9], "understand": 3, "unexpect": [8, 12], "uniform": [4, 8, 12], "uniformli": 8, "uniqu": [4, 12], "unit": [1, 2, 3, 4, 8], "unit16": 7, "univers": [1, 2, 3], "unknown": [6, 8], "unless": [1, 2, 3, 10], "unmask": 10, "unpack": 7, "unreli": 10, "unsign": [7, 12], "until": 8, "unusu": 1, "up": [1, 2, 5, 7, 8, 9, 11, 12], "updat": [3, 8, 10, 11], "update_objctive_interv": 2, "update_object": 8, "update_objective_interv": [2, 8], "update_step_s": 8, "upper": [8, 10, 12], "upto": 8, "url": [3, 8], "us": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12], "usag": [8, 9, 10], "user": [3, 4, 6, 8, 10, 11], "utf": [1, 2], "util": [1, 5, 6, 11], "utilis": 8, "v": [8, 12], "v1": 8, "v2": 8, "v_1": 8, "v_2": 8, "vai": 8, "valid": [8, 12], "valu": [2, 4, 7, 8, 9, 10, 11, 12], "valueerror": [3, 8], "var": 12, "vararg": 8, "vari": 8, "variabl": 8, "varianc": 12, "variat": 5, "variou": 12, "vector": [1, 2, 4, 8, 10], "vectordata": [2, 5], "verbos": [3, 8, 11], "veri": 8, "versatil": [2, 5, 8], "version": [1, 3, 5, 8, 9], "vertic": [1, 4, 7, 8, 10], "vh": 2, "via": [2, 8], "view": [1, 3, 4, 6, 12], "view_dist": 12, "vision": 8, "visualis": 5, "vmatrix": [6, 8], "volum": [1, 3, 4, 5, 7, 8, 9, 10, 11], "voxel": [1, 8, 9], "voxel_num": 1, "voxel_num_i": [1, 4], "voxel_num_x": [1, 4], "voxel_num_z": [1, 4], "voxel_s": 1, "voxel_size_i": [1, 4], "voxel_size_x": [1, 4, 9], "voxel_size_z": [1, 4], "vstack": 2, "w": [2, 4, 8], "w_i": 8, "wa": [2, 8, 12], "wai": [3, 4, 8, 12], "want": [1, 4, 8], "warm": 8, "warm_start": 8, "warn": [8, 10], "warr": 8, "warranti": [1, 2, 3, 7, 12], "wavelet": [8, 10], "waveletoper": 5, "we": [1, 2, 4, 6, 7, 8, 12], "weak": 8, "web": 8, "websit": 5, "weight": [8, 9], "weightedl1norm": 8, "weightedl2normsquar": 8, "well": [2, 5, 6, 8], "were": 10, "wether": 8, "what": [3, 7, 8], "when": [1, 3, 6, 7, 8, 9, 12], "where": [1, 2, 4, 6, 8, 9, 10, 12], "wherea": 8, "whether": [4, 7, 8, 9, 12], "which": [1, 2, 4, 6, 7, 8, 10, 12], "whichev": [4, 11], "while": [5, 8], "white": 7, "white_level": 10, "whole": 4, "whose": 2, "widget": 12, "width": [10, 11, 12], "wiki": 8, "wikipedia": 8, "william": 8, "window": 10, "wise": [4, 8], "wish": 8, "wither": 8, "within": 3, "without": [1, 2, 3, 7, 8, 10, 12], "wname": [8, 10], "won": 8, "word": 3, "work": [3, 4, 6, 7, 8], "would": [2, 7, 8], "wrap": [8, 10], "wright": 8, "write": [1, 2, 3, 5, 6, 8], "writer": [5, 6], "written": [6, 7, 8, 9, 12], "www": [1, 2, 3], "wx": 8, "x": [1, 2, 4, 5, 6, 8, 9, 12], "x0": 1, "x1024": 1, "x2048": 1, "x4096": 1, "x_": [8, 9], "x_0": 8, "x_1": 8, "x_axis_label": 12, "x_i": 8, "x_k": 8, "x_n": 8, "xcorrel": 10, "xiaoqun": 8, "xin": 8, "xlq": 2, "xshape": 8, "xtekct": 7, "xtik": 2, "y": [1, 4, 8, 12], "y0": 1, "y1024": 1, "y2048": 1, "y4096": 1, "y_": 8, "y_axis_label": 12, "yaw": 1, "year": 3, "yet": 8, "yield": [8, 11], "yml": 3, "you": [1, 2, 3, 5, 7, 8, 10], "your": [1, 3, 8, 9, 10, 11], "yurii": 8, "yyyi": 3, "z": [1, 4, 8, 9, 12], "z0": 1, "z1024": 1, "z2048": 1, "z4096": 1, "zeiss": [1, 5], "zeissdataread": [5, 7], "zero": [2, 4, 8, 10], "zero_data": 2, "zerofunct": 8, "zerooper": 8, "zhang": 8, "zhu": 8, "zip": 8, "\u00f6": 8, "\u00fc": 8}, "titles": ["Tutorials", "A detailed look at CIL geometry", "1D inverse problem demo using deriv2 from regtools", "Developers\u2019 Guide", "Framework", "Welcome to CIL\u2019s documentation!", "Introduction", "Read/ write AcquisitionData and ImageData", "Optimisation framework", "CIL Plugins", "Processors", "Recon", "Utilities"], "titleterms": {"": 5, "0": 2, "1": 2, "1d": [2, 12], "23": 2, "2d": 12, "A": [1, 12], "Of": 10, "The": 1, "absorpt": 10, "acquisitiondata": [4, 7], "acquisitiongeometri": [1, 4], "algorithm": 8, "an": 1, "analyt": 11, "approxim": 8, "astra": 9, "base": 8, "beam": [1, 6, 11], "binner": 10, "block": [6, 8], "blockdatacontain": [4, 8], "blockgeometri": 4, "box": 8, "build": 3, "callback": 8, "ccpi": 9, "centr": 10, "cgl": 8, "channel": 6, "cil": [1, 2, 3, 5, 9], "cite": 5, "class": 8, "complex": 1, "composit": 8, "cone": [1, 6, 11], "cone2d": 4, "cone3d": 4, "configur": 4, "contact": 5, "contain": 4, "content": 5, "contribut": 3, "convent": 3, "convert": 10, "corrector": 10, "creat": 1, "creator": 3, "ct": [6, 12], "custom": 1, "data": [4, 6, 10, 12], "datacontain": 4, "dataord": 4, "dataprocessor": 4, "dataset": 12, "demo": [2, 5], "deriv2": 2, "descent": 8, "detail": 1, "determinist": 8, "develop": 3, "diamond": 12, "displai": 12, "docstr": 3, "document": [3, 5], "exampl": [3, 4, 5, 7, 8], "fan": [1, 6], "fanbeam": 4, "fbp": [9, 11], "fdk": 11, "file": 7, "fista": 8, "framework": [4, 6, 8], "from": [2, 3, 10, 12], "function": [8, 9], "galleri": 3, "gd": 8, "gener": 10, "geometri": [1, 4, 6, 11, 12], "gradient": 8, "gradientoper": 8, "guid": 3, "guidelin": 3, "hdf5": 7, "imag": 12, "imagedata": [4, 7], "imagegeometri": [1, 4], "index": [5, 12], "indic": 8, "interact": 12, "introduct": 6, "invers": 2, "islic": 12, "ista": 8, "kullbackleibl": 8, "kwarg": 8, "l1": 8, "l11": 8, "l2": 8, "l21": 8, "ladmm": 8, "least": 8, "light": 12, "link": 12, "link_islic": 12, "local": 3, "look": 1, "manipul": 10, "mask": 10, "method": [3, 8], "metric": 12, "mix": 8, "more": 1, "multi": 6, "new": 3, "nexu": 7, "nikon": 7, "norm": 8, "normalis": 10, "note": [1, 7], "notebook": 3, "object": [3, 12], "offset": 1, "oper": [8, 9], "optimis": 8, "other": [3, 9], "padder": 10, "parallel": [1, 6, 11], "parallel2d": 4, "parallel3d": 4, "paramet": [7, 8], "pdhg": 8, "plugin": 9, "pre": 10, "problem": 2, "processor": 10, "project": 9, "properti": 3, "qualiti": 12, "raw": 7, "read": 7, "reader": 7, "recon": 11, "reconstruct": 11, "reconstructor": 11, "refer": 8, "regtool": 2, "regularis": 9, "remov": 10, "render": 3, "return": 7, "ring": 10, "rotat": 10, "sampler": 8, "set": 12, "setter": 3, "show1d": 12, "show2d": 12, "show_geometri": 12, "simpl": [1, 8], "simul": 12, "sirt": 8, "slice": 12, "slicer": 10, "smooth": 8, "softwar": 5, "sourc": [3, 12], "sparsiti": 8, "spdhg": 8, "squar": 8, "stochast": 8, "structur": 1, "system": 12, "test": 12, "thi": 5, "tiff": 7, "tigr": 9, "todo": 8, "tomophantom": 9, "total": [8, 9], "transmiss": 10, "trivial": 8, "tutori": 0, "us": [2, 4], "util": [7, 8, 12], "variat": [8, 9], "vectordata": 4, "version": 2, "visualis": 12, "volum": 12, "waveletoper": 8, "welcom": 5, "work": 5, "write": 7, "writer": 7, "zeiss": 7}})