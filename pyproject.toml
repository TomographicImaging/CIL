[build-system]
requires = [
    "setuptools>=64",
    "setuptools_scm>=8",
    "scikit-build-core>=0.10",
    "nanobind", 
    "ipp-devel>=2022.1", 
    "ipp-static>=2022.1", 
    "intel-openmp",
]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
minimum-version = "build-system.requires"
cmake.version = ">=3.16"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["Wrappers/Python/cil/version.py"]
sdist.exclude = ["scripts", "docs", "Wrappers/Python/data", "Wrappers/Python/test", ".*"]
[tool.scikit-build.wheel.packages]
cil = "Wrappers/Python/cil"

[tool.setuptools_scm]
version_file = "Wrappers/Python/cil/version.py"
version_file_template = """
version = '{version}'
major = {version_tuple[0]}
minor = {version_tuple[1]}
patch = {version_tuple[2]}
commit_hash = '{scm_version.node}'
num_commit = {scm_version.distance}
# work-around for https://github.com/pypa/setuptools_scm/issues/1059
if (commit_hash, num_commit) == ('None', 0):
    import re
    if (_v := re.search(r'\\.dev(\\d+)\\+(\\w+)', version)):
        num_commit, commit_hash = int(_v.group(1)), _v.group(2)
"""

[tool.setuptools]
package-dir = {"" = "Wrappers/Python"}

[tool.setuptools.packages.find]
where = ["Wrappers/Python"]
include = ["cil", "cil.*"]
exclude = ["data", "test"]

[project.urls]
#homepage = "https://ccpi.ac.uk/cil"
homepage = "https://tomographicimaging.github.io/CIL"
documentation = "https://tomographicimaging.github.io/CIL/nightly"
repository = "https://github.com/TomographicImaging/CIL"
changelog = "https://github.com/TomographicImaging/CIL/blob/master/CHANGELOG.md"

[project]
name = "cil"
dynamic = ["version"]
description = "Core Imaging Library"
license = {text = "Apache-2.0"}
maintainers = [{name="CIL developers", email="tomography+cil@stfc.ac.uk"}]
requires-python = ">=3.10"
readme = "README.md"
keywords = ["tomography", "optimisation"]
dependencies = [
    #"cil-data>=22", # missing from PyPI
    "dxchange",
    "h5py",
    #"ipp==2021.12.*", # PyPI conflicts with conda package
    "numba",
    "numpy>=1.23,<2.0",
    "olefile>=0.46",
    "pillow",
    "pywavelets",
    "scipy>=1.4.0",
    "tqdm",
    "zenodo_get>=1.6",
]
[project.optional-dependencies]
plugins = [
    "ipywidgets",
    #"tomophantom==2.0.0", # [linux] # missing from PyPI
]
gpu = [
    "astra-toolbox", # [not osx]
    #"tigre>=2.4,<=2.6", # missing from PyPI
]
[dependency-groups]
test = [
    #"ccpi-regulariser=24.0.1", # [not osx] # missing from PyPI
    "cvxpy",
    "matplotlib>=3.3.0",
    "packaging",
    "scikit-image",
    "unittest-parametrize",
    "wget",
]
docs = [
  "jinja2",
  #"pydata-sphinx-theme",
  "recommonmark",
  "sphinx",
  "sphinx_rtd_theme",
  "sphinx-autobuild",
  "sphinx-click",
  "sphinx-copybutton",
  "sphinx-panels",
  "sphinxcontrib-bibtex",
  "nbsphinx",
  "sphinx-gallery",
  "sphinx-copybutton",
  "notebook",
]
