name: build
on:
  workflow_dispatch:
  release: {types: [published]}
  push:
jobs:
  test-cuda:
    defaults: {run: {shell: 'bash -el {0}'}}
    runs-on: [self-hosted, '${{ matrix.os }}']
    strategy:
      matrix:
        python-version: [3.11]
        numpy-version: [1.25]
        os: [Windows]
    steps:
    - uses: actions/checkout@v4
      with: {fetch-depth: 0, submodules: recursive}
    - if: matrix.os == 'Windows'
      name: Setup Windows
      run: |
        echo|set /p="C:\Program Files\Git\bin" | more /P >> %GITHUB_PATH%
        echo|set /p="CONDA=C:\Windows\ServiceProfiles\NetworkService\miniconda3" | more /P >> %GITHUB_ENV%
      shell: cmd
    - id: reqs
      name: set requirements
      run: |
        envname="${GITHUB_REPOSITORY##*/}-${GITHUB_RUN_ID}.${GITHUB_RUN_NUMBER}"
        echo "envname=$envname" >> $GITHUB_OUTPUT
        sed -ri -e 's/^(name: ).*/\1$envname/' -e '/ python /d' -e 's/(.* numpy) .*/\1=${{ matrix.numpy-version }}/' scripts/requirements-test.yml
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: scripts/requirements-test.yml
        activate-environment: ${{ steps.reqs.outputs.envname }}
        run-post: false
    - id: build
      name: build
      run: |
        conda activate "${{ steps.reqs.outputs.envname }}"
        pip install .
    - name: test
      run: |
        conda activate "${{ steps.reqs.outputs.envname }}"
        python -m unittest discover -v -k tigre -k TIGRE -k astra -k ASTRA -k Astra -k gpu -k GPU ./Wrappers/Python/test
      env:
        TESTS_FORCE_GPU: 1
        CIL_DATA_DIR: ${{ matrix.os == 'Linux' && '/opt/runner/hostedtoolcache/cil' || 'C:\\actions-runner\\hostedtoolcache\\cil' }}
    - if: always()
      name: Post Run conda-incubator/setup-miniconda@v3
      run: |
        if test ${{ matrix.os }} = Linux; then
          sed -i '/${{ steps.reqs.outputs.envname }}/d' ~/.profile
          source ~/.profile
          conda env remove -n "${{ steps.reqs.outputs.envname }}"
        else
          rm -rf $CONDA/envs/"${{ steps.reqs.outputs.envname }}"
        fi
