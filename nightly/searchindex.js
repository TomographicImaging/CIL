Search.setIndex({"alltitles": {"**kwargs": [[9, "kwargs"]], "1D inverse problem demo using deriv2 from regtools": [[3, null]], "A CT dataset from the Diamond Light Source": [[13, "a-ct-dataset-from-the-diamond-light-source"]], "A Note on CIL AcquisitionGeometry:": [[1, "A-Note-on-CIL-AcquisitionGeometry:"]], "A Note on CIL ImageGeometry:": [[1, "A-Note-on-CIL-ImageGeometry:"]], "A detailed look at CIL geometry": [[1, null]], "A set of simulated volumes and CT data": [[13, "a-set-of-simulated-volumes-and-ct-data"]], "ASTRA": [[10, "astra"]], "Absorption to Transmission Converter": [[11, "absorption-to-transmission-converter"]], "AcquisitionData": [[5, "acquisitiondata"]], "AcquisitionGeometry": [[5, "acquisitiongeometry"]], "Algorithms (Deterministic)": [[9, "algorithms-deterministic"]], "Algorithms (Stochastic)": [[9, "algorithms-stochastic"]], "Analytical Reconstruction": [[12, "analytical-reconstruction"]], "Approximate Gradient base class": [[9, "approximate-gradient-base-class"]], "Approximate gradient methods": [[9, "approximate-gradient-methods"]], "Base class": [[9, "base-class"]], "Base classes": [[9, "base-classes"]], "Block Framework": [[7, "block-framework"], [9, "block-framework"]], "Block Function": [[9, "block-function"]], "Block Operator": [[9, "block-operator"]], "BlockDataContainer": [[5, "blockdatacontainer"], [9, "blockdatacontainer"]], "BlockGeometry": [[5, "blockgeometry"]], "Building documentation locally": [[4, "building-documentation-locally"]], "CCPi Regularisation": [[10, "ccpi-regularisation"]], "CGLS": [[9, "cgls"]], "CIL Callback demonstration": [[2, null]], "CIL Plugins": [[10, null]], "CIL version 23.0.1": [[3, "CIL-version-23.0.1"]], "CT Geometry": [[7, "ct-geometry"]], "Calculating a noise approximation for each iteration (A custom callback example)": [[2, "Calculating-a-noise-approximation-for-each-iteration-(A-custom-callback-example)"]], "Calculating data discrepancy at each iteration (A custom callback example)": [[2, "Calculating-data-discrepancy-at-each-iteration-(A-custom-callback-example)"]], "Callbacks": [[9, "callbacks"]], "Centre Of Rotation Corrector": [[11, "centre-of-rotation-corrector"]], "Cite this work": [[6, "cite-this-work"]], "Composition of operator and a function": [[9, "composition-of-operator-and-a-function"]], "Cone-beam geometry": [[1, "Cone-beam-geometry"], [7, "cone-beam-geometry"]], "Cone2D Geometry (Fanbeam)": [[5, "cone2d-geometry-fanbeam"]], "Cone3D Geometry": [[5, "cone3d-geometry"]], "Configure the geometry": [[5, "configure-the-geometry"]], "Contacts": [[6, "contacts"]], "Contributions guidelines": [[4, "contributions-guidelines"]], "Conventions on new CIL objects": [[4, "conventions-on-new-cil-objects"]], "Create a custom ImageGeometry": [[1, "Create-a-custom-ImageGeometry"]], "Create a more complex AcquisitionGeometry": [[1, "Create-a-more-complex-AcquisitionGeometry"]], "Create a simple AcquisitionGeometry": [[1, "Create-a-simple-AcquisitionGeometry"]], "Create a simple ImageGeometry": [[1, "Create-a-simple-ImageGeometry"]], "Create an offset AcquisitionGeometry": [[1, "Create-an-offset-AcquisitionGeometry"]], "Creator": [[4, "creator"]], "Data Binner": [[11, "data-binner"]], "Data Containers": [[5, "data-containers"]], "Data Manipulation": [[11, "data-manipulation"]], "Data Masking": [[11, "data-masking"]], "Data Normaliser": [[11, "data-normaliser"]], "Data Padder": [[11, "data-padder"]], "Data Slicer": [[11, "data-slicer"]], "DataContainer": [[5, "datacontainer"]], "DataProcessor": [[5, "dataprocessor"]], "Default behaviour": [[2, "Default-behaviour"]], "Demos and Examples": [[6, "demos-and-examples"]], "Developers\u2019 Guide": [[4, null]], "Docstrings": [[4, "docstrings"]], "Documentation": [[4, "documentation"]], "Early stopping (a custom callback example)": [[2, "Early-stopping-(a-custom-callback-example)"]], "Example from cil": [[4, "example-from-cil"]], "Example:": [[5, "example"], [8, "example"], [9, "example"], [9, "id19"], [9, "id59"]], "FBP": [[10, "fbp"], [10, "id6"]], "FBP - Reconstructor for parallel-beam geometry": [[12, "fbp-reconstructor-for-parallel-beam-geometry"]], "FDK - Reconstructor for cone-beam geometry": [[12, "fdk-reconstructor-for-cone-beam-geometry"]], "FISTA": [[9, "fista"]], "Fan-beam geometry": [[1, "Fan-beam-geometry"], [7, "fan-beam-geometry"]], "Framework": [[5, null]], "Functions": [[9, "functions"]], "GD": [[9, "gd"]], "GradientOperator": [[9, "gradientoperator"]], "HDF5 Utilities": [[8, "hdf5-utilities"]], "ISTA": [[9, "ista"]], "Image Quality metrics": [[13, "module-cil.utilities.quality_measures"]], "Image metric callbacks (custom callback example)": [[2, "Image-metric-callbacks-(custom-callback-example)"]], "ImageData": [[5, "imagedata"]], "ImageGeometry": [[5, "imagegeometry"]], "Indicator box": [[9, "indicator-box"]], "Introduction": [[7, null]], "KullbackLeibler": [[9, "kullbackleibler"]], "L1 Norm": [[9, "l1-norm"]], "L1 Sparsity": [[9, "l1-sparsity"]], "L2 Norm Squared": [[9, "l2-norm-squared"]], "LADMM": [[9, "ladmm"]], "Labels": [[5, "labels"]], "Least Squares": [[9, "least-squares"]], "Load Data": [[2, "Load-Data"]], "Loopless Stochastic Variance Reduced Gradient Function": [[9, "loopless-stochastic-variance-reduced-gradient-function"]], "Mask Generator from Data": [[11, "mask-generator-from-data"]], "Memory requirements": [[9, "memory-requirements"]], "Mixed L11 norm": [[9, "mixed-l11-norm"]], "Mixed L21 norm": [[9, "mixed-l21-norm"]], "More complex example, image metric callbacks with region of interests": [[2, "More-complex-example,-image-metric-callbacks-with-region-of-interests"]], "Multi channel data": [[7, "multi-channel-data"]], "NeXuS": [[8, "nexus"]], "Nikon": [[8, "nikon"]], "Note": [[9, "note"]], "Notebooks gallery": [[4, "notebooks-gallery"]], "Notes:": [[8, "notes"]], "Operator base classes": [[9, "operator-base-classes"]], "Operators": [[9, "operators"]], "Optimisation framework": [[9, null]], "Other methods": [[4, "other-methods"]], "Other provided CIL callbacks": [[2, "Other-provided-CIL-callbacks"]], "Other regularisation functions": [[10, "other-regularisation-functions"]], "PD3O": [[9, "pd3o"]], "PDHG": [[9, "pdhg"]], "Paganin Processor": [[11, "paganin-processor"]], "Parallel geometry": [[1, "Parallel-geometry"], [7, "parallel-geometry"]], "Parallel2D Geometry": [[5, "parallel2d-geometry"]], "Parallel3D Geometry": [[5, "parallel3d-geometry"]], "Parameters:": [[8, "parameters"], [9, "parameters"], [9, "id16"], [9, "id33"]], "Partitioner": [[5, "partitioner"]], "Pre-processors": [[11, "pre-processors"]], "Preconditioners": [[9, "preconditioners"]], "Processors": [[11, null]], "Projection Operator": [[10, "projection-operator"], [10, "id7"]], "RAW File Writer": [[8, "raw-file-writer"]], "Read/ write AcquisitionData and ImageData": [[8, null]], "Recon": [[12, null]], "Reference": [[9, "reference"], [9, "id53"]], "References": [[9, "references"]], "Rendered": [[4, "rendered"]], "Returns:": [[8, "returns"], [8, "id3"]], "Ring Remover": [[11, "ring-remover"]], "SAG function": [[9, "sag-function"]], "SAGA function": [[9, "saga-function"]], "SIRT": [[9, "sirt"]], "SPDHG": [[9, "spdhg"]], "Samplers": [[9, "samplers"]], "Setter methods and properties": [[4, "setter-methods-and-properties"]], "Simple functions": [[9, "simple-functions"]], "Simulated image data": [[13, "simulated-image-data"]], "Smooth Mixed L21 norm": [[9, "smooth-mixed-l21-norm"]], "Source": [[4, "source"]], "Step size methods": [[9, "step-size-methods"]], "Stochastic Gradient Descent Example": [[9, "stochastic-gradient-descent-example"]], "Stochastic Gradient function": [[9, "stochastic-gradient-function"]], "Stochastic Variance Reduced Gradient Function": [[9, "stochastic-variance-reduced-gradient-function"]], "TIFF Reader/Writer": [[8, "tiff-reader-writer"]], "TIGRE": [[10, "tigre"]], "Table of Contents": [[6, "table-of-contents"]], "Test datasets": [[13, "test-datasets"]], "The structure of an AcquisitionGeometry": [[1, "The-structure-of-an-AcquisitionGeometry"]], "The structure of an ImageGeometry": [[1, "The-structure-of-an-ImageGeometry"]], "Todo": [[9, "id13"]], "TomoPhantom": [[10, "tomophantom"]], "Total variation": [[9, "total-variation"], [10, "total-variation"]], "Transmission to Absorption Converter": [[11, "transmission-to-absorption-converter"]], "Trivial operators": [[9, "trivial-operators"]], "Tutorials": [[0, null]], "Use the geometry": [[5, "use-the-geometry"]], "Utilities": [[9, "utilities"], [13, null]], "VectorData": [[5, "vectordata"]], "Visualisation": [[13, "visualisation"]], "WaveletOperator": [[9, "waveletoperator"]], "Welcome to CIL\u2019s documentation!": [[6, null]], "ZEISS": [[8, "zeiss"]], "islicer - interactive display of 2D slices": [[13, "islicer-interactive-display-of-2d-slices"]], "link_islicer - link islicer objects by index": [[13, "link-islicer-link-islicer-objects-by-index"]], "show1D - Display 1D slices": [[13, "show1d-display-1d-slices"]], "show2D - Display 2D slices": [[13, "show2d-display-2d-slices"]], "show_geometry - Display system geometry": [[13, "show-geometry-display-system-geometry"]]}, "docnames": ["demos", "demos/00_CIL_geometry", "demos/callback_demonstration", "demos/deriv2_cgls", "developer_guide", "framework", "index", "introduction", "io", "optimisation", "plugins", "processors", "recon", "utilities"], "envversion": {"nbsphinx": 4, "sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["demos.rst", "demos/00_CIL_geometry.ipynb", "demos/callback_demonstration.ipynb", "demos/deriv2_cgls.ipynb", "developer_guide.rst", "framework.rst", "index.rst", "introduction.rst", "io.rst", "optimisation.rst", "plugins.rst", "processors.rst", "recon.rst", "utilities.rst"], "indexentries": {"__call__() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.__call__", false]], "__call__() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[10, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.__call__", false]], "__call__() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TGV.__call__", false]], "__call__() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TNV.__call__", false]], "__delattr__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__delattr__", false]], "__delattr__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__delattr__", false]], "__dir__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__dir__", false]], "__dir__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__dir__", false]], "__eq__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__eq__", false]], "__eq__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__eq__", false]], "__format__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__format__", false]], "__format__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__format__", false]], "__ge__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__ge__", false]], "__ge__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__ge__", false]], "__getattribute__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__getattribute__", false]], "__getattribute__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__getattribute__", false]], "__getitem__() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.__getitem__", false]], "__getstate__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__getstate__", false]], "__getstate__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__getstate__", false]], "__gt__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__gt__", false]], "__gt__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__gt__", false]], "__hash__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__hash__", false]], "__hash__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__hash__", false]], "__iadd__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__iadd__", false]], "__idiv__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__idiv__", false]], "__imul__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__imul__", false]], "__init__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__init__", false]], "__init__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__init__", false]], "__init__() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.__init__", false]], "__init__() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.__init__", false]], "__init__() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[10, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.__init__", false]], "__init__() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TGV.__init__", false]], "__init__() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TNV.__init__", false]], "__init_subclass__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__init_subclass__", false]], "__init_subclass__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__init_subclass__", false]], "__isub__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__isub__", false]], "__iter__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__iter__", false]], "__iter__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__iter__", false]], "__iter__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__iter__", false]], "__itruediv__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__itruediv__", false]], "__le__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__le__", false]], "__le__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__le__", false]], "__lt__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__lt__", false]], "__lt__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__lt__", false]], "__ne__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__ne__", false]], "__ne__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__ne__", false]], "__neg__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__neg__", false]], "__new__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__new__", false]], "__new__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__new__", false]], "__next__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__next__", false]], "__next__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__next__", false]], "__radd__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__radd__", false]], "__rdiv__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__rdiv__", false]], "__reduce__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__reduce__", false]], "__reduce__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__reduce__", false]], "__reduce_ex__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__reduce_ex__", false]], "__reduce_ex__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__reduce_ex__", false]], "__repr__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__repr__", false]], "__repr__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__repr__", false]], "__rmul__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__rmul__", false]], "__rmul__() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.__rmul__", false]], "__rmul__() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.__rmul__", false]], "__rmul__() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[10, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.__rmul__", false]], "__rmul__() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TGV.__rmul__", false]], "__rmul__() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TNV.__rmul__", false]], "__rpow__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__rpow__", false]], "__rsub__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__rsub__", false]], "__rtruediv__() (cil.framework.blockdatacontainer method)": [[9, "cil.framework.BlockDataContainer.__rtruediv__", false]], "__setattr__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__setattr__", false]], "__setattr__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__setattr__", false]], "__sizeof__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__sizeof__", false]], "__sizeof__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__sizeof__", false]], "__str__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__str__", false]], "__str__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__str__", false]], "__subclasshook__() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.__subclasshook__", false]], "__subclasshook__() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.__subclasshook__", false]], "__weakref__ (cil.framework.blockdatacontainer attribute)": [[9, "cil.framework.BlockDataContainer.__weakref__", false]], "__weakref__ (cil.optimisation.algorithms.fista attribute)": [[9, "cil.optimisation.algorithms.FISTA.__weakref__", false]], "__weakref__ (cil.optimisation.algorithms.ista attribute)": [[9, "cil.optimisation.algorithms.ISTA.__weakref__", false]], "absorptiontransmissionconverter (class in cil.processors)": [[11, "cil.processors.AbsorptionTransmissionConverter", false]], "acquisitiondata (class in cil.framework)": [[5, "cil.framework.AcquisitionData", false]], "acquisitiondimension (class in cil.framework.labels)": [[5, "cil.framework.labels.AcquisitionDimension", false]], "acquisitiongeometry (class in cil.framework)": [[5, "cil.framework.AcquisitionGeometry", false]], "acquisitiontype (class in cil.framework.labels)": [[5, "cil.framework.labels.AcquisitionType", false]], "adaptivesensitivity (class in cil.optimisation.utilities.preconditioner)": [[9, "cil.optimisation.utilities.preconditioner.AdaptiveSensitivity", false]], "add() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.add", false], [9, "cil.framework.BlockDataContainer.add", false]], "adjoint() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.channelwiseoperator method)": [[9, "cil.optimisation.operators.ChannelwiseOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.compositionoperator method)": [[9, "cil.optimisation.operators.CompositionOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.diagonaloperator method)": [[9, "cil.optimisation.operators.DiagonalOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.finitedifferenceoperator method)": [[9, "cil.optimisation.operators.FiniteDifferenceOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.gradientoperator method)": [[9, "cil.optimisation.operators.GradientOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.identityoperator method)": [[9, "cil.optimisation.operators.IdentityOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.linearoperator method)": [[9, "cil.optimisation.operators.LinearOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.matrixoperator method)": [[9, "cil.optimisation.operators.MatrixOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.projectionmap method)": [[9, "cil.optimisation.operators.ProjectionMap.adjoint", false]], "adjoint() (cil.optimisation.operators.scaledoperator method)": [[9, "cil.optimisation.operators.ScaledOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.sumoperator method)": [[9, "cil.optimisation.operators.SumOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.symmetrisedgradientoperator method)": [[9, "cil.optimisation.operators.SymmetrisedGradientOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.waveletoperator method)": [[9, "cil.optimisation.operators.WaveletOperator.adjoint", false]], "adjoint() (cil.optimisation.operators.zerooperator method)": [[9, "cil.optimisation.operators.ZeroOperator.adjoint", false]], "algorithm (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.Algorithm", false]], "allocate() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.allocate", false]], "allocate() (cil.framework.blockgeometry method)": [[5, "cil.framework.BlockGeometry.allocate", false]], "allocate() (cil.framework.imagegeometry method)": [[5, "cil.framework.ImageGeometry.allocate", false]], "angle (cil.framework.labels.acquisitiondimension attribute)": [[5, "cil.framework.labels.AcquisitionDimension.ANGLE", false]], "angleunit (class in cil.framework.labels)": [[5, "cil.framework.labels.AngleUnit", false]], "apply() (cil.optimisation.utilities.preconditioner.adaptivesensitivity method)": [[9, "cil.optimisation.utilities.preconditioner.AdaptiveSensitivity.apply", false]], "apply() (cil.optimisation.utilities.preconditioner.preconditioner method)": [[9, "cil.optimisation.utilities.preconditioner.Preconditioner.apply", false], [9, "id54", false]], "apply() (cil.optimisation.utilities.preconditioner.sensitivity method)": [[9, "cil.optimisation.utilities.preconditioner.Sensitivity.apply", false]], "apply_circular_mask() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.apply_circular_mask", false]], "approximate_gradient() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.approximate_gradient", false]], "approximate_gradient() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.approximate_gradient", false]], "approximate_gradient() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.approximate_gradient", false]], "approximate_gradient() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.approximate_gradient", false]], "approximate_gradient() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.approximate_gradient", false]], "approximate_gradient() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.approximate_gradient", false]], "approximategradientsumfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction", false]], "armijostepsizerule (class in cil.optimisation.utilities.stepsizemethods)": [[9, "cil.optimisation.utilities.StepSizeMethods.ArmijoStepSizeRule", false]], "as_array() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.as_array", false]], "as_array() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.as_array", false]], "as_array() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.as_array", false]], "as_array() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.as_array", false]], "axpby() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.axpby", false], [9, "cil.framework.BlockDataContainer.axpby", false]], "barzilaiborweinstepsizerule (class in cil.optimisation.utilities.stepsizemethods)": [[9, "cil.optimisation.utilities.StepSizeMethods.BarzilaiBorweinStepSizeRule", false]], "binary_operations() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.binary_operations", false], [9, "cil.framework.BlockDataContainer.binary_operations", false]], "binner (class in cil.processors)": [[11, "cil.processors.Binner", false]], "blockdatacontainer (class in cil.framework)": [[5, "cil.framework.BlockDataContainer", false], [9, "cil.framework.BlockDataContainer", false]], "blockfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.BlockFunction", false]], "blockgeometry (class in cil.framework)": [[5, "cil.framework.BlockGeometry", false]], "blockoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.BlockOperator", false]], "calculate_lipschitz() (cil.optimisation.functions.totalvariation method)": [[9, "cil.optimisation.functions.TotalVariation.calculate_Lipschitz", false]], "calculate_norm() (cil.optimisation.operators.channelwiseoperator method)": [[9, "cil.optimisation.operators.ChannelwiseOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.diagonaloperator method)": [[9, "cil.optimisation.operators.DiagonalOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.gradientoperator method)": [[9, "cil.optimisation.operators.GradientOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.identityoperator method)": [[9, "cil.optimisation.operators.IdentityOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.linearoperator method)": [[9, "cil.optimisation.operators.LinearOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.waveletoperator method)": [[9, "cil.optimisation.operators.WaveletOperator.calculate_norm", false]], "calculate_norm() (cil.optimisation.operators.zerooperator method)": [[9, "cil.optimisation.operators.ZeroOperator.calculate_norm", false]], "callback (class in cil.optimisation.utilities.callbacks)": [[9, "cil.optimisation.utilities.callbacks.Callback", false]], "centered_at() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.constantfunction method)": [[9, "cil.optimisation.functions.ConstantFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.function method)": [[9, "cil.optimisation.functions.Function.centered_at", false]], "centered_at() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.centered_at", false]], "centered_at() (cil.optimisation.functions.kullbackleibler method)": [[9, "cil.optimisation.functions.KullbackLeibler.centered_at", false]], "centered_at() (cil.optimisation.functions.l1norm method)": [[9, "cil.optimisation.functions.L1Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.l1sparsity method)": [[9, "cil.optimisation.functions.L1Sparsity.centered_at", false]], "centered_at() (cil.optimisation.functions.l2normsquared method)": [[9, "cil.optimisation.functions.L2NormSquared.centered_at", false]], "centered_at() (cil.optimisation.functions.leastsquares method)": [[9, "cil.optimisation.functions.LeastSquares.centered_at", false]], "centered_at() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.mixedl11norm method)": [[9, "cil.optimisation.functions.MixedL11Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.mixedl21norm method)": [[9, "cil.optimisation.functions.MixedL21Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.operatorcompositionfunction method)": [[9, "cil.optimisation.functions.OperatorCompositionFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.rosenbrock method)": [[9, "cil.optimisation.functions.Rosenbrock.centered_at", false]], "centered_at() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.scaledfunction method)": [[9, "cil.optimisation.functions.ScaledFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.smoothmixedl21norm method)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm.centered_at", false]], "centered_at() (cil.optimisation.functions.sumfunction method)": [[9, "cil.optimisation.functions.SumFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.sumscalarfunction method)": [[9, "cil.optimisation.functions.SumScalarFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.totalvariation method)": [[9, "cil.optimisation.functions.TotalVariation.centered_at", false]], "centered_at() (cil.optimisation.functions.translatefunction method)": [[9, "cil.optimisation.functions.TranslateFunction.centered_at", false]], "centered_at() (cil.optimisation.functions.weightedl2normsquared method)": [[9, "cil.optimisation.functions.WeightedL2NormSquared.centered_at", false]], "centered_at() (cil.optimisation.functions.zerofunction method)": [[9, "cil.optimisation.functions.ZeroFunction.centered_at", false]], "centreofrotationcorrector (class in cil.processors)": [[11, "cil.processors.CentreOfRotationCorrector", false]], "cgls (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.CGLS", false]], "channel (cil.framework.labels.acquisitiondimension attribute)": [[5, "cil.framework.labels.AcquisitionDimension.CHANNEL", false]], "channel (cil.framework.labels.imagedimension attribute)": [[5, "cil.framework.labels.ImageDimension.CHANNEL", false]], "channelwiseoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.ChannelwiseOperator", false]], "check_convergence() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.check_convergence", false]], "check_input() (cil.framework.dataprocessor method)": [[5, "cil.framework.DataProcessor.check_input", false]], "check_input() (cil.framework.processor method)": [[5, "cil.framework.Processor.check_input", false]], "check_input() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TNV.check_input", false]], "cil.utilities.quality_measures": [[13, "module-cil.utilities.quality_measures", false]], "clone() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.clone", false]], "clone() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.clone", false]], "clone() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.clone", false]], "clone() (cil.framework.imagegeometry method)": [[5, "cil.framework.ImageGeometry.clone", false]], "clone() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.clone", false]], "column_wise_compatible() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.column_wise_compatible", false]], "compositionoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.CompositionOperator", false]], "compute_preconditioner_matrix() (cil.optimisation.utilities.preconditioner.sensitivity method)": [[9, "cil.optimisation.utilities.preconditioner.Sensitivity.compute_preconditioner_matrix", false]], "cone (cil.framework.labels.acquisitiontype attribute)": [[5, "cil.framework.labels.AcquisitionType.CONE", false]], "constant() (cil.processors.padder static method)": [[11, "cil.processors.Padder.constant", false]], "constantfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.ConstantFunction", false]], "constantstepsize (class in cil.optimisation.utilities.stepsizemethods)": [[9, "cil.optimisation.utilities.StepSizeMethods.ConstantStepSize", false]], "convex_conjugate() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.constantfunction method)": [[9, "cil.optimisation.functions.ConstantFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.function method)": [[9, "cil.optimisation.functions.Function.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.kullbackleibler method)": [[9, "cil.optimisation.functions.KullbackLeibler.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.l1norm method)": [[9, "cil.optimisation.functions.L1Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.l1sparsity method)": [[9, "cil.optimisation.functions.L1Sparsity.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.l2normsquared method)": [[9, "cil.optimisation.functions.L2NormSquared.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.leastsquares method)": [[9, "cil.optimisation.functions.LeastSquares.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.mixedl11norm method)": [[9, "cil.optimisation.functions.MixedL11Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.mixedl21norm method)": [[9, "cil.optimisation.functions.MixedL21Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.operatorcompositionfunction method)": [[9, "cil.optimisation.functions.OperatorCompositionFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.rosenbrock method)": [[9, "cil.optimisation.functions.Rosenbrock.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.scaledfunction method)": [[9, "cil.optimisation.functions.ScaledFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.smoothmixedl21norm method)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sumfunction method)": [[9, "cil.optimisation.functions.SumFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.sumscalarfunction method)": [[9, "cil.optimisation.functions.SumScalarFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.totalvariation method)": [[9, "cil.optimisation.functions.TotalVariation.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.translatefunction method)": [[9, "cil.optimisation.functions.TranslateFunction.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.weightedl2normsquared method)": [[9, "cil.optimisation.functions.WeightedL2NormSquared.convex_conjugate", false]], "convex_conjugate() (cil.optimisation.functions.zerofunction method)": [[9, "cil.optimisation.functions.ZeroFunction.convex_conjugate", false]], "convex_conjugate() (cil.plugins.ccpi_regularisation.functions.fgp_dtv method)": [[10, "cil.plugins.ccpi_regularisation.functions.FGP_dTV.convex_conjugate", false]], "convex_conjugate() (cil.plugins.ccpi_regularisation.functions.tgv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TGV.convex_conjugate", false]], "convex_conjugate() (cil.plugins.ccpi_regularisation.functions.tnv method)": [[10, "cil.plugins.ccpi_regularisation.functions.TNV.convex_conjugate", false]], "copy() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.copy", false]], "copy() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.copy", false], [9, "cil.framework.BlockDataContainer.copy", false]], "copy() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.copy", false]], "copy() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.copy", false]], "copy() (cil.framework.imagegeometry method)": [[5, "cil.framework.ImageGeometry.copy", false]], "copy() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.copy", false]], "create_cone2d() (cil.framework.acquisitiongeometry static method)": [[5, "cil.framework.AcquisitionGeometry.create_Cone2D", false]], "create_cone3d() (cil.framework.acquisitiongeometry static method)": [[5, "cil.framework.AcquisitionGeometry.create_Cone3D", false]], "create_parallel2d() (cil.framework.acquisitiongeometry static method)": [[5, "cil.framework.AcquisitionGeometry.create_Parallel2D", false]], "create_parallel3d() (cil.framework.acquisitiongeometry static method)": [[5, "cil.framework.AcquisitionGeometry.create_Parallel3D", false]], "data_passes (cil.optimisation.functions.approximategradientsumfunction property)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.data_passes", false]], "data_passes (cil.optimisation.functions.lsvrgfunction property)": [[9, "cil.optimisation.functions.LSVRGFunction.data_passes", false]], "data_passes (cil.optimisation.functions.sagafunction property)": [[9, "cil.optimisation.functions.SAGAFunction.data_passes", false]], "data_passes (cil.optimisation.functions.sagfunction property)": [[9, "cil.optimisation.functions.SAGFunction.data_passes", false]], "data_passes (cil.optimisation.functions.sgfunction property)": [[9, "cil.optimisation.functions.SGFunction.data_passes", false]], "data_passes (cil.optimisation.functions.svrgfunction property)": [[9, "cil.optimisation.functions.SVRGFunction.data_passes", false]], "data_passes_indices (cil.optimisation.functions.approximategradientsumfunction property)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.data_passes_indices", false]], "data_passes_indices (cil.optimisation.functions.lsvrgfunction property)": [[9, "cil.optimisation.functions.LSVRGFunction.data_passes_indices", false]], "data_passes_indices (cil.optimisation.functions.sagafunction property)": [[9, "cil.optimisation.functions.SAGAFunction.data_passes_indices", false]], "data_passes_indices (cil.optimisation.functions.sagfunction property)": [[9, "cil.optimisation.functions.SAGFunction.data_passes_indices", false]], "data_passes_indices (cil.optimisation.functions.sgfunction property)": [[9, "cil.optimisation.functions.SGFunction.data_passes_indices", false]], "data_passes_indices (cil.optimisation.functions.svrgfunction property)": [[9, "cil.optimisation.functions.SVRGFunction.data_passes_indices", false]], "datacontainer (class in cil.framework)": [[5, "cil.framework.DataContainer", false]], "dataprocessor (class in cil.framework)": [[5, "cil.framework.DataProcessor", false]], "degree (cil.framework.labels.angleunit attribute)": [[5, "cil.framework.labels.AngleUnit.DEGREE", false]], "diagonaloperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.DiagonalOperator", false]], "dim2 (cil.framework.labels.acquisitiontype attribute)": [[5, "cil.framework.labels.AcquisitionType.DIM2", false]], "dim3 (cil.framework.labels.acquisitiontype attribute)": [[5, "cil.framework.labels.AcquisitionType.DIM3", false]], "dimension (cil.framework.labels.acquisitiontype property)": [[5, "cil.framework.labels.AcquisitionType.dimension", false]], "direct() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.direct", false]], "direct() (cil.optimisation.operators.channelwiseoperator method)": [[9, "cil.optimisation.operators.ChannelwiseOperator.direct", false]], "direct() (cil.optimisation.operators.compositionoperator method)": [[9, "cil.optimisation.operators.CompositionOperator.direct", false]], "direct() (cil.optimisation.operators.diagonaloperator method)": [[9, "cil.optimisation.operators.DiagonalOperator.direct", false]], "direct() (cil.optimisation.operators.finitedifferenceoperator method)": [[9, "cil.optimisation.operators.FiniteDifferenceOperator.direct", false]], "direct() (cil.optimisation.operators.gradientoperator method)": [[9, "cil.optimisation.operators.GradientOperator.direct", false]], "direct() (cil.optimisation.operators.identityoperator method)": [[9, "cil.optimisation.operators.IdentityOperator.direct", false]], "direct() (cil.optimisation.operators.matrixoperator method)": [[9, "cil.optimisation.operators.MatrixOperator.direct", false]], "direct() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.direct", false]], "direct() (cil.optimisation.operators.projectionmap method)": [[9, "cil.optimisation.operators.ProjectionMap.direct", false]], "direct() (cil.optimisation.operators.scaledoperator method)": [[9, "cil.optimisation.operators.ScaledOperator.direct", false]], "direct() (cil.optimisation.operators.sparsefinitedifferenceoperator method)": [[9, "cil.optimisation.operators.SparseFiniteDifferenceOperator.direct", false]], "direct() (cil.optimisation.operators.sumoperator method)": [[9, "cil.optimisation.operators.SumOperator.direct", false]], "direct() (cil.optimisation.operators.symmetrisedgradientoperator method)": [[9, "cil.optimisation.operators.SymmetrisedGradientOperator.direct", false]], "direct() (cil.optimisation.operators.waveletoperator method)": [[9, "cil.optimisation.operators.WaveletOperator.direct", false]], "direct() (cil.optimisation.operators.zerooperator method)": [[9, "cil.optimisation.operators.ZeroOperator.direct", false]], "divide() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.divide", false], [9, "cil.framework.BlockDataContainer.divide", false]], "domain_geometry() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.domain_geometry", false]], "domain_geometry() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.domain_geometry", false]], "dot() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.dot", false]], "dot() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.dot", false]], "dot() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.dot", false]], "dot() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.dot", false]], "dot_test() (cil.optimisation.operators.linearoperator static method)": [[9, "cil.optimisation.operators.LinearOperator.dot_test", false]], "dtype (cil.framework.acquisitiondata property)": [[5, "cil.framework.AcquisitionData.dtype", false]], "dtype (cil.framework.datacontainer property)": [[5, "cil.framework.DataContainer.dtype", false]], "dtype (cil.framework.imagedata property)": [[5, "cil.framework.ImageData.dtype", false]], "dtype (cil.framework.vectordata property)": [[5, "cil.framework.VectorData.dtype", false]], "edge() (cil.processors.padder static method)": [[11, "cil.processors.Padder.edge", false]], "estimate_normalised_error() (cil.processors.normaliser static method)": [[11, "cil.processors.Normaliser.estimate_normalised_error", false]], "exp() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.exp", false]], "exp() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.exp", false]], "exp() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.exp", false]], "exp() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.exp", false]], "fbp (class in cil.plugins.astra)": [[10, "cil.plugins.astra.FBP", false]], "fbp (class in cil.plugins.tigre)": [[10, "cil.plugins.tigre.FBP", false]], "fbp (class in cil.recon)": [[12, "cil.recon.FBP", false]], "fdk (class in cil.recon)": [[12, "cil.recon.FDK", false]], "fgp_dtv (class in cil.plugins.ccpi_regularisation.functions)": [[10, "cil.plugins.ccpi_regularisation.functions.FGP_dTV", false]], "fgp_tv (class in cil.plugins.ccpi_regularisation.functions)": [[10, "cil.plugins.ccpi_regularisation.functions.FGP_TV", false]], "figure (cil.utilities.display.show1d attribute)": [[13, "cil.utilities.display.show1D.figure", false]], "fill() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.fill", false]], "fill() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.fill", false]], "fill() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.fill", false]], "fill() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.fill", false]], "filltype (class in cil.framework.labels)": [[5, "cil.framework.labels.FillType", false]], "finitedifferenceoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.FiniteDifferenceOperator", false]], "fista (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.FISTA", false]], "flag() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.flag", false]], "from_function() (cil.optimisation.utilities.sampler static method)": [[9, "cil.optimisation.utilities.Sampler.from_function", false], [9, "id51", false]], "full_gradient() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.full_gradient", false]], "full_gradient() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.full_gradient", false]], "full_gradient() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.full_gradient", false]], "full_gradient() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.full_gradient", false]], "full_gradient() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.full_gradient", false]], "full_gradient() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.full_gradient", false]], "function (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.Function", false]], "gd (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.GD", false]], "geometry (cil.framework.labels.acquisitiontype property)": [[5, "cil.framework.labels.AcquisitionType.geometry", false]], "get() (cil.utilities.dataexample.simulated_cone_beam_data class method)": [[13, "cil.utilities.dataexample.SIMULATED_CONE_BEAM_DATA.get", false], [13, "id1", false]], "get() (cil.utilities.dataexample.simulated_parallel_beam_data class method)": [[13, "cil.utilities.dataexample.SIMULATED_PARALLEL_BEAM_DATA.get", false]], "get() (cil.utilities.dataexample.synchrotron_parallel_beam_data class method)": [[13, "cil.utilities.dataexample.SYNCHROTRON_PARALLEL_BEAM_DATA.get", false]], "get_as_list() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.get_as_list", false]], "get_data_axes_order() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.get_data_axes_order", false]], "get_data_axes_order() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.get_data_axes_order", false]], "get_data_axes_order() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.get_data_axes_order", false]], "get_data_axes_order() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.get_data_axes_order", false]], "get_data_offset() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.get_data_offset", false]], "get_data_scale() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.get_data_scale", false]], "get_dataset_metadata() (cil.io.utilities.hdf5_utilities static method)": [[8, "cil.io.utilities.HDF5_utilities.get_dataset_metadata", false]], "get_dimension_axis() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.get_dimension_axis", false]], "get_dimension_axis() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.get_dimension_axis", false]], "get_dimension_axis() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.get_dimension_axis", false]], "get_dimension_axis() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.get_dimension_axis", false]], "get_filter_array() (cil.recon.fbp method)": [[12, "cil.recon.FBP.get_filter_array", false]], "get_filter_array() (cil.recon.fdk method)": [[12, "cil.recon.FDK.get_filter_array", false]], "get_geometry() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.get_geometry", false]], "get_geometry() (cil.io.nikondatareader method)": [[8, "cil.io.NikonDataReader.get_geometry", false]], "get_geometry() (cil.io.zeissdatareader method)": [[8, "cil.io.ZEISSDataReader.get_geometry", false]], "get_imagedata() (in module cil.plugins.tomophantom)": [[10, "cil.plugins.TomoPhantom.get_ImageData", false]], "get_imagegeometry() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.get_ImageGeometry", false]], "get_input() (cil.framework.dataprocessor method)": [[5, "cil.framework.DataProcessor.get_input", false]], "get_input() (cil.framework.processor method)": [[5, "cil.framework.Processor.get_input", false]], "get_item() (cil.framework.blockgeometry method)": [[5, "cil.framework.BlockGeometry.get_item", false]], "get_item() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.get_item", false]], "get_last_loss() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.get_last_loss", false]], "get_last_loss() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.get_last_loss", false]], "get_last_objective() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.get_last_objective", false]], "get_last_objective() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.get_last_objective", false]], "get_metadata() (cil.io.zeissdatareader method)": [[8, "cil.io.ZEISSDataReader.get_metadata", false]], "get_norms_as_list() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.get_norms_as_list", false]], "get_output() (cil.framework.dataprocessor method)": [[5, "cil.framework.DataProcessor.get_output", false]], "get_output() (cil.framework.processor method)": [[5, "cil.framework.Processor.get_output", false]], "get_output() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.get_output", false]], "get_output() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.get_output", false]], "get_output() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.get_output", false]], "get_output() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.get_output", false]], "get_output() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.get_output", false]], "get_output() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.get_output", false]], "get_output() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.get_output", false]], "get_output() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.get_output", false]], "get_output() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.get_output", false]], "get_output() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.get_output", false]], "get_output() (cil.plugins.astra.fbp method)": [[10, "cil.plugins.astra.FBP.get_output", false]], "get_output() (cil.plugins.tigre.fbp method)": [[10, "cil.plugins.tigre.FBP.get_output", false]], "get_output() (cil.processors.absorptiontransmissionconverter method)": [[11, "cil.processors.AbsorptionTransmissionConverter.get_output", false]], "get_output() (cil.processors.binner method)": [[11, "cil.processors.Binner.get_output", false]], "get_output() (cil.processors.centreofrotationcorrector method)": [[11, "cil.processors.CentreOfRotationCorrector.get_output", false]], "get_output() (cil.processors.masker method)": [[11, "cil.processors.Masker.get_output", false]], "get_output() (cil.processors.maskgenerator method)": [[11, "cil.processors.MaskGenerator.get_output", false]], "get_output() (cil.processors.normaliser method)": [[11, "cil.processors.Normaliser.get_output", false]], "get_output() (cil.processors.padder method)": [[11, "cil.processors.Padder.get_output", false]], "get_output() (cil.processors.paganinprocessor method)": [[11, "cil.processors.PaganinProcessor.get_output", false]], "get_output() (cil.processors.ringremover method)": [[11, "cil.processors.RingRemover.get_output", false]], "get_output() (cil.processors.slicer method)": [[11, "cil.processors.Slicer.get_output", false]], "get_output() (cil.processors.transmissionabsorptionconverter method)": [[11, "cil.processors.TransmissionAbsorptionConverter.get_output", false]], "get_output_shape() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.get_output_shape", false]], "get_roi() (cil.io.nikondatareader method)": [[8, "cil.io.NikonDataReader.get_roi", false]], "get_samples() (cil.optimisation.utilities.sampler method)": [[9, "cil.optimisation.utilities.Sampler.get_samples", false]], "get_samples() (cil.optimisation.utilities.samplerrandom method)": [[9, "cil.optimisation.utilities.SamplerRandom.get_samples", false]], "get_slice() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.get_slice", false]], "get_slice() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.get_slice", false]], "get_slice() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.get_slice", false]], "get_slice() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.get_slice", false]], "get_slice() (cil.framework.imagegeometry method)": [[5, "cil.framework.ImageGeometry.get_slice", false]], "get_slice() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.get_slice", false]], "get_step_size() (cil.optimisation.utilities.stepsizemethods.armijostepsizerule method)": [[9, "cil.optimisation.utilities.StepSizeMethods.ArmijoStepSizeRule.get_step_size", false]], "get_step_size() (cil.optimisation.utilities.stepsizemethods.barzilaiborweinstepsizerule method)": [[9, "cil.optimisation.utilities.StepSizeMethods.BarzilaiBorweinStepSizeRule.get_step_size", false]], "get_step_size() (cil.optimisation.utilities.stepsizemethods.constantstepsize method)": [[9, "cil.optimisation.utilities.StepSizeMethods.ConstantStepSize.get_step_size", false]], "get_step_size() (cil.optimisation.utilities.stepsizemethods.stepsizerule method)": [[9, "cil.optimisation.utilities.StepSizeMethods.StepSizeRule.get_step_size", false]], "gradient() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.gradient", false]], "gradient() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.gradient", false]], "gradient() (cil.optimisation.functions.constantfunction method)": [[9, "cil.optimisation.functions.ConstantFunction.gradient", false]], "gradient() (cil.optimisation.functions.function method)": [[9, "cil.optimisation.functions.Function.gradient", false]], "gradient() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.gradient", false]], "gradient() (cil.optimisation.functions.kullbackleibler method)": [[9, "cil.optimisation.functions.KullbackLeibler.gradient", false]], "gradient() (cil.optimisation.functions.l1norm method)": [[9, "cil.optimisation.functions.L1Norm.gradient", false]], "gradient() (cil.optimisation.functions.l1sparsity method)": [[9, "cil.optimisation.functions.L1Sparsity.gradient", false]], "gradient() (cil.optimisation.functions.l2normsquared method)": [[9, "cil.optimisation.functions.L2NormSquared.gradient", false]], "gradient() (cil.optimisation.functions.leastsquares method)": [[9, "cil.optimisation.functions.LeastSquares.gradient", false]], "gradient() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.gradient", false]], "gradient() (cil.optimisation.functions.mixedl11norm method)": [[9, "cil.optimisation.functions.MixedL11Norm.gradient", false]], "gradient() (cil.optimisation.functions.mixedl21norm method)": [[9, "cil.optimisation.functions.MixedL21Norm.gradient", false]], "gradient() (cil.optimisation.functions.operatorcompositionfunction method)": [[9, "cil.optimisation.functions.OperatorCompositionFunction.gradient", false]], "gradient() (cil.optimisation.functions.rosenbrock method)": [[9, "cil.optimisation.functions.Rosenbrock.gradient", false]], "gradient() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.gradient", false]], "gradient() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.gradient", false]], "gradient() (cil.optimisation.functions.scaledfunction method)": [[9, "cil.optimisation.functions.ScaledFunction.gradient", false]], "gradient() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.gradient", false]], "gradient() (cil.optimisation.functions.smoothmixedl21norm method)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm.gradient", false]], "gradient() (cil.optimisation.functions.sumfunction method)": [[9, "cil.optimisation.functions.SumFunction.gradient", false]], "gradient() (cil.optimisation.functions.sumscalarfunction method)": [[9, "cil.optimisation.functions.SumScalarFunction.gradient", false]], "gradient() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.gradient", false]], "gradient() (cil.optimisation.functions.totalvariation method)": [[9, "cil.optimisation.functions.TotalVariation.gradient", false]], "gradient() (cil.optimisation.functions.translatefunction method)": [[9, "cil.optimisation.functions.TranslateFunction.gradient", false]], "gradient() (cil.optimisation.functions.weightedl2normsquared method)": [[9, "cil.optimisation.functions.WeightedL2NormSquared.gradient", false]], "gradient() (cil.optimisation.functions.zerofunction method)": [[9, "cil.optimisation.functions.ZeroFunction.gradient", false]], "gradient_operator (cil.optimisation.functions.totalvariation property)": [[9, "cil.optimisation.functions.TotalVariation.gradient_operator", false]], "gradientoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.GradientOperator", false]], "hdf5_utilities (class in cil.io.utilities)": [[8, "cil.io.utilities.HDF5_utilities", false]], "herman_meyer() (cil.optimisation.utilities.sampler static method)": [[9, "cil.optimisation.utilities.Sampler.herman_meyer", false], [9, "id52", false]], "horizontal (cil.framework.labels.acquisitiondimension attribute)": [[5, "cil.framework.labels.AcquisitionDimension.HORIZONTAL", false]], "horizontal_x (cil.framework.labels.imagedimension attribute)": [[5, "cil.framework.labels.ImageDimension.HORIZONTAL_X", false]], "horizontal_y (cil.framework.labels.imagedimension attribute)": [[5, "cil.framework.labels.ImageDimension.HORIZONTAL_Y", false]], "identityoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.IdentityOperator", false]], "image_sharpness() (cil.processors.centreofrotationcorrector static method)": [[11, "cil.processors.CentreOfRotationCorrector.image_sharpness", false]], "imagedata (class in cil.framework)": [[5, "cil.framework.ImageData", false]], "imagedimension (class in cil.framework.labels)": [[5, "cil.framework.labels.ImageDimension", false]], "imagegeometry (class in cil.framework)": [[5, "cil.framework.ImageGeometry", false]], "indicatorbox (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.IndicatorBox", false]], "interpolate() (cil.processors.masker static method)": [[11, "cil.processors.Masker.interpolate", false]], "is_compatible() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.is_compatible", false], [9, "cil.framework.BlockDataContainer.is_compatible", false]], "is_linear() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.compositionoperator method)": [[9, "cil.optimisation.operators.CompositionOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.linearoperator method)": [[9, "cil.optimisation.operators.LinearOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.is_linear", false]], "is_linear() (cil.optimisation.operators.scaledoperator method)": [[9, "cil.optimisation.operators.ScaledOperator.is_linear", false]], "is_linear() (cil.optimisation.operators.sumoperator method)": [[9, "cil.optimisation.operators.SumOperator.is_linear", false]], "is_orthogonal() (cil.optimisation.operators.identityoperator method)": [[9, "cil.optimisation.operators.IdentityOperator.is_orthogonal", false]], "is_orthogonal() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.is_orthogonal", false]], "is_orthogonal() (cil.optimisation.operators.waveletoperator method)": [[9, "cil.optimisation.operators.WaveletOperator.is_orthogonal", false]], "is_provably_convergent() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.is_provably_convergent", false]], "is_provably_convergent() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.is_provably_convergent", false]], "islicer (class in cil.utilities.jupyter)": [[13, "cil.utilities.jupyter.islicer", false]], "ista (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.ISTA", false]], "iterations (cil.optimisation.algorithms.algorithm property)": [[9, "cil.optimisation.algorithms.Algorithm.iterations", false]], "iterations (cil.optimisation.algorithms.cgls property)": [[9, "cil.optimisation.algorithms.CGLS.iterations", false]], "iterations (cil.optimisation.algorithms.fista property)": [[9, "cil.optimisation.algorithms.FISTA.iterations", false]], "iterations (cil.optimisation.algorithms.gd property)": [[9, "cil.optimisation.algorithms.GD.iterations", false]], "iterations (cil.optimisation.algorithms.ista property)": [[9, "cil.optimisation.algorithms.ISTA.iterations", false]], "iterations (cil.optimisation.algorithms.ladmm property)": [[9, "cil.optimisation.algorithms.LADMM.iterations", false]], "iterations (cil.optimisation.algorithms.pd3o property)": [[9, "cil.optimisation.algorithms.PD3O.iterations", false]], "iterations (cil.optimisation.algorithms.pdhg property)": [[9, "cil.optimisation.algorithms.PDHG.iterations", false]], "iterations (cil.optimisation.algorithms.sirt property)": [[9, "cil.optimisation.algorithms.SIRT.iterations", false]], "iterations (cil.optimisation.algorithms.spdhg property)": [[9, "cil.optimisation.algorithms.SPDHG.iterations", false]], "kullbackleibler (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.KullbackLeibler", false]], "l (cil.optimisation.functions.approximategradientsumfunction property)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.L", false]], "l (cil.optimisation.functions.blockfunction property)": [[9, "cil.optimisation.functions.BlockFunction.L", false]], "l (cil.optimisation.functions.constantfunction property)": [[9, "cil.optimisation.functions.ConstantFunction.L", false]], "l (cil.optimisation.functions.function property)": [[9, "cil.optimisation.functions.Function.L", false]], "l (cil.optimisation.functions.indicatorbox property)": [[9, "cil.optimisation.functions.IndicatorBox.L", false]], "l (cil.optimisation.functions.kullbackleibler property)": [[9, "cil.optimisation.functions.KullbackLeibler.L", false]], "l (cil.optimisation.functions.l1norm property)": [[9, "cil.optimisation.functions.L1Norm.L", false]], "l (cil.optimisation.functions.l1sparsity property)": [[9, "cil.optimisation.functions.L1Sparsity.L", false]], "l (cil.optimisation.functions.l2normsquared property)": [[9, "cil.optimisation.functions.L2NormSquared.L", false]], "l (cil.optimisation.functions.leastsquares property)": [[9, "cil.optimisation.functions.LeastSquares.L", false]], "l (cil.optimisation.functions.lsvrgfunction property)": [[9, "cil.optimisation.functions.LSVRGFunction.L", false]], "l (cil.optimisation.functions.mixedl11norm property)": [[9, "cil.optimisation.functions.MixedL11Norm.L", false]], "l (cil.optimisation.functions.mixedl21norm property)": [[9, "cil.optimisation.functions.MixedL21Norm.L", false]], "l (cil.optimisation.functions.operatorcompositionfunction property)": [[9, "cil.optimisation.functions.OperatorCompositionFunction.L", false]], "l (cil.optimisation.functions.rosenbrock property)": [[9, "cil.optimisation.functions.Rosenbrock.L", false]], "l (cil.optimisation.functions.sagafunction property)": [[9, "cil.optimisation.functions.SAGAFunction.L", false]], "l (cil.optimisation.functions.sagfunction property)": [[9, "cil.optimisation.functions.SAGFunction.L", false]], "l (cil.optimisation.functions.scaledfunction property)": [[9, "cil.optimisation.functions.ScaledFunction.L", false]], "l (cil.optimisation.functions.sgfunction property)": [[9, "cil.optimisation.functions.SGFunction.L", false]], "l (cil.optimisation.functions.smoothmixedl21norm property)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm.L", false]], "l (cil.optimisation.functions.sumfunction property)": [[9, "cil.optimisation.functions.SumFunction.L", false]], "l (cil.optimisation.functions.sumscalarfunction property)": [[9, "cil.optimisation.functions.SumScalarFunction.L", false]], "l (cil.optimisation.functions.svrgfunction property)": [[9, "cil.optimisation.functions.SVRGFunction.L", false]], "l (cil.optimisation.functions.totalvariation property)": [[9, "cil.optimisation.functions.TotalVariation.L", false]], "l (cil.optimisation.functions.translatefunction property)": [[9, "cil.optimisation.functions.TranslateFunction.L", false]], "l (cil.optimisation.functions.weightedl2normsquared property)": [[9, "cil.optimisation.functions.WeightedL2NormSquared.L", false]], "l (cil.optimisation.functions.zerofunction property)": [[9, "cil.optimisation.functions.ZeroFunction.L", false]], "l1norm (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.L1Norm", false]], "l1sparsity (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.L1Sparsity", false]], "l2normsquared (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.L2NormSquared", false]], "ladmm (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.LADMM", false]], "leastsquares (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.LeastSquares", false]], "linear_ramp() (cil.processors.padder static method)": [[11, "cil.processors.Padder.linear_ramp", false]], "linearoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.LinearOperator", false]], "link_islicer (class in cil.utilities.jupyter)": [[13, "cil.utilities.jupyter.link_islicer", false]], "lmax (cil.optimisation.functions.approximategradientsumfunction property)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.Lmax", false]], "lmax (cil.optimisation.functions.lsvrgfunction property)": [[9, "cil.optimisation.functions.LSVRGFunction.Lmax", false]], "lmax (cil.optimisation.functions.sagafunction property)": [[9, "cil.optimisation.functions.SAGAFunction.Lmax", false]], "lmax (cil.optimisation.functions.sagfunction property)": [[9, "cil.optimisation.functions.SAGFunction.Lmax", false]], "lmax (cil.optimisation.functions.sgfunction property)": [[9, "cil.optimisation.functions.SGFunction.Lmax", false]], "lmax (cil.optimisation.functions.sumfunction property)": [[9, "cil.optimisation.functions.SumFunction.Lmax", false]], "lmax (cil.optimisation.functions.sumscalarfunction property)": [[9, "cil.optimisation.functions.SumScalarFunction.Lmax", false]], "lmax (cil.optimisation.functions.svrgfunction property)": [[9, "cil.optimisation.functions.SVRGFunction.Lmax", false]], "load() (cil.utilities.dataexample.testdata method)": [[13, "cil.utilities.dataexample.TestData.load", false]], "load_data() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.load_data", false]], "load_projections() (cil.io.nikondatareader method)": [[8, "cil.io.NikonDataReader.load_projections", false]], "log() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.log", false]], "log() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.log", false]], "log() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.log", false]], "log() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.log", false]], "logfilecallback (class in cil.optimisation.utilities.callbacks)": [[9, "cil.optimisation.utilities.callbacks.LogfileCallback", false]], "loss (cil.optimisation.algorithms.algorithm property)": [[9, "cil.optimisation.algorithms.Algorithm.loss", false]], "loss (cil.optimisation.algorithms.cgls property)": [[9, "cil.optimisation.algorithms.CGLS.loss", false]], "loss (cil.optimisation.algorithms.fista property)": [[9, "cil.optimisation.algorithms.FISTA.loss", false]], "loss (cil.optimisation.algorithms.gd property)": [[9, "cil.optimisation.algorithms.GD.loss", false]], "loss (cil.optimisation.algorithms.ista property)": [[9, "cil.optimisation.algorithms.ISTA.loss", false]], "loss (cil.optimisation.algorithms.ladmm property)": [[9, "cil.optimisation.algorithms.LADMM.loss", false]], "loss (cil.optimisation.algorithms.pd3o property)": [[9, "cil.optimisation.algorithms.PD3O.loss", false]], "loss (cil.optimisation.algorithms.pdhg property)": [[9, "cil.optimisation.algorithms.PDHG.loss", false]], "loss (cil.optimisation.algorithms.sirt property)": [[9, "cil.optimisation.algorithms.SIRT.loss", false]], "loss (cil.optimisation.algorithms.spdhg property)": [[9, "cil.optimisation.algorithms.SPDHG.loss", false]], "lsvrgfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.LSVRGFunction", false]], "mae() (in module cil.utilities.quality_measures)": [[13, "cil.utilities.quality_measures.mae", false]], "masker (class in cil.processors)": [[11, "cil.processors.Masker", false]], "maskgenerator (class in cil.processors)": [[11, "cil.processors.MaskGenerator", false]], "maskoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.MaskOperator", false]], "matrixoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.MatrixOperator", false]], "max() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.max", false]], "max() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.max", false]], "max() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.max", false]], "max() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.max", false]], "max_iteration (cil.optimisation.algorithms.algorithm property)": [[9, "cil.optimisation.algorithms.Algorithm.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.cgls property)": [[9, "cil.optimisation.algorithms.CGLS.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.fista property)": [[9, "cil.optimisation.algorithms.FISTA.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.gd property)": [[9, "cil.optimisation.algorithms.GD.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.ista property)": [[9, "cil.optimisation.algorithms.ISTA.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.ladmm property)": [[9, "cil.optimisation.algorithms.LADMM.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.pd3o property)": [[9, "cil.optimisation.algorithms.PD3O.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.pdhg property)": [[9, "cil.optimisation.algorithms.PDHG.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.sirt property)": [[9, "cil.optimisation.algorithms.SIRT.max_iteration", false]], "max_iteration (cil.optimisation.algorithms.spdhg property)": [[9, "cil.optimisation.algorithms.SPDHG.max_iteration", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.max_iteration_stop_criterion", false]], "max_iteration_stop_criterion() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.max_iteration_stop_criterion", false]], "maximum() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.maximum", false], [9, "cil.framework.BlockDataContainer.maximum", false]], "mean() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.mean", false]], "mean() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.mean", false]], "mean() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.mean", false]], "mean() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.mean", false]], "mean() (cil.processors.masker static method)": [[11, "cil.processors.Masker.mean", false]], "mean() (cil.processors.maskgenerator static method)": [[11, "cil.processors.MaskGenerator.mean", false]], "median() (cil.processors.masker static method)": [[11, "cil.processors.Masker.median", false]], "median() (cil.processors.maskgenerator static method)": [[11, "cil.processors.MaskGenerator.median", false]], "min() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.min", false]], "min() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.min", false]], "min() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.min", false]], "min() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.min", false]], "minimum() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.minimum", false], [9, "cil.framework.BlockDataContainer.minimum", false]], "mixedl11norm (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.MixedL11Norm", false]], "mixedl21norm (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.MixedL21Norm", false]], "module": [[13, "module-cil.utilities.quality_measures", false]], "mse() (in module cil.utilities.quality_measures)": [[13, "cil.utilities.quality_measures.mse", false]], "multiply() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.multiply", false], [9, "cil.framework.BlockDataContainer.multiply", false]], "ndim (cil.framework.acquisitiondata property)": [[5, "cil.framework.AcquisitionData.ndim", false]], "ndim (cil.framework.datacontainer property)": [[5, "cil.framework.DataContainer.ndim", false]], "ndim (cil.framework.imagedata property)": [[5, "cil.framework.ImageData.ndim", false]], "ndim (cil.framework.vectordata property)": [[5, "cil.framework.VectorData.ndim", false]], "next() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.next", false], [9, "cil.framework.BlockDataContainer.next", false]], "next() (cil.optimisation.utilities.sampler method)": [[9, "cil.optimisation.utilities.Sampler.next", false]], "nexusdatareader (class in cil.io)": [[8, "cil.io.NEXUSDataReader", false]], "nexusdatawriter (class in cil.io)": [[8, "cil.io.NEXUSDataWriter", false]], "nikondatareader (class in cil.io)": [[8, "cil.io.NikonDataReader", false]], "norm() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.norm", false]], "norm() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.norm", false]], "norm() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.norm", false]], "norm() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.norm", false]], "norm() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.norm", false]], "norm() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.norm", false]], "norm() (cil.optimisation.operators.scaledoperator method)": [[9, "cil.optimisation.operators.ScaledOperator.norm", false]], "normaliser (class in cil.processors)": [[11, "cil.processors.Normaliser", false]], "num_threads (cil.optimisation.functions.indicatorbox property)": [[9, "cil.optimisation.functions.IndicatorBox.num_threads", false]], "number_of_dimensions (cil.framework.acquisitiondata property)": [[5, "cil.framework.AcquisitionData.number_of_dimensions", false]], "number_of_dimensions (cil.framework.datacontainer property)": [[5, "cil.framework.DataContainer.number_of_dimensions", false]], "number_of_dimensions (cil.framework.imagedata property)": [[5, "cil.framework.ImageData.number_of_dimensions", false]], "number_of_dimensions (cil.framework.vectordata property)": [[5, "cil.framework.VectorData.number_of_dimensions", false]], "objective (cil.optimisation.algorithms.algorithm property)": [[9, "cil.optimisation.algorithms.Algorithm.objective", false]], "objective (cil.optimisation.algorithms.cgls property)": [[9, "cil.optimisation.algorithms.CGLS.objective", false]], "objective (cil.optimisation.algorithms.fista property)": [[9, "cil.optimisation.algorithms.FISTA.objective", false]], "objective (cil.optimisation.algorithms.gd property)": [[9, "cil.optimisation.algorithms.GD.objective", false]], "objective (cil.optimisation.algorithms.ista property)": [[9, "cil.optimisation.algorithms.ISTA.objective", false]], "objective (cil.optimisation.algorithms.ladmm property)": [[9, "cil.optimisation.algorithms.LADMM.objective", false]], "objective (cil.optimisation.algorithms.pd3o property)": [[9, "cil.optimisation.algorithms.PD3O.objective", false]], "objective (cil.optimisation.algorithms.pdhg property)": [[9, "cil.optimisation.algorithms.PDHG.objective", false]], "objective (cil.optimisation.algorithms.sirt property)": [[9, "cil.optimisation.algorithms.SIRT.objective", false]], "objective (cil.optimisation.algorithms.spdhg property)": [[9, "cil.optimisation.algorithms.SPDHG.objective", false]], "objective_to_dict() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.objective_to_dict", false]], "objective_to_dict() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.objective_to_dict", false]], "objective_to_string() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.objective_to_string", false]], "objective_to_string() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.objective_to_string", false]], "operator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.Operator", false]], "operatorcompositionfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.OperatorCompositionFunction", false]], "padder (class in cil.processors)": [[11, "cil.processors.Padder", false]], "paganinprocessor (class in cil.processors)": [[11, "cil.processors.PaganinProcessor", false]], "parallel (cil.framework.labels.acquisitiontype attribute)": [[5, "cil.framework.labels.AcquisitionType.PARALLEL", false]], "partition() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.partition", false]], "partition() (cil.framework.partitioner method)": [[5, "cil.framework.Partitioner.partition", false]], "partitioner (class in cil.framework)": [[5, "cil.framework.Partitioner", false]], "pd3o (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.PD3O", false]], "pdhg (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.PDHG", false]], "plot_filter() (cil.recon.fbp method)": [[12, "cil.recon.FBP.plot_filter", false]], "plot_filter() (cil.recon.fdk method)": [[12, "cil.recon.FDK.plot_filter", false]], "power() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.power", false], [9, "cil.framework.BlockDataContainer.power", false]], "powermethod() (cil.optimisation.operators.linearoperator static method)": [[9, "cil.optimisation.operators.LinearOperator.PowerMethod", false]], "preconditioner (class in cil.optimisation.utilities.preconditioner)": [[9, "cil.optimisation.utilities.preconditioner.Preconditioner", false]], "print_metadata() (cil.io.utilities.hdf5_utilities static method)": [[8, "cil.io.utilities.HDF5_utilities.print_metadata", false]], "process() (cil.processors.binner method)": [[11, "cil.processors.Binner.process", false]], "process() (cil.processors.slicer method)": [[11, "cil.processors.Slicer.process", false]], "processor (class in cil.framework)": [[5, "cil.framework.Processor", false]], "progresscallback (class in cil.optimisation.utilities.callbacks)": [[9, "cil.optimisation.utilities.callbacks.ProgressCallback", false]], "projectionmap (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.ProjectionMap", false]], "projectionoperator (class in cil.plugins.astra)": [[10, "cil.plugins.astra.ProjectionOperator", false]], "projectionoperator (class in cil.plugins.tigre)": [[10, "cil.plugins.tigre.ProjectionOperator", false]], "proximal() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.proximal", false]], "proximal() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.proximal", false]], "proximal() (cil.optimisation.functions.constantfunction method)": [[9, "cil.optimisation.functions.ConstantFunction.proximal", false]], "proximal() (cil.optimisation.functions.function method)": [[9, "cil.optimisation.functions.Function.proximal", false]], "proximal() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.proximal", false]], "proximal() (cil.optimisation.functions.kullbackleibler method)": [[9, "cil.optimisation.functions.KullbackLeibler.proximal", false]], "proximal() (cil.optimisation.functions.l1norm method)": [[9, "cil.optimisation.functions.L1Norm.proximal", false]], "proximal() (cil.optimisation.functions.l1sparsity method)": [[9, "cil.optimisation.functions.L1Sparsity.proximal", false]], "proximal() (cil.optimisation.functions.l2normsquared method)": [[9, "cil.optimisation.functions.L2NormSquared.proximal", false]], "proximal() (cil.optimisation.functions.leastsquares method)": [[9, "cil.optimisation.functions.LeastSquares.proximal", false]], "proximal() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.proximal", false]], "proximal() (cil.optimisation.functions.mixedl11norm method)": [[9, "cil.optimisation.functions.MixedL11Norm.proximal", false]], "proximal() (cil.optimisation.functions.mixedl21norm method)": [[9, "cil.optimisation.functions.MixedL21Norm.proximal", false]], "proximal() (cil.optimisation.functions.operatorcompositionfunction method)": [[9, "cil.optimisation.functions.OperatorCompositionFunction.proximal", false]], "proximal() (cil.optimisation.functions.rosenbrock method)": [[9, "cil.optimisation.functions.Rosenbrock.proximal", false]], "proximal() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.proximal", false]], "proximal() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.proximal", false]], "proximal() (cil.optimisation.functions.scaledfunction method)": [[9, "cil.optimisation.functions.ScaledFunction.proximal", false]], "proximal() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.proximal", false]], "proximal() (cil.optimisation.functions.smoothmixedl21norm method)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm.proximal", false]], "proximal() (cil.optimisation.functions.sumfunction method)": [[9, "cil.optimisation.functions.SumFunction.proximal", false]], "proximal() (cil.optimisation.functions.sumscalarfunction method)": [[9, "cil.optimisation.functions.SumScalarFunction.proximal", false]], "proximal() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.proximal", false]], "proximal() (cil.optimisation.functions.totalvariation method)": [[9, "cil.optimisation.functions.TotalVariation.proximal", false]], "proximal() (cil.optimisation.functions.translatefunction method)": [[9, "cil.optimisation.functions.TranslateFunction.proximal", false]], "proximal() (cil.optimisation.functions.weightedl2normsquared method)": [[9, "cil.optimisation.functions.WeightedL2NormSquared.proximal", false]], "proximal() (cil.optimisation.functions.zerofunction method)": [[9, "cil.optimisation.functions.ZeroFunction.proximal", false]], "proximal_conjugate() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.blockfunction method)": [[9, "cil.optimisation.functions.BlockFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.constantfunction method)": [[9, "cil.optimisation.functions.ConstantFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.function method)": [[9, "cil.optimisation.functions.Function.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.kullbackleibler method)": [[9, "cil.optimisation.functions.KullbackLeibler.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.l1norm method)": [[9, "cil.optimisation.functions.L1Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.l1sparsity method)": [[9, "cil.optimisation.functions.L1Sparsity.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.l2normsquared method)": [[9, "cil.optimisation.functions.L2NormSquared.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.leastsquares method)": [[9, "cil.optimisation.functions.LeastSquares.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.mixedl11norm method)": [[9, "cil.optimisation.functions.MixedL11Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.mixedl21norm method)": [[9, "cil.optimisation.functions.MixedL21Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.operatorcompositionfunction method)": [[9, "cil.optimisation.functions.OperatorCompositionFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.rosenbrock method)": [[9, "cil.optimisation.functions.Rosenbrock.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.scaledfunction method)": [[9, "cil.optimisation.functions.ScaledFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.smoothmixedl21norm method)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sumfunction method)": [[9, "cil.optimisation.functions.SumFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.sumscalarfunction method)": [[9, "cil.optimisation.functions.SumScalarFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.totalvariation method)": [[9, "cil.optimisation.functions.TotalVariation.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.translatefunction method)": [[9, "cil.optimisation.functions.TranslateFunction.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.weightedl2normsquared method)": [[9, "cil.optimisation.functions.WeightedL2NormSquared.proximal_conjugate", false]], "proximal_conjugate() (cil.optimisation.functions.zerofunction method)": [[9, "cil.optimisation.functions.ZeroFunction.proximal_conjugate", false]], "psnr() (in module cil.utilities.quality_measures)": [[13, "cil.utilities.quality_measures.psnr", false]], "quantile() (cil.processors.maskgenerator static method)": [[11, "cil.processors.MaskGenerator.quantile", false]], "radian (cil.framework.labels.angleunit attribute)": [[5, "cil.framework.labels.AngleUnit.RADIAN", false]], "random (cil.framework.labels.filltype attribute)": [[5, "cil.framework.labels.FillType.RANDOM", false]], "random_int (cil.framework.labels.filltype attribute)": [[5, "cil.framework.labels.FillType.RANDOM_INT", false]], "random_noise() (cil.utilities.dataexample.testdata static method)": [[13, "cil.utilities.dataexample.TestData.random_noise", false]], "random_with_replacement() (cil.optimisation.utilities.sampler static method)": [[9, "cil.optimisation.utilities.Sampler.random_with_replacement", false], [9, "id49", false]], "random_without_replacement() (cil.optimisation.utilities.sampler static method)": [[9, "cil.optimisation.utilities.Sampler.random_without_replacement", false], [9, "id50", false]], "range_geometry() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.range_geometry", false]], "range_geometry() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.range_geometry", false]], "rawfilewriter (class in cil.io)": [[8, "cil.io.RAWFileWriter", false]], "read() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.read", false]], "read() (cil.io.nikondatareader method)": [[8, "cil.io.NikonDataReader.read", false]], "read() (cil.io.tiffstackreader method)": [[8, "cil.io.TIFFStackReader.read", false]], "read() (cil.io.utilities.hdf5_utilities static method)": [[8, "cil.io.utilities.HDF5_utilities.read", false]], "read() (cil.io.zeissdatareader method)": [[8, "cil.io.ZEISSDataReader.read", false]], "read_as_acquisitiondata() (cil.io.tiffstackreader method)": [[8, "cil.io.TIFFStackReader.read_as_AcquisitionData", false]], "read_as_imagedata() (cil.io.tiffstackreader method)": [[8, "cil.io.TIFFStackReader.read_as_ImageData", false]], "read_as_original() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.read_as_original", false]], "read_rescaled() (cil.io.tiffstackreader method)": [[8, "cil.io.TIFFStackReader.read_rescaled", false]], "read_scale_offset() (cil.io.tiffstackreader method)": [[8, "cil.io.TIFFStackReader.read_scale_offset", false]], "read_to() (cil.io.utilities.hdf5_utilities static method)": [[8, "cil.io.utilities.HDF5_utilities.read_to", false]], "reflect() (cil.processors.padder static method)": [[11, "cil.processors.Padder.reflect", false]], "reorder() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.reorder", false]], "reorder() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.reorder", false]], "reorder() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.reorder", false]], "reorder() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.reorder", false]], "reset() (cil.recon.fbp method)": [[12, "cil.recon.FBP.reset", false]], "reset() (cil.recon.fdk method)": [[12, "cil.recon.FDK.reset", false]], "ringremover (class in cil.processors)": [[11, "cil.processors.RingRemover", false]], "rosenbrock (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.Rosenbrock", false]], "row_wise_compatible() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.row_wise_compatible", false]], "run() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.run", false]], "run() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.run", false]], "run() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.run", false]], "run() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.run", false]], "run() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.run", false]], "run() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.run", false]], "run() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.run", false]], "run() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.run", false]], "run() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.run", false]], "run() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.run", false]], "run() (cil.recon.fbp method)": [[12, "cil.recon.FBP.run", false]], "run() (cil.recon.fbp.fbp method)": [[4, "cil.recon.FBP.FBP.run", false]], "run() (cil.recon.fdk method)": [[12, "cil.recon.FDK.run", false]], "sagafunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SAGAFunction", false]], "sagfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SAGFunction", false]], "sampler (class in cil.optimisation.utilities)": [[9, "cil.optimisation.utilities.Sampler", false]], "samplerrandom (class in cil.optimisation.utilities)": [[9, "cil.optimisation.utilities.SamplerRandom", false]], "sapyb() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.sapyb", false]], "sapyb() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.sapyb", false], [9, "cil.framework.BlockDataContainer.sapyb", false]], "sapyb() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.sapyb", false]], "sapyb() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.sapyb", false]], "sapyb() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.sapyb", false]], "save() (cil.utilities.display.show1d method)": [[13, "cil.utilities.display.show1D.save", false]], "save() (cil.utilities.display.show2d method)": [[13, "cil.utilities.display.show2D.save", false]], "save() (cil.utilities.display.show_geometry method)": [[13, "cil.utilities.display.show_geometry.save", false]], "scaledfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.ScaledFunction", false]], "scaledoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.ScaledOperator", false]], "scikit_random_noise() (cil.utilities.dataexample.testdata static method)": [[13, "cil.utilities.dataexample.TestData.scikit_random_noise", false]], "sensitivity (class in cil.optimisation.utilities.preconditioner)": [[9, "cil.optimisation.utilities.preconditioner.Sensitivity", false]], "sequential() (cil.optimisation.utilities.sampler static method)": [[9, "cil.optimisation.utilities.Sampler.sequential", false], [9, "id0", false]], "set_angles() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.set_angles", false]], "set_channels() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.set_channels", false]], "set_data_partition_weights() (cil.optimisation.functions.approximategradientsumfunction method)": [[9, "cil.optimisation.functions.ApproximateGradientSumFunction.set_data_partition_weights", false]], "set_data_partition_weights() (cil.optimisation.functions.lsvrgfunction method)": [[9, "cil.optimisation.functions.LSVRGFunction.set_data_partition_weights", false]], "set_data_partition_weights() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.set_data_partition_weights", false]], "set_data_partition_weights() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.set_data_partition_weights", false]], "set_data_partition_weights() (cil.optimisation.functions.sgfunction method)": [[9, "cil.optimisation.functions.SGFunction.set_data_partition_weights", false]], "set_data_partition_weights() (cil.optimisation.functions.svrgfunction method)": [[9, "cil.optimisation.functions.SVRGFunction.set_data_partition_weights", false]], "set_fft_order() (cil.recon.fbp method)": [[12, "cil.recon.FBP.set_fft_order", false]], "set_fft_order() (cil.recon.fdk method)": [[12, "cil.recon.FDK.set_fft_order", false]], "set_filter() (cil.recon.fbp method)": [[12, "cil.recon.FBP.set_filter", false]], "set_filter() (cil.recon.fdk method)": [[12, "cil.recon.FDK.set_filter", false]], "set_filter_inplace() (cil.recon.fbp method)": [[12, "cil.recon.FBP.set_filter_inplace", false]], "set_filter_inplace() (cil.recon.fdk method)": [[12, "cil.recon.FDK.set_filter_inplace", false]], "set_gamma_fconj() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.set_gamma_fconj", false]], "set_gamma_g() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.set_gamma_g", false]], "set_image_geometry() (cil.recon.fbp method)": [[12, "cil.recon.FBP.set_image_geometry", false]], "set_image_geometry() (cil.recon.fdk method)": [[12, "cil.recon.FDK.set_image_geometry", false]], "set_input() (cil.framework.dataprocessor method)": [[5, "cil.framework.DataProcessor.set_input", false]], "set_input() (cil.framework.processor method)": [[5, "cil.framework.Processor.set_input", false]], "set_input() (cil.plugins.astra.fbp method)": [[10, "cil.plugins.astra.FBP.set_input", false]], "set_input() (cil.plugins.tigre.fbp method)": [[10, "cil.plugins.tigre.FBP.set_input", false]], "set_input() (cil.processors.absorptiontransmissionconverter method)": [[11, "cil.processors.AbsorptionTransmissionConverter.set_input", false]], "set_input() (cil.processors.binner method)": [[11, "cil.processors.Binner.set_input", false]], "set_input() (cil.processors.centreofrotationcorrector method)": [[11, "cil.processors.CentreOfRotationCorrector.set_input", false]], "set_input() (cil.processors.masker method)": [[11, "cil.processors.Masker.set_input", false]], "set_input() (cil.processors.maskgenerator method)": [[11, "cil.processors.MaskGenerator.set_input", false]], "set_input() (cil.processors.normaliser method)": [[11, "cil.processors.Normaliser.set_input", false]], "set_input() (cil.processors.padder method)": [[11, "cil.processors.Padder.set_input", false]], "set_input() (cil.processors.paganinprocessor method)": [[11, "cil.processors.PaganinProcessor.set_input", false]], "set_input() (cil.processors.ringremover method)": [[11, "cil.processors.RingRemover.set_input", false]], "set_input() (cil.processors.slicer method)": [[11, "cil.processors.Slicer.set_input", false]], "set_input() (cil.processors.transmissionabsorptionconverter method)": [[11, "cil.processors.TransmissionAbsorptionConverter.set_input", false]], "set_input() (cil.recon.fbp method)": [[12, "cil.recon.FBP.set_input", false]], "set_input() (cil.recon.fdk method)": [[12, "cil.recon.FDK.set_input", false]], "set_labels() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.set_labels", false]], "set_norm() (cil.optimisation.operators.operator method)": [[9, "cil.optimisation.operators.Operator.set_norm", false]], "set_norms() (cil.optimisation.operators.blockoperator method)": [[9, "cil.optimisation.operators.BlockOperator.set_norms", false]], "set_num_threads() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.set_num_threads", false]], "set_panel() (cil.framework.acquisitiongeometry method)": [[5, "cil.framework.AcquisitionGeometry.set_panel", false]], "set_relaxation_parameter() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.set_relaxation_parameter", false]], "set_split_processing() (cil.recon.fbp method)": [[12, "cil.recon.FBP.set_split_processing", false]], "set_step_sizes() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.set_step_sizes", false]], "set_suppress_evaluation() (cil.optimisation.functions.indicatorbox method)": [[9, "cil.optimisation.functions.IndicatorBox.set_suppress_evaluation", false]], "set_up() (cil.io.nexusdatareader method)": [[8, "cil.io.NEXUSDataReader.set_up", false]], "set_up() (cil.io.nexusdatawriter method)": [[8, "cil.io.NEXUSDataWriter.set_up", false]], "set_up() (cil.io.zeissdatareader method)": [[8, "cil.io.ZEISSDataReader.set_up", false]], "set_up() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.set_up", false]], "set_up() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.set_up", false]], "set_up() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.set_up", false]], "set_up() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.set_up", false]], "set_up() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.set_up", false]], "set_up() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.set_up", false]], "set_up() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.set_up", false]], "set_up() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.set_up", false]], "set_up() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.set_up", false]], "set_up() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.set_up", false]], "sgfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SGFunction", false]], "shape (cil.framework.acquisitiondata property)": [[5, "cil.framework.AcquisitionData.shape", false]], "shape (cil.framework.datacontainer property)": [[5, "cil.framework.DataContainer.shape", false]], "shape (cil.framework.imagedata property)": [[5, "cil.framework.ImageData.shape", false]], "shape (cil.framework.vectordata property)": [[5, "cil.framework.VectorData.shape", false]], "should_stop() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.should_stop", false]], "should_stop() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.should_stop", false]], "should_stop() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.should_stop", false]], "should_stop() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.should_stop", false]], "should_stop() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.should_stop", false]], "should_stop() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.should_stop", false]], "should_stop() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.should_stop", false]], "should_stop() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.should_stop", false]], "should_stop() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.should_stop", false]], "should_stop() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.should_stop", false]], "show1d (class in cil.utilities.display)": [[13, "cil.utilities.display.show1D", false]], "show2d (class in cil.utilities.display)": [[13, "cil.utilities.display.show2D", false]], "show_geometry (class in cil.utilities.display)": [[13, "cil.utilities.display.show_geometry", false]], "simulated_cone_beam_data (class in cil.utilities.dataexample)": [[13, "cil.utilities.dataexample.SIMULATED_CONE_BEAM_DATA", false], [13, "id0", false]], "simulated_parallel_beam_data (class in cil.utilities.dataexample)": [[13, "cil.utilities.dataexample.SIMULATED_PARALLEL_BEAM_DATA", false]], "sirt (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.SIRT", false]], "size (cil.framework.acquisitiondata property)": [[5, "cil.framework.AcquisitionData.size", false]], "size (cil.framework.datacontainer property)": [[5, "cil.framework.DataContainer.size", false]], "size (cil.framework.imagedata property)": [[5, "cil.framework.ImageData.size", false]], "size (cil.framework.vectordata property)": [[5, "cil.framework.VectorData.size", false]], "slice_metadata() (cil.io.zeissdatareader method)": [[8, "cil.io.ZEISSDataReader.slice_metadata", false]], "slicer (class in cil.processors)": [[11, "cil.processors.Slicer", false]], "smoothmixedl21norm (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SmoothMixedL21Norm", false]], "solution (cil.optimisation.algorithms.algorithm property)": [[9, "cil.optimisation.algorithms.Algorithm.solution", false]], "solution (cil.optimisation.algorithms.cgls property)": [[9, "cil.optimisation.algorithms.CGLS.solution", false]], "solution (cil.optimisation.algorithms.fista property)": [[9, "cil.optimisation.algorithms.FISTA.solution", false]], "solution (cil.optimisation.algorithms.gd property)": [[9, "cil.optimisation.algorithms.GD.solution", false]], "solution (cil.optimisation.algorithms.ista property)": [[9, "cil.optimisation.algorithms.ISTA.solution", false]], "solution (cil.optimisation.algorithms.ladmm property)": [[9, "cil.optimisation.algorithms.LADMM.solution", false]], "solution (cil.optimisation.algorithms.pd3o property)": [[9, "cil.optimisation.algorithms.PD3O.solution", false]], "solution (cil.optimisation.algorithms.pdhg property)": [[9, "cil.optimisation.algorithms.PDHG.solution", false]], "solution (cil.optimisation.algorithms.sirt property)": [[9, "cil.optimisation.algorithms.SIRT.solution", false]], "solution (cil.optimisation.algorithms.spdhg property)": [[9, "cil.optimisation.algorithms.SPDHG.solution", false]], "sparsefinitedifferenceoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.SparseFiniteDifferenceOperator", false]], "spdhg (class in cil.optimisation.algorithms)": [[9, "cil.optimisation.algorithms.SPDHG", false]], "special_values() (cil.processors.maskgenerator static method)": [[11, "cil.processors.MaskGenerator.special_values", false]], "squared_norm() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.squared_norm", false]], "squared_norm() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.squared_norm", false]], "squared_norm() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.squared_norm", false]], "squared_norm() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.squared_norm", false]], "staggered() (cil.optimisation.utilities.sampler static method)": [[9, "cil.optimisation.utilities.Sampler.staggered", false], [9, "id48", false]], "stepsizerule (class in cil.optimisation.utilities.stepsizemethods)": [[9, "cil.optimisation.utilities.StepSizeMethods.StepSizeRule", false]], "subtract() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.subtract", false], [9, "cil.framework.BlockDataContainer.subtract", false]], "sum() (cil.framework.acquisitiondata method)": [[5, "cil.framework.AcquisitionData.sum", false]], "sum() (cil.framework.datacontainer method)": [[5, "cil.framework.DataContainer.sum", false]], "sum() (cil.framework.imagedata method)": [[5, "cil.framework.ImageData.sum", false]], "sum() (cil.framework.vectordata method)": [[5, "cil.framework.VectorData.sum", false]], "sumfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SumFunction", false]], "sumoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.SumOperator", false]], "sumscalarfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SumScalarFunction", false]], "svrgfunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.SVRGFunction", false]], "symmetric() (cil.processors.padder static method)": [[11, "cil.processors.Padder.symmetric", false]], "symmetrisedgradientoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.SymmetrisedGradientOperator", false]], "synchrotron_parallel_beam_data (class in cil.utilities.dataexample)": [[13, "cil.utilities.dataexample.SYNCHROTRON_PARALLEL_BEAM_DATA", false]], "t (cil.optimisation.operators.blockoperator property)": [[9, "cil.optimisation.operators.BlockOperator.T", false]], "testdata (class in cil.utilities.dataexample)": [[13, "cil.utilities.dataexample.TestData", false]], "textprogresscallback (class in cil.optimisation.utilities.callbacks)": [[9, "cil.optimisation.utilities.callbacks.TextProgressCallback", false]], "tgv (class in cil.plugins.ccpi_regularisation.functions)": [[10, "cil.plugins.ccpi_regularisation.functions.TGV", false]], "threshold() (cil.processors.maskgenerator static method)": [[11, "cil.processors.MaskGenerator.threshold", false]], "tiffstackreader (class in cil.io)": [[8, "cil.io.TIFFStackReader", false]], "tiffwriter (class in cil.io)": [[8, "cil.io.TIFFWriter", false]], "tnv (class in cil.plugins.ccpi_regularisation.functions)": [[10, "cil.plugins.ccpi_regularisation.functions.TNV", false]], "totalvariation (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.TotalVariation", false]], "translatefunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.TranslateFunction", false]], "transmissionabsorptionconverter (class in cil.processors)": [[11, "cil.processors.TransmissionAbsorptionConverter", false]], "unary_operations() (cil.framework.blockdatacontainer method)": [[5, "cil.framework.BlockDataContainer.unary_operations", false], [9, "cil.framework.BlockDataContainer.unary_operations", false]], "update() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.update", false]], "update() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.update", false]], "update() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.update", false]], "update() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.update", false]], "update() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.update", false]], "update() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.update", false]], "update() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.update", false]], "update() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.update", false]], "update() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.update", false]], "update() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.update", false]], "update_objective() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.update_objective", false]], "update_objective() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.update_objective", false]], "update_objective() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.update_objective", false]], "update_objective() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.update_objective", false]], "update_objective() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.update_objective", false]], "update_objective() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.update_objective", false]], "update_objective() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.update_objective", false]], "update_objective() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.update_objective", false]], "update_objective() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.update_objective", false]], "update_objective() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.update_objective", false]], "update_objective_interval (cil.optimisation.algorithms.algorithm property)": [[9, "cil.optimisation.algorithms.Algorithm.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.cgls property)": [[9, "cil.optimisation.algorithms.CGLS.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.fista property)": [[9, "cil.optimisation.algorithms.FISTA.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.gd property)": [[9, "cil.optimisation.algorithms.GD.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.ista property)": [[9, "cil.optimisation.algorithms.ISTA.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.ladmm property)": [[9, "cil.optimisation.algorithms.LADMM.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.pd3o property)": [[9, "cil.optimisation.algorithms.PD3O.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.pdhg property)": [[9, "cil.optimisation.algorithms.PDHG.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.sirt property)": [[9, "cil.optimisation.algorithms.SIRT.update_objective_interval", false]], "update_objective_interval (cil.optimisation.algorithms.spdhg property)": [[9, "cil.optimisation.algorithms.SPDHG.update_objective_interval", false]], "update_step_sizes() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.update_step_sizes", false]], "validate() (cil.framework.labels.acquisitiontype method)": [[5, "cil.framework.labels.AcquisitionType.validate", false]], "value() (cil.processors.masker static method)": [[11, "cil.processors.Masker.value", false]], "vectordata (class in cil.framework)": [[5, "cil.framework.VectorData", false]], "verbose_header() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.verbose_header", false]], "verbose_header() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.verbose_header", false]], "verbose_output() (cil.optimisation.algorithms.algorithm method)": [[9, "cil.optimisation.algorithms.Algorithm.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.cgls method)": [[9, "cil.optimisation.algorithms.CGLS.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.fista method)": [[9, "cil.optimisation.algorithms.FISTA.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.gd method)": [[9, "cil.optimisation.algorithms.GD.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.ista method)": [[9, "cil.optimisation.algorithms.ISTA.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.ladmm method)": [[9, "cil.optimisation.algorithms.LADMM.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.pd3o method)": [[9, "cil.optimisation.algorithms.PD3O.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.pdhg method)": [[9, "cil.optimisation.algorithms.PDHG.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.sirt method)": [[9, "cil.optimisation.algorithms.SIRT.verbose_output", false]], "verbose_output() (cil.optimisation.algorithms.spdhg method)": [[9, "cil.optimisation.algorithms.SPDHG.verbose_output", false]], "vertical (cil.framework.labels.acquisitiondimension attribute)": [[5, "cil.framework.labels.AcquisitionDimension.VERTICAL", false]], "vertical (cil.framework.labels.imagedimension attribute)": [[5, "cil.framework.labels.ImageDimension.VERTICAL", false]], "warm_start_approximate_gradients() (cil.optimisation.functions.sagafunction method)": [[9, "cil.optimisation.functions.SAGAFunction.warm_start_approximate_gradients", false]], "warm_start_approximate_gradients() (cil.optimisation.functions.sagfunction method)": [[9, "cil.optimisation.functions.SAGFunction.warm_start_approximate_gradients", false]], "waveletoperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.WaveletOperator", false]], "weightedl2normsquared (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.WeightedL2NormSquared", false]], "wrap() (cil.processors.padder static method)": [[11, "cil.processors.Padder.wrap", false]], "write() (cil.io.nexusdatawriter method)": [[8, "cil.io.NEXUSDataWriter.write", false]], "write() (cil.io.rawfilewriter method)": [[8, "cil.io.RAWFileWriter.write", false]], "write() (cil.io.tiffwriter method)": [[8, "cil.io.TIFFWriter.write", false]], "xcorrelation() (cil.processors.centreofrotationcorrector static method)": [[11, "cil.processors.CentreOfRotationCorrector.xcorrelation", false]], "zeissdatareader (class in cil.io)": [[8, "cil.io.ZEISSDataReader", false]], "zerofunction (class in cil.optimisation.functions)": [[9, "cil.optimisation.functions.ZeroFunction", false]], "zerooperator (class in cil.optimisation.operators)": [[9, "cil.optimisation.operators.ZeroOperator", false]]}, "objects": {"cil.framework": [[5, 0, 1, "", "AcquisitionData"], [5, 0, 1, "", "AcquisitionGeometry"], [9, 0, 1, "", "BlockDataContainer"], [5, 0, 1, "", "BlockGeometry"], [5, 0, 1, "", "DataContainer"], [5, 0, 1, "", "DataProcessor"], [5, 0, 1, "", "ImageData"], [5, 0, 1, "", "ImageGeometry"], [5, 0, 1, "", "Partitioner"], [5, 0, 1, "", "Processor"], [5, 0, 1, "", "VectorData"]], "cil.framework.AcquisitionData": [[5, 1, 1, "", "as_array"], [5, 1, 1, "", "clone"], [5, 1, 1, "", "copy"], [5, 1, 1, "", "dot"], [5, 2, 1, "", "dtype"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "fill"], [5, 1, 1, "", "get_data_axes_order"], [5, 1, 1, "", "get_dimension_axis"], [5, 1, 1, "", "get_slice"], [5, 1, 1, "", "log"], [5, 1, 1, "", "max"], [5, 1, 1, "", "mean"], [5, 1, 1, "", "min"], [5, 2, 1, "", "ndim"], [5, 1, 1, "", "norm"], [5, 2, 1, "", "number_of_dimensions"], [5, 1, 1, "", "partition"], [5, 1, 1, "", "reorder"], [5, 1, 1, "", "sapyb"], [5, 2, 1, "", "shape"], [5, 2, 1, "", "size"], [5, 1, 1, "", "squared_norm"], [5, 1, 1, "", "sum"]], "cil.framework.AcquisitionGeometry": [[5, 1, 1, "", "allocate"], [5, 1, 1, "", "create_Cone2D"], [5, 1, 1, "", "create_Cone3D"], [5, 1, 1, "", "create_Parallel2D"], [5, 1, 1, "", "create_Parallel3D"], [5, 1, 1, "", "get_ImageGeometry"], [5, 1, 1, "", "get_slice"], [5, 1, 1, "", "set_angles"], [5, 1, 1, "", "set_channels"], [5, 1, 1, "", "set_labels"], [5, 1, 1, "", "set_panel"]], "cil.framework.BlockDataContainer": [[9, 1, 1, "", "__iadd__"], [9, 1, 1, "", "__idiv__"], [9, 1, 1, "", "__imul__"], [9, 1, 1, "", "__isub__"], [9, 1, 1, "", "__iter__"], [9, 1, 1, "", "__itruediv__"], [9, 1, 1, "", "__neg__"], [9, 1, 1, "", "__radd__"], [9, 1, 1, "", "__rdiv__"], [9, 1, 1, "", "__rmul__"], [9, 1, 1, "", "__rpow__"], [9, 1, 1, "", "__rsub__"], [9, 1, 1, "", "__rtruediv__"], [9, 3, 1, "", "__weakref__"], [9, 1, 1, "", "add"], [9, 1, 1, "", "axpby"], [9, 1, 1, "", "binary_operations"], [9, 1, 1, "", "copy"], [9, 1, 1, "", "divide"], [9, 1, 1, "", "is_compatible"], [9, 1, 1, "", "maximum"], [9, 1, 1, "", "minimum"], [9, 1, 1, "", "multiply"], [9, 1, 1, "", "next"], [9, 1, 1, "", "power"], [9, 1, 1, "", "sapyb"], [9, 1, 1, "", "subtract"], [9, 1, 1, "", "unary_operations"]], "cil.framework.BlockGeometry": [[5, 1, 1, "", "allocate"], [5, 1, 1, "", "get_item"]], "cil.framework.DataContainer": [[5, 1, 1, "", "as_array"], [5, 1, 1, "", "clone"], [5, 1, 1, "", "copy"], [5, 1, 1, "", "dot"], [5, 2, 1, "", "dtype"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "fill"], [5, 1, 1, "", "get_data_axes_order"], [5, 1, 1, "", "get_dimension_axis"], [5, 1, 1, "", "get_slice"], [5, 1, 1, "", "log"], [5, 1, 1, "", "max"], [5, 1, 1, "", "mean"], [5, 1, 1, "", "min"], [5, 2, 1, "", "ndim"], [5, 1, 1, "", "norm"], [5, 2, 1, "", "number_of_dimensions"], [5, 1, 1, "", "reorder"], [5, 1, 1, "", "sapyb"], [5, 2, 1, "", "shape"], [5, 2, 1, "", "size"], [5, 1, 1, "", "squared_norm"], [5, 1, 1, "", "sum"]], "cil.framework.DataProcessor": [[5, 1, 1, "", "check_input"], [5, 1, 1, "", "get_input"], [5, 1, 1, "", "get_output"], [5, 1, 1, "", "set_input"]], "cil.framework.ImageData": [[5, 1, 1, "", "apply_circular_mask"], [5, 1, 1, "", "as_array"], [5, 1, 1, "", "clone"], [5, 1, 1, "", "copy"], [5, 1, 1, "", "dot"], [5, 2, 1, "", "dtype"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "fill"], [5, 1, 1, "", "get_data_axes_order"], [5, 1, 1, "", "get_dimension_axis"], [5, 1, 1, "", "get_slice"], [5, 1, 1, "", "log"], [5, 1, 1, "", "max"], [5, 1, 1, "", "mean"], [5, 1, 1, "", "min"], [5, 2, 1, "", "ndim"], [5, 1, 1, "", "norm"], [5, 2, 1, "", "number_of_dimensions"], [5, 1, 1, "", "reorder"], [5, 1, 1, "", "sapyb"], [5, 2, 1, "", "shape"], [5, 2, 1, "", "size"], [5, 1, 1, "", "squared_norm"], [5, 1, 1, "", "sum"]], "cil.framework.ImageGeometry": [[5, 1, 1, "", "allocate"], [5, 1, 1, "", "clone"], [5, 1, 1, "", "copy"], [5, 1, 1, "", "get_slice"]], "cil.framework.Partitioner": [[5, 1, 1, "", "partition"]], "cil.framework.Processor": [[5, 1, 1, "", "check_input"], [5, 1, 1, "", "get_input"], [5, 1, 1, "", "get_output"], [5, 1, 1, "", "set_input"]], "cil.framework.VectorData": [[5, 1, 1, "", "as_array"], [5, 1, 1, "", "clone"], [5, 1, 1, "", "copy"], [5, 1, 1, "", "dot"], [5, 2, 1, "", "dtype"], [5, 1, 1, "", "exp"], [5, 1, 1, "", "fill"], [5, 1, 1, "", "get_data_axes_order"], [5, 1, 1, "", "get_dimension_axis"], [5, 1, 1, "", "get_slice"], [5, 1, 1, "", "log"], [5, 1, 1, "", "max"], [5, 1, 1, "", "mean"], [5, 1, 1, "", "min"], [5, 2, 1, "", "ndim"], [5, 1, 1, "", "norm"], [5, 2, 1, "", "number_of_dimensions"], [5, 1, 1, "", "reorder"], [5, 1, 1, "", "sapyb"], [5, 2, 1, "", "shape"], [5, 2, 1, "", "size"], [5, 1, 1, "", "squared_norm"], [5, 1, 1, "", "sum"]], "cil.framework.labels": [[5, 0, 1, "", "AcquisitionDimension"], [5, 0, 1, "", "AcquisitionType"], [5, 0, 1, "", "AngleUnit"], [5, 0, 1, "", "FillType"], [5, 0, 1, "", "ImageDimension"]], "cil.framework.labels.AcquisitionDimension": [[5, 3, 1, "", "ANGLE"], [5, 3, 1, "", "CHANNEL"], [5, 3, 1, "", "HORIZONTAL"], [5, 3, 1, "", "VERTICAL"]], "cil.framework.labels.AcquisitionType": [[5, 3, 1, "", "CONE"], [5, 3, 1, "", "DIM2"], [5, 3, 1, "", "DIM3"], [5, 3, 1, "", "PARALLEL"], [5, 2, 1, "", "dimension"], [5, 2, 1, "", "geometry"], [5, 1, 1, "", "validate"]], "cil.framework.labels.AngleUnit": [[5, 3, 1, "", "DEGREE"], [5, 3, 1, "", "RADIAN"]], "cil.framework.labels.FillType": [[5, 3, 1, "", "RANDOM"], [5, 3, 1, "", "RANDOM_INT"]], "cil.framework.labels.ImageDimension": [[5, 3, 1, "", "CHANNEL"], [5, 3, 1, "", "HORIZONTAL_X"], [5, 3, 1, "", "HORIZONTAL_Y"], [5, 3, 1, "", "VERTICAL"]], "cil.io": [[8, 0, 1, "", "NEXUSDataReader"], [8, 0, 1, "", "NEXUSDataWriter"], [8, 0, 1, "", "NikonDataReader"], [8, 0, 1, "", "RAWFileWriter"], [8, 0, 1, "", "TIFFStackReader"], [8, 0, 1, "", "TIFFWriter"], [8, 0, 1, "", "ZEISSDataReader"]], "cil.io.NEXUSDataReader": [[8, 1, 1, "", "get_data_offset"], [8, 1, 1, "", "get_data_scale"], [8, 1, 1, "", "get_geometry"], [8, 1, 1, "", "load_data"], [8, 1, 1, "", "read"], [8, 1, 1, "", "read_as_original"], [8, 1, 1, "", "set_up"]], "cil.io.NEXUSDataWriter": [[8, 1, 1, "", "set_up"], [8, 1, 1, "", "write"]], "cil.io.NikonDataReader": [[8, 1, 1, "", "get_geometry"], [8, 1, 1, "", "get_roi"], [8, 1, 1, "", "load_projections"], [8, 1, 1, "", "read"]], "cil.io.RAWFileWriter": [[8, 1, 1, "", "write"]], "cil.io.TIFFStackReader": [[8, 1, 1, "", "read"], [8, 1, 1, "", "read_as_AcquisitionData"], [8, 1, 1, "", "read_as_ImageData"], [8, 1, 1, "", "read_rescaled"], [8, 1, 1, "", "read_scale_offset"]], "cil.io.TIFFWriter": [[8, 1, 1, "", "write"]], "cil.io.ZEISSDataReader": [[8, 1, 1, "", "get_geometry"], [8, 1, 1, "", "get_metadata"], [8, 1, 1, "", "read"], [8, 1, 1, "", "set_up"], [8, 1, 1, "", "slice_metadata"]], "cil.io.utilities": [[8, 0, 1, "", "HDF5_utilities"]], "cil.io.utilities.HDF5_utilities": [[8, 1, 1, "", "get_dataset_metadata"], [8, 1, 1, "", "print_metadata"], [8, 1, 1, "", "read"], [8, 1, 1, "", "read_to"]], "cil.optimisation.algorithms": [[9, 0, 1, "", "Algorithm"], [9, 0, 1, "", "CGLS"], [9, 0, 1, "", "FISTA"], [9, 0, 1, "", "GD"], [9, 0, 1, "", "ISTA"], [9, 0, 1, "", "LADMM"], [9, 0, 1, "", "PD3O"], [9, 0, 1, "", "PDHG"], [9, 0, 1, "", "SIRT"], [9, 0, 1, "", "SPDHG"]], "cil.optimisation.algorithms.Algorithm": [[9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.CGLS": [[9, 1, 1, "", "flag"], [9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.FISTA": [[9, 1, 1, "", "__delattr__"], [9, 1, 1, "", "__dir__"], [9, 1, 1, "", "__eq__"], [9, 1, 1, "", "__format__"], [9, 1, 1, "", "__ge__"], [9, 1, 1, "", "__getattribute__"], [9, 1, 1, "", "__getstate__"], [9, 1, 1, "", "__gt__"], [9, 1, 1, "", "__hash__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__init_subclass__"], [9, 1, 1, "", "__iter__"], [9, 1, 1, "", "__le__"], [9, 1, 1, "", "__lt__"], [9, 1, 1, "", "__ne__"], [9, 1, 1, "", "__new__"], [9, 1, 1, "", "__next__"], [9, 1, 1, "", "__reduce__"], [9, 1, 1, "", "__reduce_ex__"], [9, 1, 1, "", "__repr__"], [9, 1, 1, "", "__setattr__"], [9, 1, 1, "", "__sizeof__"], [9, 1, 1, "", "__str__"], [9, 1, 1, "", "__subclasshook__"], [9, 3, 1, "", "__weakref__"], [9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.GD": [[9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.ISTA": [[9, 1, 1, "", "__delattr__"], [9, 1, 1, "", "__dir__"], [9, 1, 1, "", "__eq__"], [9, 1, 1, "", "__format__"], [9, 1, 1, "", "__ge__"], [9, 1, 1, "", "__getattribute__"], [9, 1, 1, "", "__getstate__"], [9, 1, 1, "", "__gt__"], [9, 1, 1, "", "__hash__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__init_subclass__"], [9, 1, 1, "", "__iter__"], [9, 1, 1, "", "__le__"], [9, 1, 1, "", "__lt__"], [9, 1, 1, "", "__ne__"], [9, 1, 1, "", "__new__"], [9, 1, 1, "", "__next__"], [9, 1, 1, "", "__reduce__"], [9, 1, 1, "", "__reduce_ex__"], [9, 1, 1, "", "__repr__"], [9, 1, 1, "", "__setattr__"], [9, 1, 1, "", "__sizeof__"], [9, 1, 1, "", "__str__"], [9, 1, 1, "", "__subclasshook__"], [9, 3, 1, "", "__weakref__"], [9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.LADMM": [[9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.PD3O": [[9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.PDHG": [[9, 1, 1, "", "check_convergence"], [9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_gamma_fconj"], [9, 1, 1, "", "set_gamma_g"], [9, 1, 1, "", "set_step_sizes"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "update_step_sizes"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.SIRT": [[9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_relaxation_parameter"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.algorithms.SPDHG": [[9, 1, 1, "", "get_last_loss"], [9, 1, 1, "", "get_last_objective"], [9, 1, 1, "", "get_output"], [9, 1, 1, "", "is_provably_convergent"], [9, 2, 1, "", "iterations"], [9, 2, 1, "", "loss"], [9, 2, 1, "", "max_iteration"], [9, 1, 1, "", "max_iteration_stop_criterion"], [9, 2, 1, "", "objective"], [9, 1, 1, "", "objective_to_dict"], [9, 1, 1, "", "objective_to_string"], [9, 1, 1, "", "run"], [9, 1, 1, "", "set_up"], [9, 1, 1, "", "should_stop"], [9, 2, 1, "", "solution"], [9, 1, 1, "", "update"], [9, 1, 1, "", "update_objective"], [9, 2, 1, "", "update_objective_interval"], [9, 1, 1, "", "verbose_header"], [9, 1, 1, "", "verbose_output"]], "cil.optimisation.functions": [[9, 0, 1, "", "ApproximateGradientSumFunction"], [9, 0, 1, "", "BlockFunction"], [9, 0, 1, "", "ConstantFunction"], [9, 0, 1, "", "Function"], [9, 0, 1, "", "IndicatorBox"], [9, 0, 1, "", "KullbackLeibler"], [9, 0, 1, "", "L1Norm"], [9, 0, 1, "", "L1Sparsity"], [9, 0, 1, "", "L2NormSquared"], [9, 0, 1, "", "LSVRGFunction"], [9, 0, 1, "", "LeastSquares"], [9, 0, 1, "", "MixedL11Norm"], [9, 0, 1, "", "MixedL21Norm"], [9, 0, 1, "", "OperatorCompositionFunction"], [9, 0, 1, "", "Rosenbrock"], [9, 0, 1, "", "SAGAFunction"], [9, 0, 1, "", "SAGFunction"], [9, 0, 1, "", "SGFunction"], [9, 0, 1, "", "SVRGFunction"], [9, 0, 1, "", "ScaledFunction"], [9, 0, 1, "", "SmoothMixedL21Norm"], [9, 0, 1, "", "SumFunction"], [9, 0, 1, "", "SumScalarFunction"], [9, 0, 1, "", "TotalVariation"], [9, 0, 1, "", "TranslateFunction"], [9, 0, 1, "", "WeightedL2NormSquared"], [9, 0, 1, "", "ZeroFunction"]], "cil.optimisation.functions.ApproximateGradientSumFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "approximate_gradient"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 2, 1, "", "data_passes"], [9, 2, 1, "", "data_passes_indices"], [9, 1, 1, "", "full_gradient"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_data_partition_weights"]], "cil.optimisation.functions.BlockFunction": [[9, 2, 1, "", "L"], [9, 1, 1, "", "__call__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__rmul__"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.ConstantFunction": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.Function": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.IndicatorBox": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 2, 1, "", "num_threads"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_num_threads"], [9, 1, 1, "", "set_suppress_evaluation"]], "cil.optimisation.functions.KullbackLeibler": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.L1Norm": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.L1Sparsity": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.L2NormSquared": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.LSVRGFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "approximate_gradient"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 2, 1, "", "data_passes"], [9, 2, 1, "", "data_passes_indices"], [9, 1, 1, "", "full_gradient"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_data_partition_weights"]], "cil.optimisation.functions.LeastSquares": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.MixedL11Norm": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.MixedL21Norm": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.OperatorCompositionFunction": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.Rosenbrock": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SAGAFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "approximate_gradient"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 2, 1, "", "data_passes"], [9, 2, 1, "", "data_passes_indices"], [9, 1, 1, "", "full_gradient"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_data_partition_weights"], [9, 1, 1, "", "warm_start_approximate_gradients"]], "cil.optimisation.functions.SAGFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "approximate_gradient"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 2, 1, "", "data_passes"], [9, 2, 1, "", "data_passes_indices"], [9, 1, 1, "", "full_gradient"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_data_partition_weights"], [9, 1, 1, "", "warm_start_approximate_gradients"]], "cil.optimisation.functions.SGFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "approximate_gradient"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 2, 1, "", "data_passes"], [9, 2, 1, "", "data_passes_indices"], [9, 1, 1, "", "full_gradient"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_data_partition_weights"]], "cil.optimisation.functions.SVRGFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "approximate_gradient"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 2, 1, "", "data_passes"], [9, 2, 1, "", "data_passes_indices"], [9, 1, 1, "", "full_gradient"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"], [9, 1, 1, "", "set_data_partition_weights"]], "cil.optimisation.functions.ScaledFunction": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SmoothMixedL21Norm": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SumFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.SumScalarFunction": [[9, 2, 1, "", "L"], [9, 2, 1, "", "Lmax"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.TotalVariation": [[9, 2, 1, "", "L"], [9, 1, 1, "", "calculate_Lipschitz"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 2, 1, "", "gradient_operator"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.TranslateFunction": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.WeightedL2NormSquared": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.functions.ZeroFunction": [[9, 2, 1, "", "L"], [9, 1, 1, "", "centered_at"], [9, 1, 1, "", "convex_conjugate"], [9, 1, 1, "", "gradient"], [9, 1, 1, "", "proximal"], [9, 1, 1, "", "proximal_conjugate"]], "cil.optimisation.operators": [[9, 0, 1, "", "BlockOperator"], [9, 0, 1, "", "ChannelwiseOperator"], [9, 0, 1, "", "CompositionOperator"], [9, 0, 1, "", "DiagonalOperator"], [9, 0, 1, "", "FiniteDifferenceOperator"], [9, 0, 1, "", "GradientOperator"], [9, 0, 1, "", "IdentityOperator"], [9, 0, 1, "", "LinearOperator"], [9, 0, 1, "", "MaskOperator"], [9, 0, 1, "", "MatrixOperator"], [9, 0, 1, "", "Operator"], [9, 0, 1, "", "ProjectionMap"], [9, 0, 1, "", "ScaledOperator"], [9, 0, 1, "", "SparseFiniteDifferenceOperator"], [9, 0, 1, "", "SumOperator"], [9, 0, 1, "", "SymmetrisedGradientOperator"], [9, 0, 1, "", "WaveletOperator"], [9, 0, 1, "", "ZeroOperator"]], "cil.optimisation.operators.BlockOperator": [[9, 2, 1, "", "T"], [9, 1, 1, "", "__getitem__"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "__rmul__"], [9, 1, 1, "", "adjoint"], [9, 1, 1, "", "column_wise_compatible"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "domain_geometry"], [9, 1, 1, "", "get_as_list"], [9, 1, 1, "", "get_item"], [9, 1, 1, "", "get_norms_as_list"], [9, 1, 1, "", "get_output_shape"], [9, 1, 1, "", "is_linear"], [9, 1, 1, "", "norm"], [9, 1, 1, "", "range_geometry"], [9, 1, 1, "", "row_wise_compatible"], [9, 1, 1, "", "set_norms"]], "cil.optimisation.operators.ChannelwiseOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.CompositionOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "is_linear"]], "cil.optimisation.operators.DiagonalOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.FiniteDifferenceOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.GradientOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.IdentityOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "is_orthogonal"]], "cil.optimisation.operators.LinearOperator": [[9, 1, 1, "", "PowerMethod"], [9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "dot_test"], [9, 1, 1, "", "is_linear"]], "cil.optimisation.operators.MatrixOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.Operator": [[9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "domain_geometry"], [9, 1, 1, "", "is_linear"], [9, 1, 1, "", "is_orthogonal"], [9, 1, 1, "", "norm"], [9, 1, 1, "", "range_geometry"], [9, 1, 1, "", "set_norm"]], "cil.optimisation.operators.ProjectionMap": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.ScaledOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "is_linear"], [9, 1, 1, "", "norm"]], "cil.optimisation.operators.SparseFiniteDifferenceOperator": [[9, 1, 1, "", "direct"]], "cil.optimisation.operators.SumOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "is_linear"]], "cil.optimisation.operators.SymmetrisedGradientOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "direct"]], "cil.optimisation.operators.WaveletOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"], [9, 1, 1, "", "is_orthogonal"]], "cil.optimisation.operators.ZeroOperator": [[9, 1, 1, "", "adjoint"], [9, 1, 1, "", "calculate_norm"], [9, 1, 1, "", "direct"]], "cil.optimisation.utilities": [[9, 0, 1, "", "Sampler"], [9, 0, 1, "", "SamplerRandom"]], "cil.optimisation.utilities.Sampler": [[9, 1, 1, "id51", "from_function"], [9, 1, 1, "", "get_samples"], [9, 1, 1, "id52", "herman_meyer"], [9, 1, 1, "", "next"], [9, 1, 1, "id49", "random_with_replacement"], [9, 1, 1, "id50", "random_without_replacement"], [9, 1, 1, "id0", "sequential"], [9, 1, 1, "id48", "staggered"]], "cil.optimisation.utilities.SamplerRandom": [[9, 1, 1, "", "get_samples"]], "cil.optimisation.utilities.StepSizeMethods": [[9, 0, 1, "", "ArmijoStepSizeRule"], [9, 0, 1, "", "BarzilaiBorweinStepSizeRule"], [9, 0, 1, "", "ConstantStepSize"], [9, 0, 1, "", "StepSizeRule"]], "cil.optimisation.utilities.StepSizeMethods.ArmijoStepSizeRule": [[9, 1, 1, "", "get_step_size"]], "cil.optimisation.utilities.StepSizeMethods.BarzilaiBorweinStepSizeRule": [[9, 1, 1, "", "get_step_size"]], "cil.optimisation.utilities.StepSizeMethods.ConstantStepSize": [[9, 1, 1, "", "get_step_size"]], "cil.optimisation.utilities.StepSizeMethods.StepSizeRule": [[9, 1, 1, "", "get_step_size"]], "cil.optimisation.utilities.callbacks": [[9, 0, 1, "", "Callback"], [9, 0, 1, "", "LogfileCallback"], [9, 0, 1, "", "ProgressCallback"], [9, 0, 1, "", "TextProgressCallback"]], "cil.optimisation.utilities.preconditioner": [[9, 0, 1, "", "AdaptiveSensitivity"], [9, 0, 1, "", "Preconditioner"], [9, 0, 1, "", "Sensitivity"]], "cil.optimisation.utilities.preconditioner.AdaptiveSensitivity": [[9, 1, 1, "", "apply"]], "cil.optimisation.utilities.preconditioner.Preconditioner": [[9, 1, 1, "id54", "apply"]], "cil.optimisation.utilities.preconditioner.Sensitivity": [[9, 1, 1, "", "apply"], [9, 1, 1, "", "compute_preconditioner_matrix"]], "cil.plugins.TomoPhantom": [[10, 4, 1, "", "get_ImageData"]], "cil.plugins.astra": [[10, 0, 1, "", "FBP"], [10, 0, 1, "", "ProjectionOperator"]], "cil.plugins.astra.FBP": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "set_input"]], "cil.plugins.ccpi_regularisation.functions": [[10, 0, 1, "", "FGP_TV"], [10, 0, 1, "", "FGP_dTV"], [10, 0, 1, "", "TGV"], [10, 0, 1, "", "TNV"]], "cil.plugins.ccpi_regularisation.functions.FGP_dTV": [[10, 1, 1, "", "__call__"], [10, 1, 1, "", "__init__"], [10, 1, 1, "", "__rmul__"], [10, 1, 1, "", "convex_conjugate"]], "cil.plugins.ccpi_regularisation.functions.TGV": [[10, 1, 1, "", "__call__"], [10, 1, 1, "", "__init__"], [10, 1, 1, "", "__rmul__"], [10, 1, 1, "", "convex_conjugate"]], "cil.plugins.ccpi_regularisation.functions.TNV": [[10, 1, 1, "", "__call__"], [10, 1, 1, "", "__init__"], [10, 1, 1, "", "__rmul__"], [10, 1, 1, "", "check_input"], [10, 1, 1, "", "convex_conjugate"]], "cil.plugins.tigre": [[10, 0, 1, "", "FBP"], [10, 0, 1, "", "ProjectionOperator"]], "cil.plugins.tigre.FBP": [[10, 1, 1, "", "get_output"], [10, 1, 1, "", "set_input"]], "cil.processors": [[11, 0, 1, "", "AbsorptionTransmissionConverter"], [11, 0, 1, "", "Binner"], [11, 0, 1, "", "CentreOfRotationCorrector"], [11, 0, 1, "", "MaskGenerator"], [11, 0, 1, "", "Masker"], [11, 0, 1, "", "Normaliser"], [11, 0, 1, "", "Padder"], [11, 0, 1, "", "PaganinProcessor"], [11, 0, 1, "", "RingRemover"], [11, 0, 1, "", "Slicer"], [11, 0, 1, "", "TransmissionAbsorptionConverter"]], "cil.processors.AbsorptionTransmissionConverter": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "set_input"]], "cil.processors.Binner": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "process"], [11, 1, 1, "", "set_input"]], "cil.processors.CentreOfRotationCorrector": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "image_sharpness"], [11, 1, 1, "", "set_input"], [11, 1, 1, "", "xcorrelation"]], "cil.processors.MaskGenerator": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "mean"], [11, 1, 1, "", "median"], [11, 1, 1, "", "quantile"], [11, 1, 1, "", "set_input"], [11, 1, 1, "", "special_values"], [11, 1, 1, "", "threshold"]], "cil.processors.Masker": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "interpolate"], [11, 1, 1, "", "mean"], [11, 1, 1, "", "median"], [11, 1, 1, "", "set_input"], [11, 1, 1, "", "value"]], "cil.processors.Normaliser": [[11, 1, 1, "", "estimate_normalised_error"], [11, 1, 1, "", "get_output"], [11, 1, 1, "", "set_input"]], "cil.processors.Padder": [[11, 1, 1, "", "constant"], [11, 1, 1, "", "edge"], [11, 1, 1, "", "get_output"], [11, 1, 1, "", "linear_ramp"], [11, 1, 1, "", "reflect"], [11, 1, 1, "", "set_input"], [11, 1, 1, "", "symmetric"], [11, 1, 1, "", "wrap"]], "cil.processors.PaganinProcessor": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "set_input"]], "cil.processors.RingRemover": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "set_input"]], "cil.processors.Slicer": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "process"], [11, 1, 1, "", "set_input"]], "cil.processors.TransmissionAbsorptionConverter": [[11, 1, 1, "", "get_output"], [11, 1, 1, "", "set_input"]], "cil.recon": [[12, 0, 1, "", "FBP"], [12, 0, 1, "", "FDK"]], "cil.recon.FBP": [[12, 1, 1, "", "get_filter_array"], [12, 1, 1, "", "plot_filter"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "run"], [12, 1, 1, "", "set_fft_order"], [12, 1, 1, "", "set_filter"], [12, 1, 1, "", "set_filter_inplace"], [12, 1, 1, "", "set_image_geometry"], [12, 1, 1, "", "set_input"], [12, 1, 1, "", "set_split_processing"]], "cil.recon.FBP.FBP": [[4, 1, 1, "", "run"]], "cil.recon.FDK": [[12, 1, 1, "", "get_filter_array"], [12, 1, 1, "", "plot_filter"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "run"], [12, 1, 1, "", "set_fft_order"], [12, 1, 1, "", "set_filter"], [12, 1, 1, "", "set_filter_inplace"], [12, 1, 1, "", "set_image_geometry"], [12, 1, 1, "", "set_input"]], "cil.utilities": [[13, 5, 0, "-", "quality_measures"]], "cil.utilities.dataexample": [[13, 0, 1, "id0", "SIMULATED_CONE_BEAM_DATA"], [13, 0, 1, "", "SIMULATED_PARALLEL_BEAM_DATA"], [13, 0, 1, "", "SYNCHROTRON_PARALLEL_BEAM_DATA"], [13, 0, 1, "", "TestData"]], "cil.utilities.dataexample.SIMULATED_CONE_BEAM_DATA": [[13, 1, 1, "id1", "get"]], "cil.utilities.dataexample.SIMULATED_PARALLEL_BEAM_DATA": [[13, 1, 1, "", "get"]], "cil.utilities.dataexample.SYNCHROTRON_PARALLEL_BEAM_DATA": [[13, 1, 1, "", "get"]], "cil.utilities.dataexample.TestData": [[13, 1, 1, "", "load"], [13, 1, 1, "", "random_noise"], [13, 1, 1, "", "scikit_random_noise"]], "cil.utilities.display": [[13, 0, 1, "", "show1D"], [13, 0, 1, "", "show2D"], [13, 0, 1, "", "show_geometry"]], "cil.utilities.display.show1D": [[13, 3, 1, "", "figure"], [13, 1, 1, "", "save"]], "cil.utilities.display.show2D": [[13, 1, 1, "", "save"]], "cil.utilities.display.show_geometry": [[13, 1, 1, "", "save"]], "cil.utilities.jupyter": [[13, 0, 1, "", "islicer"], [13, 0, 1, "", "link_islicer"]], "cil.utilities.quality_measures": [[13, 4, 1, "", "mae"], [13, 4, 1, "", "mse"], [13, 4, 1, "", "psnr"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:module"}, "terms": {"": [2, 3, 4, 5, 8, 9, 13], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "00": [2, 9], "000": 3, "0000654846240296": 9, "0005647295658866": 9, "000e": 2, "001": 3, "00186": 9, "002e": 2, "003": 10, "004e": 2, "005": [3, 11], "006e": 2, "008": 9, "008567": 11, "00884e": 2, "008e": 2, "01": [2, 3, 10, 11, 13], "010": 9, "01010": 11, "011e": 2, "01341e": 2, "013e": 2, "016": 9, "016e": 2, "0171": 9, "018": 9, "0192": [6, 9], "0193": [6, 9], "01954e": 2, "019e": 2, "01it": 2, "02": 2, "020": 9, "022e": 2, "0251": 9, "025129": 10, "025e": 2, "02613e": 2, "028e": 2, "03": [2, 3], "031e": 2, "03451e": 2, "035e": 2, "03792e": 2, "039e": 2, "03it": 2, "04": [2, 3, 10], "043e": 2, "047e": 2, "048e": 2, "05": [1, 2, 9, 10, 11, 13], "050626090": 9, "052e": 2, "055010": 10, "057e": 2, "05844e": 2, "05e": 9, "05it": 2, "06": [2, 3, 9], "062e": 2, "063e": 2, "06416e": 2, "06739e": 2, "0680": 9, "068e": 2, "06it": 2, "07": 2, "07002e": 3, "07019e": 3, "07187e": 2, "07526e": 3, "075e": 2, "07888e": 2, "07it": 2, "08": [2, 9], "080716542": 9, "081": 3, "081e": 2, "08418e": 2, "088e": 2, "08it": 2, "09076934x": 9, "09416e": 2, "09652e": 2, "096e": 2, "0x7f08d5b68d90": 2, "0x7f08d5daaec0": 2, "0x7f08dcda0af0": 2, "0x7f08dcf79120": 2, "0x7f08dec65b10": 2, "0x7f08dec67bb0": 2, "0x7f08df8487f0": 2, "0x7f08dfcb7670": 2, "0x7f0908e74b80": 2, "0x7f0908e75030": 2, "0x7f0908e75840": 2, "0x7f3be111b7a0": 1, "0x7f3be1172150": 1, "0x7f3be35da060": 1, "0x7f3be3a64050": 1, "0x7f3be3f10ef0": 1, "0x7f3bf017efc0": 1, "0x7f3bf01aafc0": 1, "0x7f3bf01ab8c0": 1, "1": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13], "10": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13], "100": [1, 2, 3, 8, 9, 10], "1000": [1, 3], "1000000": 9, "1007": 9, "1015": 9, "1016": 10, "1024": 1, "103": 9, "1030": 9, "10307e": 2, "1046": [9, 11], "104e": 2, "105": 3, "106": 3, "108": [3, 5], "1088": [10, 11], "109": [3, 5], "1093": 9, "1098": [6, 9], "10e2": 11, "10it": 2, "11": [1, 3, 5, 9], "110": [2, 3], "1109": 9, "111": 3, "112": 9, "11234e": 2, "1137": 9, "113e": 2, "1168": 9, "117": 9, "11770": 9, "12": [1, 3, 5, 9, 12], "120": [2, 5, 9, 11], "1200": 9, "121": 5, "123e": 2, "12462e": 2, "128": [2, 10, 11], "13": [3, 5], "130": [2, 3], "132": 5, "1321": 9, "133": 5, "134e": 2, "1364": [10, 11], "1365": 11, "14": [2, 3, 5], "140": 2, "141": 9, "14156e": 2, "144": 5, "145": [5, 9], "14524e": 2, "145e": 2, "148": 9, "14809e": 2, "14it": 2, "15": [2, 3, 5, 9, 12, 13], "150": 2, "1533217": 9, "156": 5, "157": 5, "159e": 2, "16": [2, 3, 5, 8, 9, 12], "160": 2, "16038e": 3, "16084e": 2, "16141e": 2, "162": 9, "16364e": 2, "16492e": 2, "168": 5, "16896e": 3, "169": 5, "1698": 9, "16it": 2, "17": [2, 9, 11], "170": [1, 2], "171": 1, "1717": 9, "172": 1, "173": 1, "173e": 2, "174": 1, "175": 1, "176": 1, "177": 1, "178": 1, "179": 1, "17it": 2, "18": [2, 5, 9], "180": [1, 2, 5, 11], "18000": 11, "181": 5, "183": 9, "1887": 12, "188e": 2, "189": 3, "18it": 2, "19": [2, 5], "190": 2, "190e": 2, "1911": 9, "192": 5, "193": 5, "194": 3, "1976": 10, "19819e": 2, "1988": 9, "1992": 9, "1999": 9, "19991e": 2, "19998e": 2, "1d": [1, 5, 6, 7, 11], "1e": [2, 3, 9, 11], "1e6": 9, "1k": 3, "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "20": [2, 5, 9, 13], "200": [1, 2, 8, 11], "20006e": 2, "2001": 9, "2002": 11, "20029e": 2, "2003": 9, "20049e": 2, "2005": 9, "2007": 3, "2008": 12, "20088e": 2, "2009": 9, "2010": 9, "2011": 9, "20117e": 2, "2013": 9, "2014": 9, "2016": 9, "2017": [9, 12], "20170e": 2, "2018": [9, 10], "2019": [9, 10, 13], "202": 9, "2020": [6, 9], "20200192": [3, 6, 9], "20200193": [6, 9], "2021": [1, 3, 6, 9], "20213e": 2, "2022": [1, 9], "2023": [3, 9], "2024": 2, "20271e": 2, "20275e": 2, "2028250": 9, "20338e": 2, "204": 5, "2040": 11, "20408e": 2, "2048": 1, "20490e": 2, "205": 5, "20565e": 2, "2057": 10, "20672e": 2, "20747e": 2, "20881e": 2, "208e": 2, "20954e": 2, "21": [2, 5, 9], "210": 2, "21121e": 2, "21182e": 2, "21308e": 2, "213659415696782e": 3, "21399e": 2, "21411e": 2, "21432e": 2, "216": 5, "217": 5, "21702e": 2, "21716e": 2, "21990e": 2, "22": [2, 5, 9], "220": 2, "22034e": 2, "2204": [3, 9], "22065e": 2, "22266e": 2, "22295e": 2, "22300e": 2, "22457e": 2, "22611e": 2, "228": 5, "22899e": 2, "228e": 2, "229": 5, "22934e": 2, "23": [2, 6, 9, 11], "230": 2, "23272e": 2, "23400e": 2, "23520e": 2, "23621e": 2, "23964e": 2, "23983e": 2, "24": [2, 5, 10], "240": [2, 5], "241": 5, "2419": 9, "2434": 9, "24357e": 2, "24393e": 2, "24414e": 2, "24593e": 2, "24743e": 2, "24it": 2, "25": [2, 5, 9], "250": 2, "250e": 2, "25140e": 2, "252": 5, "25294e": 2, "253": 5, "25548e": 2, "256": 13, "25662e": 2, "25965e": 2, "25it": 2, "26": [2, 5, 9], "260": 2, "26069e": 2, "26383e": 2, "26388e": 2, "264": 5, "265": 5, "26821e": 2, "26837e": 2, "26929e": 2, "26it": 2, "27": [2, 5, 9], "270": 2, "27264e": 2, "275e": 2, "276": 5, "277": 5, "27749e": 2, "2783": 9, "27882e": 2, "27it": 2, "28": [2, 5, 9], "280": 2, "2808": 9, "2818": 11, "288": 5, "28810e": 2, "289": 5, "28935e": 2, "28it": 2, "29": [2, 9], "290": 2, "2_2": [7, 9], "2beta": 9, "2c": 9, "2ca": 9, "2d": [1, 5, 6, 7, 9, 10, 11], "2e": 2, "2i_": 11, "2pi": 10, "2w": 9, "2wx": 9, "2x": [1, 9], "3": [1, 2, 3, 4, 5, 8, 9, 10, 11, 13], "30": [2, 5], "300": [2, 5, 8, 9], "30086e": 2, "301": 5, "303e": 2, "30695e": 2, "30737e": 2, "31": [2, 5], "310": 2, "312": 5, "313": 5, "31342e": 2, "31374e": 2, "31st": 9, "32": [2, 5, 12], "320": 2, "3203237": 9, "324": 5, "325": 5, "32710e": 2, "32729e": 2, "32it": 2, "33": 5, "330": 2, "33361e": 2, "33423e": 2, "336": 5, "336e": 2, "337": 5, "33746e": 2, "337e": 2, "34": 5, "340": 2, "34200e": 2, "3432": 2, "34665e": 2, "348": 5, "349": 5, "35": 13, "350": 2, "35374e": 2, "35827e": 2, "35it": 2, "36": 5, "360": [2, 10], "36044488": 9, "360deg": 11, "37": [5, 9], "370": 2, "375e": 2, "37602e": 2, "377": 9, "379": [3, 9], "380": 2, "381": 9, "38151e": 2, "390": 2, "39012e": 2, "39156e": 2, "39533e": 2, "39697e": 2, "3d": [1, 4, 5, 7, 8, 9, 10, 11, 13], "3e": 2, "4": [1, 2, 3, 5, 7, 8, 9, 10, 11], "40": [2, 9], "400": [2, 9], "40000": 11, "40164e": 2, "40it": 2, "41": 9, "410": 2, "41640e": 2, "41956e": 2, "41it": 2, "42": 9, "420": 2, "4208": 9, "421e": 2, "42it": 2, "430": [2, 9], "43676e": 2, "43935e": 2, "440": 2, "44610e": 2, "44it": 2, "450": 2, "451": 9, "451e": 2, "45565e": 2, "45it": 2, "46": 3, "460": 2, "46249e": 2, "46448e": 2, "467": 9, "46it": 2, "47": 9, "470": 2, "47324e": 2, "476e": 2, "47it": 2, "48": 5, "480": 2, "48145e": 2, "48289": 12, "48530e": 2, "48it": 2, "49": 5, "490": 2, "49199e": 2, "49519e": 2, "4d": [7, 8, 9, 10, 13], "4t_": 9, "5": [1, 2, 3, 5, 8, 9, 10, 11, 13], "50": [2, 9, 10, 13], "500": [1, 2, 13], "50022e": 2, "501": 2, "50543e": 2, "50657e": 2, "511": 2, "51it": 2, "521": 2, "52207e": 2, "52429e": 2, "531": 2, "53698e": 2, "53it": 2, "541": 2, "541e": 2, "54337e": 2, "550": 8, "551": 2, "55498e": 2, "55it": 2, "561": 2, "56388e": 2, "56474e": 2, "571": 2, "57261e": 2, "57283e": 2, "57it": 2, "581": 2, "585e": 2, "586e": 2, "58it": 2, "59013e": 2, "591": 2, "59109e": 2, "59966e": 2, "5e": 2, "5x": 1, "6": [1, 2, 3, 5, 8, 9, 11, 13], "60": [2, 5], "600": 2, "60981e": 2, "61": 5, "61075e": 2, "61240e": 2, "61242e": 2, "61309e": 2, "61325e": 2, "61336e": 2, "61385e": 2, "61499e": 2, "61517e": 2, "61720e": 2, "61750e": 2, "61994e": 2, "61it": 2, "62071e": 2, "62335e": 2, "623e": 2, "62405e": 2, "62742e": 2, "62744e": 2, "63068e": 2, "63137e": 2, "63197e": 2, "63463e": 2, "63569e": 2, "63735e": 2, "64": 9, "64026e": 2, "640e": 2, "640x480": 3, "64386e": 2, "64532e": 2, "64704e": 2, "649": 9, "65052e": 2, "65077e": 2, "65168e": 2, "65422e": 2, "65577e": 2, "65it": 2, "66082e": 2, "66137e": 2, "664": 9, "66716e": 2, "66it": 2, "67054e": 2, "67079e": 2, "67232e": 2, "67352e": 2, "67384e": 2, "67997e": 2, "67it": 2, "68040e": 2, "68219e": 2, "68679e": 2, "68758e": 2, "68907e": 2, "69476e": 2, "69482e": 2, "69it": 2, "7": [1, 2, 3, 5, 9, 11], "70": 2, "70092e": 2, "70229e": 2, "70464e": 2, "70800e": 2, "71005e": 2, "7142857142857": 8, "71802e": 2, "71921e": 2, "71it": 2, "72": 5, "72049e": 2, "72101e": 2, "72179e": 2, "72332e": 2, "72563e": 2, "72615e": 2, "72670e": 2, "72868e": 2, "729e": 2, "73": 5, "73288e": 2, "73406e": 3, "73452e": 2, "73717e": 2, "73899e": 3, "73it": 9, "741e": 2, "74572e": 2, "74it": 2, "75408e": 2, "75779e": 2, "75it": 2, "76": 9, "76756e": 2, "76913e": 2, "76it": 2, "77139e": 2, "77264e": 2, "77981e": 2, "77it": 2, "78304e": 2, "78978e": 2, "78987e": 2, "79025e": 2, "79907e": 2, "79it": 2, "8": [1, 2, 3, 5, 8, 9, 11, 12, 13], "80": 2, "8000": 4, "80535e": 2, "80774e": 2, "81077e": 2, "81582e": 2, "81it": 2, "82334e": 2, "82934e": 2, "82989e": 2, "82it": 2, "83": 9, "83032e": 2, "83402e": 2, "83683e": 2, "84": 5, "84176e": 2, "84288e": 2, "84852e": 2, "85": 5, "85316e": 2, "85375e": 2, "85860e": 2, "85910e": 2, "86154e": 2, "86310e": 2, "86725e": 2, "86727e": 2, "86it": 2, "87": 9, "870e": 2, "87113e": 2, "87469e": 2, "87680e": 2, "87794e": 2, "87831e": 2, "87980e": 2, "87981e": 2, "88090e": 2, "88125e": 2, "88269e": 2, "88357e": 2, "88411e": 2, "88549e": 2, "88601e": 2, "88683e": 2, "88814e": 2, "88821e": 2, "88941e": 2, "89019e": 2, "89064e": 2, "89066e": 2, "89173e": 2, "89183e": 2, "89196e": 2, "89297e": 2, "89309e": 2, "89352e": 2, "89410e": 2, "89449e": 2, "89491e": 2, "89518e": 2, "89616e": 2, "89620e": 2, "89717e": 2, "89729e": 2, "89806e": 2, "89828e": 2, "8986": 11, "89888e": 2, "89914e": 2, "89963e": 2, "89990e": 2, "89it": 2, "9": [1, 2, 3, 5, 8, 9], "90": 2, "90028e": 2, "90055e": 2, "90085e": 2, "90110e": 2, "90133e": 2, "90155e": 2, "90171e": 2, "90190e": 2, "90201e": 2, "90215e": 2, "90222e": 2, "90230e": 2, "90233e": 2, "90236e": 2, "90it": 2, "91it": 2, "92132e": 2, "92211e": 2, "9225": 9, "92725e": 2, "928e": 2, "938e": 2, "95136e": 2, "95365e": 2, "953e": 2, "95it": 2, "96": 5, "96080e": 2, "969e": 2, "96it": 2, "97": 5, "9780898719277": 9, "98001e": 2, "98493e": 2, "986e": 2, "98831e": 2, "99": [5, 9], "9ntwu9megq": 6, "A": [3, 5, 6, 7, 8, 9, 10, 11, 12], "AND": 13, "AS": [1, 2, 3, 4, 13], "And": 1, "As": [1, 9], "At": 1, "BE": 13, "BUT": 13, "BY": 13, "But": 2, "By": [8, 9], "FOR": 13, "For": [1, 3, 4, 5, 6, 8, 9, 10, 11, 13], "IF": 13, "IN": 13, "If": [1, 5, 6, 8, 9, 10, 11, 12, 13], "In": [1, 5, 7, 8, 9, 10, 11, 13], "It": [1, 4, 5, 7, 9, 10, 11, 12], "NO": 13, "NOT": 13, "No": [1, 4, 12], "OF": [1, 2, 3, 4, 13], "ON": 13, "OR": [1, 2, 3, 4, 13], "Of": 6, "On": [3, 9], "One": [1, 2, 9, 13], "Or": 11, "SUCH": 13, "THE": 13, "TO": 13, "The": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "Then": 9, "There": [5, 9], "These": [1, 8, 11], "To": [1, 4, 7, 8, 9, 11, 13], "Will": [5, 13], "With": [7, 9, 11], "_": [2, 4, 7, 9, 10], "_1": 9, "_2": [2, 3, 9], "__": 9, "__array_priority__": 9, "__call__": [2, 9, 10], "__delattr__": 9, "__dir__": 9, "__eq__": 9, "__format__": 9, "__ge__": 9, "__getattribute__": 9, "__getitem__": 9, "__getstate__": 9, "__gt__": 9, "__hash__": 9, "__iadd__": 9, "__idiv__": 9, "__imul__": 9, "__init__": [2, 9, 10], "__init_subclass__": 9, "__isub__": 9, "__iter__": 9, "__itruediv__": 9, "__le__": 9, "__lt__": 9, "__mul__": 9, "__ne__": 9, "__neg__": 9, "__new__": 9, "__next__": 9, "__radd__": 9, "__rdiv__": 9, "__reduce__": 9, "__reduce_ex__": 9, "__repr__": 9, "__rmul__": [9, 10], "__rpow__": 9, "__rsub__": 9, "__rtruediv__": 9, "__setattr__": [5, 9], "__sizeof__": 9, "__str__": 9, "__subclasscheck__": 9, "__subclasshook__": 9, "__version__": 3, "__weakref__": 9, "_as_gen": 13, "_dual": [9, 10], "_gradient": 9, "_k": 9, "_mean": 2, "_method": 2, "_novalu": 2, "_po_class": 4, "_pre_filt": 4, "_process_chunk": 4, "_setup_po_for_chunk": 4, "_slices_per_chunk": 4, "_tqdmtext": 9, "a_": 9, "a_partit": [5, 9], "a_subset": 9, "ab": [2, 5, 9, 11], "abbab9": 11, "abc": 9, "abcmeta": 9, "abl": [5, 7, 9, 10], "abla": 9, "about": [8, 11], "about_original_data": 8, "abov": [1, 7, 9, 10, 13], "absolut": [2, 9, 11, 13], "absorpt": [2, 6], "absorptiontransmissionconvert": 11, "abspath": 8, "abstract": 9, "ac": 3, "ac1dd209cbcc5e5d1c6e28598e8cbbe8": 9, "acceler": [7, 9, 11], "accept": [4, 5, 8, 9, 11], "access": [1, 4, 9], "accord": 5, "accordingli": 9, "account": 1, "accumul": 5, "accur": [9, 12], "accuraci": 11, "achiev": [7, 9, 11], "acquir": [7, 9], "acquisit": [1, 5, 6, 7, 8, 9, 10, 12, 13], "acquisition_data": 1, "acquisition_geometri": [2, 4, 8, 10, 13], "acquisitiondata": [1, 6, 7, 9, 11, 12, 13], "acquisitiondataset": 11, "acquisitiondimens": [5, 6], "acquisitiongeomerti": 5, "acquisitiongeometri": [6, 7, 8, 9, 10, 11, 13], "acquisitiontyp": [4, 5, 6], "across": [10, 11], "act": [5, 9], "activ": 4, "actor": [7, 9], "actual": [4, 9], "ad": [9, 10], "ad1": 8, "adapt": [2, 9, 13], "adaptivesensit": 9, "add": [1, 4, 5, 9, 10, 13], "addit": [4, 5, 9, 11, 12, 13], "adher": 4, "adjoint": [4, 9, 10], "adjoint_weight": 10, "adjust": 8, "admm": 9, "advanc": [4, 7, 9], "advis": 13, "affect": 9, "after": [3, 9, 11, 13], "ag": [1, 5, 9, 10], "ag1": 8, "again": 9, "against": 13, "agre": [1, 2, 3, 4], "ahn": 9, "ai": 9, "aim": 6, "al": [3, 6, 9, 11], "alg": 9, "algebr": [5, 9], "algebra": [5, 9, 12], "algo": [2, 9], "algo1": 2, "algo2": 2, "algorithm": [1, 2, 3, 6, 7, 10, 11, 12], "alia": [5, 8, 9, 13], "alias": 11, "align": [1, 5, 9, 11], "all": [4, 5, 8, 9, 10, 11, 12, 13], "alloc": [2, 3, 4, 5, 9, 12], "allow": [2, 5, 7, 8, 9, 10, 11, 12, 13], "almost": 9, "alon": 13, "along": [1, 5, 8, 9, 11, 13], "alpha": [2, 7, 9, 10, 11], "alpha_k": 9, "alpha_kg_k": 9, "alphabet": 8, "alreadi": [1, 9], "also": [1, 3, 4, 6, 7, 8, 9, 11], "alter": 11, "altern": [4, 8, 9, 11], "although": [3, 9], "alwai": [8, 9], "amelior": 9, "ametova": 9, "amir": 9, "amount": [1, 7, 9, 13], "an": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "analysi": 9, "analyt": [6, 9], "ang_tol": 11, "angl": [1, 2, 5, 8, 10, 11], "angle_data": 5, "angle_unit": [1, 5, 10], "angleunit": [5, 6, 10], "angular": [1, 5, 10, 11], "ani": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13], "anisotrop": [9, 10], "anoth": 9, "anti": 1, "antonin": 9, "aop": [3, 9], "apach": [1, 2, 3, 4], "apart": 11, "api": 13, "appear": 11, "append": [2, 9], "appli": [5, 7, 8, 9, 10, 11, 12, 13], "applic": [1, 2, 3, 4, 9], "apply_circular_mask": 5, "appropri": [4, 5, 9, 10], "approxim": [3, 6, 8, 10], "approximate_gradi": 9, "approximategradientsumfunct": 9, "aquisitiondata": 5, "ar": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13], "arbitrari": [2, 9], "archiv": 9, "area": [9, 10, 12], "arg": [4, 5, 9, 13], "argmin": [7, 9, 10], "argument": [1, 4, 5, 9, 13], "aris": 13, "armijio": 9, "armijo": 9, "armijostepsizerul": 9, "around": 9, "arrai": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13], "arrang": [7, 8], "arridg": 9, "artefact": [5, 11], "articl": [6, 10, 11], "artifact": 11, "arxiv": 9, "as_arrai": [2, 3, 5], "asarrai": 2, "ascent": 9, "aspect": 13, "assembli": 7, "assign": 11, "associ": 1, "assum": [9, 11, 13], "assumpt": 11, "astra": [5, 6, 7, 9, 11, 12], "astyp": 2, "asymmetr": 11, "asymptot": 9, "asyncio": 9, "atik": 3, "atol": 9, "attenu": 11, "attribut": [5, 7, 8, 11], "au": 9, "augment": 9, "author": [1, 2, 3, 4, 13], "auto": 9, "automat": 9, "avail": [5, 9], "averag": [8, 9, 11], "avinash": 9, "avoid": [9, 11], "ax": [2, 3, 5, 8, 9, 11], "axi": [1, 2, 5, 8, 11, 13], "axis_0": 8, "axis_1": 8, "axis_2": 8, "axis_label": [8, 13], "axis_labels_1": 8, "axis_labels_2": 8, "axis_nam": 11, "axis_name1": 11, "axis_name2": 11, "axpbi": [5, 9], "azimuth": 13, "b": [2, 3, 4, 5, 7, 9, 10], "b_": 9, "b_i": 9, "b_subset": 9, "bach": 9, "back": [7, 8, 10, 12, 13], "backend": [2, 9, 11, 12], "background": 9, "backproject": [9, 12], "backtrack": 9, "backward": [5, 8, 9, 10], "backward_project": 10, "bar": 9, "barzilai": 9, "barzilaiborweinstepsizerul": 9, "base": [1, 4, 5, 6, 7, 11, 12, 13], "basi": [1, 2, 3, 4], "basic": [3, 5, 6, 8, 9], "basicconfig": 11, "batch": [5, 9], "bb": 9, "bdc": 5, "bdc1": [5, 9], "bdc2": [5, 9], "beam": [5, 6, 10, 11, 13], "becaus": [9, 13], "beck": 9, "becom": 9, "been": [1, 3, 8, 9, 10, 11], "beer": 11, "befor": [8, 9, 11, 13], "begin": [3, 4, 7, 9, 11], "behav": [5, 9], "behaviour": [3, 6, 8, 9, 11, 13], "behind": 9, "being": [6, 9, 11, 13], "below": [1, 3, 6, 7, 9, 11, 13], "benefit": 9, "berlin": 12, "best": [5, 9, 10, 11], "beta": [9, 11], "betck": 9, "better": [7, 9], "between": [2, 5, 7, 9, 10, 11, 12, 13], "beyond": [7, 13], "bi": 9, "bibian": 9, "big": 9, "bih17925": 2, "biject": 9, "bill": 3, "bin": [8, 11], "binari": [2, 5, 8, 13], "binary_oper": [5, 9], "binner": 6, "binom": [7, 9], "biologi": 9, "biorthogon": 9, "bit": 8, "black": 9, "blob": 8, "block": [3, 5, 6], "blockdatacontain": [3, 6, 7, 13], "blockfunct": [6, 7, 9], "blockgeometri": [6, 7, 9, 10], "blockoper": [3, 5, 6, 7, 9, 10], "blur": 11, "bmatrix": 9, "bn": 3, "bnd_cond": 9, "boat": 13, "bodi": 9, "book": 9, "bool": [2, 8, 9, 11, 13], "boolean": [5, 9, 10, 11, 12, 13], "boolian": 5, "bop": 3, "border": 11, "borwein": 9, "borwein_method": 9, "both": [1, 5, 6, 7, 9, 11], "bottom": [1, 2, 4, 5], "bottom_psnr": 2, "bound": [2, 9], "boundari": [3, 5, 9, 11], "box": [3, 6, 13], "broadcast": 10, "brows": 8, "brusaferri": 9, "btik": 3, "build": [5, 6, 7, 9], "built": [2, 9], "burca": 9, "burdakov": 9, "burger": 9, "busi": [9, 13], "buzug": 12, "byod": 3, "bypass": 5, "byte": 9, "c": [3, 4, 5, 8, 9, 10, 11, 13], "cach": 9, "calcul": [5, 6, 8, 9, 10, 11, 13], "calculate_lipschitz": 9, "calculate_norm": 9, "call": [4, 7, 8, 9, 10, 11, 12], "callabl": 9, "callback": 6, "callback_head": 2, "callback_iter": 2, "cambridg": 3, "camera": 13, "can": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "cannot": 13, "canon": 9, "cap": 4, "capabl": 10, "care": 13, "carola": 9, "cartesian": 9, "case": [3, 5, 8, 9, 11, 13], "cast": 5, "caus": [3, 11, 13], "cc": 9, "ccpi": [3, 6, 8], "ccpi_regularis": 10, "cd": 4, "cdot": 9, "ceil": [4, 9], "center": [1, 7, 9, 11, 13], "center_i": [1, 5], "center_x": [1, 5], "center_z": [1, 5], "centered_at": 9, "centr": [1, 2, 5, 6, 9, 13], "central": 11, "centreofrotationcorrector": 11, "cern": 10, "certain": 9, "cgl": [3, 6, 7], "cglsb": 3, "cglsearlystop": 9, "chambol": 9, "chan": 9, "chang": [1, 4, 8, 9, 10, 13], "channel": [1, 5, 6, 9, 10, 11, 13], "channel_label": 5, "channel_spac": 1, "channelwis": 9, "channelwiseoper": 9, "chapter": 9, "characterist": 7, "cheaper": 9, "check": [3, 5, 8, 9], "check_converg": 9, "check_input": [5, 10], "child": 9, "choic": 9, "choos": [3, 5, 9], "chose": 9, "chosen": [9, 11], "chunk": [4, 8, 12], "ci": 4, "cil": [5, 7, 8, 9, 11, 12, 13], "cil_log_level": 11, "cil_testing2": 2, "circ": 9, "circular": [1, 5, 7, 9, 10, 12], "clair": 9, "class": [2, 4, 5, 6, 8, 10, 11, 12, 13], "classmethod": 13, "clear": 9, "clearer": 1, "clearli": 4, "clip": 13, "clockwis": 1, "clone": [4, 5, 9], "close": [4, 9], "closest": 11, "cm": 11, "cmake": 4, "cmap": [2, 13], "co": 11, "coarsest": 9, "code": [1, 2, 3, 4, 6, 8, 9, 10, 13], "coeffici": [9, 11], "coincid": 11, "col": 9, "colleagu": 11, "collect": [5, 6, 9], "collim": [1, 7], "color": 13, "colorbar": 13, "colormap": 13, "colour": [2, 13], "column": [5, 8, 9, 13], "column_wise_compat": 9, "com": [4, 9], "combett": 9, "comment": 4, "common": [1, 7, 9], "commonli": [1, 5, 9], "commut": [5, 9], "compar": [2, 3, 9, 13], "comparison": [9, 13], "compat": [5, 8, 9, 10, 12], "complex": [5, 6, 9, 11], "complex128": 5, "compli": 4, "complianc": [1, 2, 3, 4], "compon": [1, 9, 11, 12], "compos": 9, "composed_with_adjoint": 9, "composit": 6, "compositionoper": 9, "compress": 8, "compressed_data": 8, "compris": [7, 9], "comput": [2, 9, 10, 11, 12], "computation": 9, "compute_preconditioner_matrix": 9, "computed_metr": 2, "computer": 9, "concret": 9, "conda": 4, "conda_prefix": 4, "condit": [1, 2, 3, 4, 9, 13], "condition": 9, "cone": [5, 6, 10, 11, 13], "cone2d": 6, "cone3d": 6, "cone_2d_geometri": 1, "cone_3d_geometri": 1, "confer": 9, "config": [1, 4, 8], "configpars": 8, "configur": [1, 4, 6, 8, 9, 10, 11, 12], "conjug": [5, 9, 10], "consecut": 9, "consequenti": 13, "consid": [2, 3, 5, 6, 7, 9, 13], "consist": [5, 9], "constant": [9, 10, 11], "constant_valu": 11, "constantfunct": 9, "constantsteps": 9, "constrain": 9, "constraint": [9, 10], "construct": [6, 8, 9, 12], "contain": [1, 2, 4, 6, 7, 8, 9, 11, 12, 13], "content": [8, 9], "continu": 9, "contract": 13, "contrast": 11, "contribut": [6, 9, 11], "contributor": [2, 13], "control": [1, 4, 9, 12], "convent": [6, 7, 9], "converg": 9, "convers": 11, "convert": [3, 4, 6, 13], "convex": [9, 10], "convex_conjug": [9, 10], "convolut": 9, "coordin": [1, 13], "cooridin": 1, "copi": [1, 2, 3, 4, 5, 9], "copyright": [1, 2, 3, 4, 13], "core": [2, 3, 4, 6, 7, 9], "correct": [1, 5, 9, 11, 12], "corrector": 6, "correl": [9, 11], "correlation_spac": 9, "correspond": [5, 8, 9, 11, 13], "corrupt": [2, 13], "cosin": 12, "cost": 9, "costli": 9, "could": [1, 2, 5, 9], "counter_offset": 8, "cours": 9, "courtesi": 8, "cpu": [5, 9, 10], "creat": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13], "create_cone2d": [1, 5, 10], "create_cone3d": [1, 5, 10], "create_local_env_for_cil_development_test": 4, "create_parallel2d": [1, 5], "create_parallel3d": [1, 5], "creation": 9, "creator": [6, 10], "criteria": [9, 11], "criterion": [2, 3, 9, 10], "crop": [8, 11], "cross": 11, "ct": [1, 5, 6, 11, 12], "cubic": 11, "cuda": 10, "current": [4, 5, 9], "custom": [6, 9, 12], "custom_list": 9, "customis": [10, 12], "cut": [2, 12], "cutoff": 12, "cw": 9, "d": [5, 9, 11], "d_": 9, "dai": 9, "damag": 13, "damp": 11, "dark": 11, "dark_field": 11, "data": [1, 3, 6, 8, 9, 10, 12], "data_bin": 11, "data_block": 3, "data_centr": 11, "data_channel0": 13, "data_channel1": 13, "data_dir": 13, "data_pad": 11, "data_partit": 5, "data_pass": 9, "data_passes_indic": 9, "data_rang": [2, 13], "data_sl": 11, "data_typ": 8, "datacontain": [2, 6, 8, 9, 10, 11, 13], "datacontainer0": 5, "datacontainer1": 5, "datadiscrepancycallback": 2, "dataexampl": [2, 5, 9, 12, 13], "dataprocessor": 6, "dataset": [1, 4, 5, 6, 7, 8, 10, 11, 12], "date": 6, "davi": 12, "db1": 11, "db10": 11, "db35": 11, "dc": [5, 12], "dc1": [2, 13], "dc2": [2, 13], "dcmake_install_prefix": 4, "dd": 11, "deal": 9, "dealloc": 9, "deblur": 9, "debug": [9, 11], "dec": 9, "decai": 3, "decnum": 11, "decompos": 9, "decomposit": [3, 9, 11], "deduc": 9, "deep": 9, "deep_copi": 5, "def": [2, 4, 9], "default": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13], "defazio": 9, "defin": [5, 6, 7, 8, 9, 10, 11, 13], "definit": [4, 7, 9, 10], "degre": [1, 5, 10, 11, 13], "delattr": 9, "delplanck": 9, "delta": [9, 11], "delta_dark": 11, "delta_flat": 11, "demo": [4, 7, 9], "demonstr": [3, 6, 9], "denois": 9, "denot": 9, "dens": 9, "dep": 4, "depend": [4, 5, 7, 8, 9, 11], "deprec": [5, 9], "depth": 8, "deriv": [3, 9, 13], "deriv2": 6, "descent": 6, "describ": [1, 5, 7, 8, 9, 10, 11], "descript": [1, 7, 10, 11, 12], "design": [7, 9], "desir": [3, 9, 11], "desiri": 11, "dest_sel": 8, "destin": 8, "detail": [5, 6, 9, 11], "detect": 11, "detector": [1, 5, 7, 8, 11, 12], "detector_direction_i": [1, 5], "detector_direction_x": [1, 5], "detector_i": 5, "detector_posit": [1, 5], "detector_x": 5, "determin": [5, 9, 10, 11], "determinist": 6, "devaiat": 11, "devel": 6, "develop": [3, 6, 7, 9], "deviat": [2, 11, 13], "devic": [2, 5, 9, 10], "df": 11, "diag": 9, "diagon": 9, "diagonaloper": 9, "diamond": [1, 6], "dict": [8, 9, 11], "dictionari": [2, 5, 8, 11], "differ": [2, 6, 7, 9, 10, 11, 13], "differenti": 9, "digaonaloper": 9, "dim2": [4, 5], "dim3": 5, "dimens": [1, 2, 4, 5, 8, 9, 10, 11, 13], "dimension": [2, 3, 9, 13], "dimension_label": [5, 9, 11], "dir": 9, "direct": [1, 2, 5, 8, 9, 10, 13], "direct_method": 10, "direct_onli": 9, "direction0": 13, "direction1": 13, "directli": [1, 5, 8, 9, 11], "directori": [8, 13], "dirhtml": 4, "discard": [9, 11], "disclaim": 13, "discord": 6, "discrep": 6, "discret": [3, 9], "discretis": 3, "disk": 8, "displai": [1, 2, 6, 7], "disretis": 3, "distanc": [1, 5, 7, 9, 11, 13], "distribut": [1, 2, 3, 4, 9, 13], "divid": [1, 2, 4, 5, 9, 11], "divis": [5, 9, 11], "dl": 13, "dn": 11, "do": [3, 8, 9], "doc": [4, 8, 9, 11], "docs_environ": 4, "docstr": 6, "document": [9, 10, 13], "doe": [4, 5, 9, 10, 11, 13], "doi": [6, 9, 11], "domain": [9, 12, 13], "domain_geometri": [3, 9], "domain_init": 9, "domin": 9, "don": 9, "done": [5, 9], "dot": [5, 9], "dot_test": 9, "doubl": [1, 11], "down": 13, "download": 4, "downsampl": [9, 11], "draw": 9, "drawn": 9, "dset_path": 8, "dt": 3, "dtu": 11, "dtype": [2, 5, 8, 9, 10, 13], "dual": [1, 9], "dualiti": 9, "due": [9, 11], "duff": 3, "dure": [4, 5, 9], "dwt": 9, "dynam": [2, 6, 9, 13], "e": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13], "each": [1, 4, 5, 6, 8, 9, 11, 13], "earli": [3, 6, 9], "earlier": 10, "earlystop": [2, 9], "eas": 9, "easiest": 4, "easili": 9, "ed": 9, "ede7e2b6d13a41ddf9f4bdef84fdc737": 9, "edg": [5, 9, 11], "edit": 3, "edoardo": [1, 9], "edu": 9, "effect": [9, 11], "effici": [9, 11], "effort": [9, 11], "ehrhardt": 9, "eigenvalu": 9, "eigenvector": 9, "either": [1, 2, 3, 4, 7, 9, 11, 13], "element": [5, 8, 9, 11], "elev": 13, "elif": 4, "ell": 9, "els": [2, 4, 10], "email": 4, "embed": 4, "emiss": 9, "emit": [1, 7], "emploi": 6, "empti": [1, 2, 5, 9], "en": [4, 9], "enabl": [6, 11], "enclos": 4, "encount": 2, "end": [3, 4, 7, 8, 9, 11], "end_valu": 11, "endors": 13, "energi": 11, "energy_unit": 11, "enforc": [6, 9, 10], "engin": 9, "enough": 6, "ensur": [1, 9, 11], "entri": [8, 9], "env": [2, 4], "environ": 4, "environment_nam": 4, "ep": 3, "epsilon": 9, "epsrc": 3, "epub": 9, "eq": [9, 12], "eqnarrai": 9, "equal": [1, 5, 9, 10, 13], "equat": [3, 9], "equival": [7, 8, 9], "erfcinv": 11, "erni": 9, "error": [2, 3, 5, 11, 13], "essenti": 4, "esser": 9, "estim": [2, 9, 11], "estimate_normalised_error": 11, "estimate_sigma": 2, "et": [3, 6, 9, 11], "eta": [9, 10], "etc": 9, "euclidean": [5, 9], "ev": 11, "eval": 8, "evalu": [2, 9, 10, 13], "evangelo": 9, "evelina": 9, "even": [5, 9, 13], "event": [3, 9, 13], "everi": [2, 9, 11, 13], "everyth": 8, "evolv": 4, "exact": [3, 8, 9], "exactli": 9, "exampl": [1, 3, 10, 11, 12, 13], "except": [1, 2, 3, 4, 9], "excess": 4, "exclud": 1, "exclus": [11, 13], "execut": 9, "exemplari": 13, "exist": 9, "exp": 5, "expect": [3, 5, 9, 11], "expens": 9, "explicit": 9, "explicitli": 13, "expon": 11, "expos": 13, "express": [1, 2, 3, 4, 5, 7, 9, 13], "ext": 9, "extend": [9, 11, 13], "extens": [1, 4, 8, 9], "extern": 4, "extract": [2, 8, 13], "extrapol": 11, "ey": 3, "f": [2, 4, 7, 9, 10, 11], "f1": 9, "f2": 9, "f_": 9, "f_0": 9, "f_1": 9, "f_i": 9, "f_n": [9, 11], "fact": [5, 8, 9], "factor": [2, 7, 8, 9, 11, 13], "fail": [5, 9], "fals": [2, 4, 5, 8, 9, 10, 11, 12, 13], "fan": 6, "fanbeam": 6, "fardel": [1, 9], "fashion": 9, "fast": [9, 10], "faster": 9, "favour": 4, "fbp": [2, 4, 5, 6, 7, 11], "fdk": [2, 6, 7, 10, 11], "fdk_cuda": 10, "feldkamp": 12, "fft": [2, 12], "fft_order": 12, "fgp": [9, 10], "fgp_dtv": 10, "fgp_tv": 10, "fidel": [7, 9], "field": [1, 4, 7, 11], "figsiz": 13, "figur": [3, 13], "file": [1, 2, 3, 4, 6, 7, 9], "file_nam": 8, "filedescriptororpath": 9, "filenam": [8, 13], "fill": [2, 4, 5, 8, 9, 10, 11, 12], "filltyp": [5, 6], "filt": 11, "filter": [2, 7, 10, 11, 12], "filter_inplac": [2, 4], "filter_typ": 11, "filtered_imag": 11, "final": 9, "find": [4, 9, 11], "fine": 11, "finit": 9, "finitedifferenceoper": 9, "first": [1, 3, 5, 7, 8, 9, 10, 11, 13], "firstli": [6, 9], "fista": [2, 6], "fista_lower_bound": 2, "fista_no_lower_bound": 2, "fista_tv_alpha_01": 2, "fista_tv_alpha_1": 2, "fit": [5, 9, 11, 13], "fix": 9, "fix_rang": [2, 13], "flag": [9, 11], "flat": 11, "flat_field": 11, "flatten": [9, 11], "flip": 8, "fliplr": 8, "float": [3, 5, 8, 9, 10, 11, 12, 13], "float32": [2, 5, 8, 9, 10], "float64": 5, "fname": 8, "folder": [4, 8], "follow": [4, 5, 8, 9, 11, 12, 13], "fontsiz": 13, "forc": 5, "fork": 11, "form": [7, 9, 11, 12, 13], "format": [2, 4, 7], "format_spec": 9, "formatt": 9, "formul": [3, 6, 9], "formula": 9, "forth": 9, "forward": [3, 9, 10], "forward_project": 10, "found": [6, 9, 11, 13], "fourier": [11, 12], "frac": [7, 9, 10, 11], "frame": 5, "framework": [1, 2, 3, 6, 8], "fredholm": 3, "free": 3, "freez": 9, "frequenc": [2, 9, 12], "frequency_cutoff": 12, "fresnel": 11, "from": [1, 2, 5, 6, 7, 8, 9, 10, 12], "from_funct": 9, "fromfil": 8, "fromnumer": 2, "frozen": 9, "full": [1, 4, 7, 8, 9, 11, 12], "full_gradi": 9, "full_matric": 3, "full_retriev": 11, "fulli": [1, 4, 8], "function": [2, 3, 5, 6, 7, 8, 11, 12, 13], "function_num": 9, "function_numb": 9, "fundament": 9, "further": [4, 6, 9, 10, 12], "futher": 12, "futur": [3, 9], "g": [2, 4, 5, 6, 7, 8, 9, 10, 11, 13], "g1": 10, "g2": 10, "g_": 9, "g_i": 9, "g_k": 9, "galerkin": 3, "galleri": 6, "gamma": [9, 10], "gamma_fconj": 9, "gamma_g": 9, "gantri": 7, "gap": [9, 11], "gaussian": 13, "gd": 6, "ge": 9, "gemma": [1, 9], "gener": [4, 5, 6, 8, 9, 10, 13], "generalis": [9, 10, 11], "generalised_paganin_method": 11, "geometr": 10, "geometri": [2, 4, 6, 8, 9, 10, 11], "geometry_bin": 11, "geometry_sl": 11, "geq": 3, "geq1": 9, "geq2": 9, "get": [2, 5, 8, 9, 11, 12, 13], "get_as_list": 9, "get_data_axes_ord": 5, "get_data_offset": 8, "get_data_scal": 8, "get_dataset_metadata": 8, "get_dimension_axi": 5, "get_filter_arrai": 12, "get_geometri": 8, "get_imagedata": [6, 10], "get_imagegeometri": [1, 4, 5, 9, 10], "get_input": 5, "get_item": [5, 9], "get_last_loss": 9, "get_last_object": 9, "get_metadata": 8, "get_norms_as_list": 9, "get_ouput": 11, "get_output": [2, 5, 9, 10, 11], "get_output_shap": 9, "get_roi": 8, "get_sampl": 9, "get_slic": [2, 5, 9, 13], "get_step_s": 9, "getattr": [2, 9], "getdb2": 11, "getlogg": 11, "gg": 6, "git": 4, "github": [3, 4, 6, 9], "give": [1, 5, 7, 9, 11], "given": [1, 5, 9], "global": [2, 9, 13], "global_": 2, "global_ms": 2, "global_psnr": 2, "gm_domain": 9, "gm_rang": 9, "go": [4, 5, 7, 8], "goal": 7, "good": [9, 13], "gov": 11, "govern": [1, 2, 3, 4], "gpu": [2, 10], "gradient": [6, 10], "gradient_oper": 9, "gradient_upd": 9, "gradientoper": [2, 6], "grai": [2, 13], "grant": 3, "greater": [5, 9, 12], "greatli": [1, 7], "green": 3, "grid": 13, "ground": [2, 3, 13], "ground_truth": [2, 13], "group": [8, 9], "grow": 9, "gt": [1, 2, 3, 9], "guarante": 9, "guess": 9, "guid": [6, 9], "guidelin": 6, "guler": 9, "h": 9, "h_": 9, "ha": [1, 3, 4, 5, 7, 8, 9, 10, 11], "haar": [9, 11], "hackathon": 3, "hadamard": 9, "half": [1, 9, 11], "ham": 12, "hand": [1, 9], "handl": [2, 5, 6, 7, 12], "hann": 12, "hansen": 3, "happen": 5, "hard": 11, "hardwar": 12, "hasattr": 2, "hash": 9, "have": [1, 3, 4, 5, 7, 8, 9, 11, 12], "hc": 11, "hdf5": 6, "hdf5_util": [6, 8], "hdl": 12, "header": 9, "height": 13, "held": [5, 9], "help": [4, 11], "helper": 9, "henc": 9, "henk": 11, "here": [1, 4, 9], "hereof": 9, "herman": 9, "herman_mey": 9, "high": [6, 9], "higher": [12, 13], "highli": 12, "hold": [1, 5, 9, 11], "home": [2, 5, 8, 9, 10, 11, 12, 13], "hoop": 9, "horizont": [1, 2, 5, 8, 11], "horizontal_i": [1, 2, 5, 9, 11, 13], "horizontal_x": [1, 2, 5, 9, 11, 13], "horv\u00e1th": 9, "hospit": 3, "hotdog": 13, "how": [1, 3, 9], "howev": [1, 3, 8, 9, 13], "hstack": 3, "html": [3, 4, 8, 9, 11, 13], "http": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13], "huang": 9, "huge": 9, "hutton": 9, "hybrid": 9, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "i_": 11, "i_0": 8, "i_k": 9, "ib": 9, "id": [4, 9], "idea": 9, "ideal": 11, "ident": [3, 9], "identifi": [4, 11], "identityoper": [3, 9], "ie": 9, "ieee": 9, "ig": [1, 2, 3, 5, 9, 10], "ignor": [9, 10, 11], "ii": [6, 9], "ild": 9, "ill": 3, "illustr": 7, "ima": 9, "imag": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "image_geometri": [2, 4, 8, 10, 12, 13], "image_sharp": 11, "imagedata": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13], "imagedimens": [5, 6], "imagegeometri": [6, 7, 8, 9, 10, 11, 12, 13], "imagequalitycallback": 2, "imanum": 9, "img_qual_callback": 2, "implement": [3, 6, 9, 11], "impli": [1, 2, 3, 4, 13], "implic": 9, "implicitli": 3, "import": [1, 2, 3, 5, 8, 9, 10, 11, 12, 13], "impos": [7, 9], "improv": [3, 9], "in_plac": 5, "inbuilt": 3, "inch": 13, "incid": [7, 11], "incident": 13, "includ": [5, 9, 11, 13], "inclus": 11, "incorpar": 10, "incorpor": 9, "incorrect": 11, "increas": [9, 11, 12], "increment": 9, "independ": [1, 5, 8, 9], "index": [3, 5, 6, 8, 9, 11], "indic": [5, 6, 8, 11, 12], "indicatorbox": [2, 9], "indirect": 13, "individu": 9, "induc": 11, "industri": 9, "inequ": 9, "inexact": 9, "inf": [9, 11], "infin": 9, "infinit": 9, "influenc": [1, 7], "info": [8, 9, 10, 11], "inform": [4, 5, 6, 8, 9, 10, 11, 13], "infrastructur": 9, "infti": 9, "ingredi": 9, "inherit": [5, 9], "ini": 8, "inifnam": 8, "initi": [2, 8, 9, 11, 13], "initial_angl": 5, "initial_bin": 11, "initialis": [5, 8, 9, 11], "inlin": 9, "inner": [5, 9], "innov": [1, 2, 3, 4], "inpaintingand": 9, "inplac": 12, "input": [2, 4, 5, 6, 9, 10, 11, 12, 13], "insid": [5, 9], "instal": [4, 9, 10], "instanc": [1, 4, 5, 8, 9], "instanti": [5, 9], "instead": [3, 4, 9, 13], "institut": 3, "instruct": 4, "instrument": [1, 7, 11], "int": [4, 5, 8, 9, 10, 11, 12, 13], "int_0": 3, "integ": [5, 9, 10, 11, 13], "integr": 3, "intend": 9, "intens": 11, "interact": [6, 9], "interest": [1, 5, 6, 11], "interfac": 5, "intermedi": [9, 13], "intermediari": 9, "intern": [5, 8, 9], "interpol": [10, 11], "interpret": [9, 11, 12], "interrupt": 13, "intersect": 10, "interv": [3, 9, 13], "introduc": 9, "introduct": 6, "introductori": 9, "intuit": 13, "invalid": 2, "invers": [6, 9], "invert": 2, "investig": [3, 9], "invok": 9, "io": [3, 4, 7, 8, 9], "iop": [10, 11], "iopscienc": [10, 11], "ipynb": 4, "ipywidget": 13, "irrespect": 9, "is_compat": [5, 9], "is_fortran": 8, "is_linear": 9, "is_orthogon": 9, "is_provably_converg": 9, "is_virtu": 8, "isaac": 3, "isclos": 9, "isinst": 2, "islic": 6, "isotrop": [9, 10], "issubclass": 9, "ista": 6, "item": 2, "iter": [3, 6, 7, 9, 10, 13], "iteration_numb": 9, "ith": 9, "its": [4, 9, 13], "itself": [4, 5, 9], "j": [6, 9, 10, 11], "jakob": [3, 9], "jan": 9, "januari": 9, "jcm": 9, "jin": 9, "johnson": 9, "join": [2, 6], "jonathan": 9, "journal": 9, "json": 8, "julian": 9, "julien": 9, "jump": 9, "jun": 9, "jupyt": 13, "just": [3, 5, 9], "j\u00f8rgensen": [3, 6], "k": [3, 9, 10], "k_i": 9, "k_x": 11, "k_y": 11, "kak": 9, "katyusha": 9, "keep": [9, 13], "kei": [2, 4, 5, 8, 11], "kereta": 9, "kernel": 3, "keyward": 9, "keyword": [5, 9], "kind": [1, 2, 3, 4], "kinemat": 11, "kingdom": [1, 2, 3, 4], "kl_div": 9, "knowledg": [7, 9], "known": 9, "kotasidi": 9, "kovalev": 9, "kovalev20a": 9, "kress": 12, "kullback": 9, "kullbackleibl": 6, "kw": [5, 9], "kwarg": [4, 5, 10, 13], "kx": 9, "l": [3, 7, 9, 12], "l1": [6, 10], "l11": 6, "l1norm": 9, "l1sparsiti": 9, "l2": [6, 10], "l21": 6, "l2norm_": 9, "l2normsquar": 9, "l_": 9, "lab": [1, 7], "label": [1, 2, 3, 6, 8, 9, 13], "lacost": 9, "ladmm": 6, "lagrangian": 9, "lak": [2, 10, 12], "lambda": [2, 11], "lambert": 11, "laminograpi": 1, "lang": 4, "langl": [9, 10], "languag": [1, 2, 3, 4, 10], "larg": [5, 9], "larger": [2, 9], "largest": 9, "last": [9, 11], "latest": 9, "laura": 1, "law": [1, 2, 3, 4, 11], "layout": 8, "lb": 9, "lbl": 11, "le": 9, "lead": [8, 9, 11], "learn": 9, "least": [3, 5, 6, 7], "leastsquar": [2, 9], "lectur": 9, "left": [1, 5, 8, 9, 11, 13], "leftrightarrow": [9, 10], "legend": [2, 3, 13], "leibler": 9, "len": [2, 5, 9], "length": [5, 9, 12, 13], "leq": 9, "leq1": 9, "ler": 9, "less": [2, 9], "let": 9, "level": [2, 6, 8, 9, 11, 13], "liabil": 13, "liabl": 13, "lib": 2, "librari": [3, 4, 5, 6, 7, 9], "licens": [1, 2, 3, 4], "light": 6, "like": [1, 3, 7, 8, 9], "limit": [1, 2, 3, 4, 9, 10, 13], "linalg": 3, "line": [2, 8, 9, 13], "line2d": 2, "line_colour": 13, "line_styl": 13, "linear": [9, 11], "linear_ramp": 11, "linearoper": 9, "linestyl": 13, "link": [4, 6, 9], "link_islic": 6, "linspac": [3, 10], "lionheart": [3, 9], "lipschitz": 9, "lipshitz": 9, "list": [2, 5, 6, 8, 9, 11, 12, 13], "list_of_funct": 9, "literatur": 9, "lmax": 9, "ln": 11, "load": [6, 8, 13], "load_data": 8, "load_project": 8, "loader": 7, "local": [6, 11, 13], "local_var": 13, "localhost": 4, "localvar": 13, "locat": 5, "log": [2, 3, 4, 5, 9, 11, 12], "log0": 9, "log10": [2, 9], "log_2": 9, "log_fil": 9, "logan": 12, "logarithm": 11, "logfilecallback": 9, "loglog": 3, "long": [5, 9], "longer": [1, 9], "look": [3, 6, 8], "loop": [8, 9, 11], "loopless": 6, "loss": [9, 11, 13], "lossi": 8, "lot": 9, "low": 9, "low_val": 13, "lower": [2, 9, 10, 11, 13], "lstsq": 3, "lsvrg": 9, "lsvrgfunction": 9, "lt": [1, 2, 3], "lu": [7, 9], "lvert": 9, "m": [9, 11, 12, 13], "m2019": 9, "machin": [7, 9], "mad": 11, "made": [3, 9], "mae": [2, 6, 13], "magnif": [1, 7, 11], "magnitud": 9, "mai": [1, 2, 3, 4, 5, 6, 9, 11, 12, 13], "mail": 6, "main": [6, 7, 9], "mainli": [1, 7], "maintain": 13, "make": [1, 3, 4, 7, 9], "malcolm": 9, "manchest": [1, 2, 3, 4], "mani": 9, "manipul": [6, 7], "manual": [8, 13], "map": [2, 9, 13], "marc": 9, "march": 3, "margaret": 3, "markiewicz": 9, "martin": 9, "mask": [2, 5, 6, 9, 13], "masker": 11, "maskgener": 11, "maskoper": 9, "master": 2, "match": [3, 5, 9, 10], "materi": [11, 13], "math": [5, 9], "mathbb": 9, "mathbf": 9, "mathcal": [9, 11], "mathemat": [3, 6, 9], "mathrm": [7, 9, 10], "matlab": 3, "matplotlib": [2, 3, 12, 13], "matric": 9, "matrix": [3, 7, 9, 13], "matrixoper": [3, 9], "matter": 1, "matthia": 9, "max": [2, 3, 5, 9, 10, 13], "max_": 9, "max_iter": [3, 9, 10], "max_iteration_stop_criterion": 9, "max_quantil": 11, "max_val": 11, "maximis": 11, "maximum": [2, 5, 9, 10, 13], "mayer": 9, "mbox": [9, 10], "mean": [2, 5, 9, 10, 11, 13], "meaning": 9, "meant": 4, "measur": [7, 9, 11, 12], "med": 9, "media": 9, "median": 11, "medicin": 9, "member": [1, 4], "memori": [5, 6, 12], "merchant": 13, "mesh": 11, "messag": 11, "met": [9, 13], "meta": [1, 5], "metadata": [6, 8], "method": [1, 3, 5, 6, 7, 8, 10, 11, 12], "metric": 6, "metric_callback": 2, "metric_func": 2, "metric_list": 2, "metric_nam": 2, "metric_valu": 2, "metrics_dict": 2, "metrics_stor": 2, "metricsdiagnost": 2, "meyer": 9, "mic": 9, "midlin": 11, "mildli": 3, "min": [2, 5, 9, 13], "min_": 9, "min_intens": 11, "min_quantil": 11, "min_val": 11, "min_x": [3, 9], "mingqiang": 9, "miniconda3": 2, "minim": [8, 9], "minimis": 9, "minimium": 9, "minimum": [2, 5, 9, 10, 13], "minit": 9, "minmax": 13, "mirror": [9, 11], "misalign": 11, "miss": 11, "mix": 6, "mixedl11norm": 9, "mixedl21norm": 9, "mkdemo": 4, "mlr": 9, "mm": 11, "mo25": 9, "mo25_ch6": 9, "mode": [5, 8, 9, 11, 13], "model": [3, 9, 10], "modern": 12, "modif": 13, "modifi": [5, 9, 12], "modul": [5, 7, 9, 10, 11, 12], "modulu": 9, "moment": 9, "monitor": 9, "mop": 9, "mop_norm": 9, "more": [5, 6, 7, 8, 9, 11, 12, 13], "moreau": 9, "most": [1, 5, 9, 11], "mri": 9, "mse": [2, 6, 13], "mu": 11, "multi": [1, 6, 8, 9, 11, 13], "multichannel": [6, 9, 10], "multicontrast": 9, "multipl": [4, 5, 8, 9, 10, 11, 13], "multiplc": 9, "multipli": [5, 9, 11], "multiprocess": 9, "multiscal": 9, "murgatroyd": 1, "must": [2, 4, 5, 8, 9, 11, 12, 13], "mx1": 9, "my_data": 8, "my_sampling_funct": 9, "mycallback_fista_lower_bound": 2, "mycallback_fista_no_lower_bound": 2, "mycallback_fista_tv_alpha_01": 2, "mycallback_fista_tv_alpha_1": 2, "n": [3, 4, 9, 10, 11, 12, 13], "n_subset": 9, "n_x": 11, "n_xw": 11, "n_y": 11, "n_yw": 11, "nabla": 9, "nabla_x": 9, "nabla_xf_": 9, "name": [4, 5, 8, 9, 11, 13], "nan": 11, "nbsphinx": 4, "nbyte": 8, "ndarrai": [2, 5, 8, 9, 11, 12, 13], "ndim": [5, 8, 9, 10], "nearest": 11, "necessari": [1, 4, 5, 8], "need": [1, 4, 8, 9, 11, 13], "neg": [3, 8, 9, 10, 11, 12, 13], "neglig": 13, "neither": 13, "neq": 9, "nest": [5, 9, 13], "nesterov": 9, "net": 12, "neumann": 9, "neural": 9, "neurip": 9, "neutron": 11, "never": 9, "new": [2, 5, 6, 9, 11], "new_ord": 5, "newlin": 9, "newton": 3, "newtoninstitut": 3, "next": [5, 9, 11, 13], "nexu": [1, 6, 7], "nexusdataread": [6, 8], "nexusdatawrit": [6, 8], "nice": 9, "nightli": [3, 9], "nikon": [1, 6, 7], "nikondataread": [6, 8], "noced": 9, "nois": [3, 6, 9, 13], "noisi": [2, 3], "noisy_data": 9, "non": [4, 6, 9, 10], "none": [2, 3, 4, 5, 8, 9, 10, 11, 12, 13], "nonlinear": 3, "nonneg": 10, "nonzero": [2, 13], "nor": 13, "norm": [3, 5, 6, 10, 11], "norm2sq": 9, "normal": [5, 9], "normalis": [6, 8, 9], "notat": 9, "note": [6, 10, 11, 12, 13], "notebook": [1, 2, 3, 6, 7, 9], "noth": 9, "notic": [8, 9, 13], "notimpl": 9, "notimplementederror": 9, "nov": 9, "now": [1, 3, 7, 9, 10], "np": [2, 3, 4, 8, 9, 10], "nss": 9, "num_batch": 5, "num_channel": [1, 5], "num_chunk": 4, "num_col": [2, 13], "num_indic": 9, "num_model": 10, "num_pixel": [1, 5], "num_pixels_h": 5, "num_pixels_v": 5, "num_sampl": 9, "num_thread": [5, 9], "numba": 9, "number": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13], "number_of_dimens": 5, "numer": [3, 5, 9], "numericaloptim": 9, "numpi": [2, 3, 5, 8, 9, 11, 12, 13], "numpy_vers": 4, "numpydoc": 4, "nx": 8, "nx1": 9, "ny": 9, "o": [3, 8, 9], "o_": 9, "object": [1, 2, 3, 5, 6, 7, 8, 9, 11], "objective_funct": 9, "objective_to_dict": 9, "objective_to_str": 9, "observ": 3, "obtain": [1, 2, 3, 4, 8], "occur": 13, "odd": 3, "oe": [10, 11], "off": [2, 9, 12], "offset": [4, 5, 6, 8, 10, 11, 12], "often": [4, 9], "old": 9, "omega": 9, "onc": 9, "one": [2, 3, 5, 6, 7, 9, 11, 13], "ones": [8, 9], "onli": [2, 4, 5, 8, 9, 10, 11, 12, 13], "onto": [1, 7, 9, 11], "op": [3, 9], "op0": 9, "op1": 9, "op2": 9, "open": [4, 9], "oper": [2, 3, 4, 5, 6, 7, 11, 13], "operator1": 9, "operator2": 9, "operator_block": 3, "operatorcompositionfunct": 9, "optical_const": 11, "optim": [6, 9], "optimis": [2, 3, 5, 6, 7, 10, 12], "option": [2, 4, 5, 8, 9, 10, 11, 12, 13], "orbit": 12, "order": [1, 2, 5, 8, 9, 11, 12, 13], "ordin": [8, 11], "org": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13], "orient": [1, 4, 6, 9], "origin": [1, 2, 4, 5, 8, 9, 13], "original_data": 8, "orthogon": 9, "orthonorm": 3, "ortogon": 1, "osman": 9, "other": [5, 6, 9, 11, 13], "otherwis": [5, 9, 11, 13], "otim": 9, "our": [1, 3, 5, 6, 7, 9], "out": [4, 5, 8, 9, 10, 11, 12, 13], "outcom": 9, "outer": [9, 13], "outlier": 11, "output": [4, 5, 6, 8, 9, 11, 12, 13], "outsid": [5, 11, 12, 13], "over": [1, 5, 9, 11], "overfit": 2, "overrid": 9, "overridden": 9, "override_filt": 11, "override_geometri": 11, "overset": 9, "overwritten": 9, "own": [1, 4], "owner": 4, "p": [3, 4, 9, 11, 13], "p_i": 9, "pack": 8, "packag": [2, 4, 6, 9], "pad": [1, 9, 11], "pad_valu": 11, "pad_width": 11, "padder": 6, "paganin": 6, "paganin_method": 11, "paganinprocessor": 11, "page": [6, 8], "pair": [9, 13], "panel": [1, 4, 5, 11], "paper": [6, 9], "paper_fil": 9, "papoutselli": [6, 9], "parallel": [5, 6, 10, 11, 13], "parallel2d": 6, "parallel3d": 6, "parallel_2d_geometri": 1, "parallel_3d_geometri": 1, "param": [5, 9, 13], "paramet": [1, 2, 4, 5, 7, 10, 11, 12, 13], "paraxi": 11, "parent": [5, 9], "pars": 8, "part": [2, 3, 5, 6, 9, 10, 11], "partial_": 9, "partial_i": 9, "partial_x": 9, "particular": [9, 13], "partit": [5, 9], "partition": 6, "partitioned_data": 9, "pasca": [1, 9], "pass": [1, 4, 5, 9, 10, 11, 12, 13], "path": [8, 13], "patrick": 9, "pattern": 9, "pawel": 9, "pbar": 4, "pd3o": 6, "pdf": 9, "pdhg": 6, "peak": [2, 13], "penal": 9, "penalis": 9, "pepper": 13, "per": [9, 13], "percent": 13, "percentag": 5, "perfect": 9, "perfectli": 1, "perform": [5, 9, 11], "period": 9, "permiss": [1, 2, 3, 4, 13], "permit": 13, "permut": 5, "pet": 9, "peter": 9, "phantom": 10, "phase": 11, "phase_retrieved_imag": 11, "phil": 6, "philip": 9, "philosoph": [3, 9], "photon": [11, 12], "physic": [1, 9], "pi": [10, 11, 12], "pi_": 9, "pickl": 9, "pixel": [1, 5, 7, 8, 10, 11, 12, 13], "pixel_num_v": 4, "pixel_s": [1, 5, 11], "pixel_size_h": 5, "pixel_size_v": 5, "pixelwis": [2, 13], "place": [1, 5, 7, 9, 12], "placehold": [5, 9], "plantagi": 12, "play_interv": 13, "pleas": [4, 5, 6, 7, 10, 11], "plot": [2, 3, 9, 12, 13], "plot_filt": 12, "plt": [2, 3], "plug": 9, "plugin": [2, 5, 6, 7, 9], "pmid": 9, "png": 13, "po": 10, "pock": 9, "point": [1, 3, 5, 7, 9, 13], "pointer": 5, "poisson": [9, 13], "poissonloglikelihoodwithlinearmodelformean": 9, "poorli": 13, "popul": 11, "pose": 3, "posed": 3, "posit": [1, 4, 5, 9, 10, 11, 12, 13], "positron": 9, "possibl": [5, 9, 13], "potenti": 9, "power": [3, 5, 6, 9, 12, 13], "powermethod": 9, "pp": [3, 9], "practic": [9, 11], "pre": [6, 7, 9, 12], "precalcul": 9, "preced": [5, 9], "precondit": 9, "precondition": 6, "preconditon": 9, "predefin": 12, "predict": 9, "prefix": 8, "prepar": 12, "prepend": 9, "present": [5, 9, 13], "preserv": 13, "press": 9, "preval": 13, "previou": [1, 9, 10, 11], "primal": 9, "prime": 9, "principl": 9, "print": [1, 2, 3, 4, 5, 8, 9, 11], "print_interv": 2, "print_metadata": 8, "prior": [7, 9, 13], "prob": 9, "prob_weight": 9, "probabl": 9, "probe": 11, "problem": [6, 7, 9, 10, 13], "problem_": [9, 10], "proceed": 9, "process": [4, 5, 7, 9, 10, 11, 12], "processor": [2, 5, 6, 7, 10], "procur": 13, "produc": 9, "product": [5, 9, 13], "profil": 11, "profit": 13, "program": 9, "programm": 3, "progress": [9, 11], "progresscallback": [2, 9], "proj": 9, "proj_filt": 4, "project": [1, 5, 6, 7, 8, 9, 11, 12], "projection_": 9, "projection_index": 11, "projectionmap": 9, "projectionoper": [2, 5, 9, 10], "projector": [5, 7, 9, 10, 12], "promot": 13, "prompt": 9, "propag": 11, "propagation_dist": 11, "proper": [9, 13], "properti": [5, 6, 9], "proport": [9, 13], "propto": 9, "protect": 4, "protocol": 9, "prototyp": [6, 9], "provabl": 9, "prove": 9, "provid": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "prox": [9, 10], "prox_": 9, "proxim": [9, 10], "proximal_conjug": 9, "pseudo": 13, "psnr": [2, 6, 13], "public": 9, "pull": 4, "purpos": [9, 13], "py": [2, 4, 9], "pydata": 4, "pyplot": [2, 3, 12, 13], "python": [3, 6, 9], "python2": [5, 9], "python3": 2, "python_vers": 4, "pywavelet": 9, "pywt": 11, "q": [9, 11], "qeq0": 10, "qnie": 9, "qquad": 9, "quad": 9, "quadrat": [9, 11], "qualiti": [1, 6, 7], "quality_measur": [2, 13], "qualnam": 5, "quantil": 11, "quantit": 11, "quarter": 11, "question": 9, "quiet": 9, "qx": 9, "r": [3, 5, 6, 9], "r014604": 3, "r_1": 7, "r_2": 7, "rad": 12, "radia": 6, "radian": 5, "radiat": [1, 7], "radiu": 5, "rai": [1, 5, 7, 10, 11], "rainbow": 13, "rais": [2, 4, 5, 9], "ral": 9, "ram": [2, 10, 12], "ramp": 11, "randn": 3, "random": [3, 5, 9, 13], "random_int": 5, "random_nois": 13, "random_permut": 5, "random_with_replac": 9, "random_without_replac": 9, "randomli": 9, "randomsampl": 9, "randomwithoutreplac": 9, "rang": [1, 2, 3, 4, 9, 10, 11, 12, 13], "range_geometri": 9, "range_init": 9, "rangl": [9, 10], "rapid": [6, 9], "rare": 13, "rasch": 9, "rate": 9, "rather": [5, 9, 11], "ratio": [2, 10, 13], "ration": [2, 13], "raw": 6, "rawfilewrit": [6, 8], "ray_direct": 5, "rcond": 3, "rcount": 2, "re": [7, 9, 11], "reach": [1, 3, 7, 9, 10], "read": [1, 6, 11], "read_arrai": 8, "read_as_acquisitiondata": 8, "read_as_imagedata": 8, "read_as_origin": 8, "read_data": 8, "read_dtyp": 8, "read_resc": 8, "read_scale_offset": 8, "read_shap": 8, "read_to": 8, "reader": [1, 6, 7], "readthedoc": 9, "real": [5, 6, 7, 9, 11], "recal": 9, "receiv": 9, "recognis": [7, 9], "recommend": [9, 11, 12], "recon": [2, 4, 6, 7], "reconstruct": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "reconstructor": [4, 6, 7, 10], "record": 9, "recostruct": 3, "recov": 9, "recoveri": 9, "rect": 12, "recurs": [4, 8], "redistribut": 13, "reduc": [1, 5, 6, 7, 11, 12, 13], "reduct": [5, 9], "ref": 9, "refer": [2, 4, 5, 6, 7, 8, 10, 11, 12, 13], "referenc": [4, 5, 10, 11, 12], "reference_imag": 2, "refin": 9, "reflect": [9, 11], "refract": 11, "reg": 3, "reg_param": 3, "region": [1, 6, 11], "regtool": 6, "regular": [3, 9], "regularis": [2, 3, 6, 7, 9], "rel": [9, 10, 11], "relat": [5, 9], "relav": 1, "relax": [9, 11], "relev": [1, 8], "remain": [9, 11], "remaind": 4, "remov": [6, 9], "reorder": [5, 9, 11], "repeat": 9, "repeatedli": 9, "replac": [4, 9, 13], "replic": 9, "repo": 4, "repositori": [6, 7], "repositoryy": 9, "repr": 9, "repres": [5, 8, 9, 11, 13], "reproduc": [6, 13], "request": [4, 5, 8, 11, 12, 13], "requir": [1, 2, 3, 4, 5, 6, 10, 11, 12], "rescal": [8, 10], "rescaled_data": 8, "research": [1, 2, 3, 4, 9], "reserv": 13, "reset": 12, "reshap": [3, 8, 9], "resid": 8, "resolut": [1, 5, 11], "resolution_chart": 13, "resort": 5, "respect": [5, 7, 8, 9, 11, 13], "rest": 9, "restart": 9, "restor": [2, 9], "resul": [5, 9], "result": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13], "ret": [2, 4], "retain": 13, "retriev": 11, "return": [1, 2, 4, 5, 9, 10, 11, 12, 13], "return_al": 9, "return_unit": 11, "reus": 2, "revers": [5, 9], "rewritten": 9, "rgensen": 9, "rich": 3, "richt\u00e1rik": 9, "ride": 11, "right": [1, 5, 8, 9, 11, 13], "rightarrow": 9, "righthand": 3, "ring": 6, "ringremov": 11, "rnt": 3, "rof": 9, "roi": [1, 2, 8, 11], "roi_image_dict": 2, "roi_indices_dict": 2, "roi_mask_dict": 2, "roi_nam": 2, "roi_stor": 2, "roll": [1, 11], "root": [8, 9], "rosenbrock": 9, "rotat": [1, 5, 6, 7, 10], "rotation_axi": 1, "rotation_axis_direct": [1, 5], "rotation_axis_posit": [1, 5], "roughli": 3, "round": 13, "routin": [3, 9, 12], "roux": 9, "row": [1, 4, 5, 7, 8, 9], "row_wise_compat": 9, "royal": [3, 9], "royalsocietypublish": 9, "rst": 4, "rsta": [6, 9], "rtol": 9, "rtsd": 9, "rtype": 9, "rubi": 4, "rule": 9, "run": [2, 3, 4, 5, 9, 10, 11, 12], "runtimewarn": 2, "rvert_": 9, "ryan": 9, "s10107": 9, "s10589": 9, "s10851": 9, "s10915": 9, "s_": 8, "saddl": 9, "safe": 9, "sag": 6, "saga": 6, "sagafunct": 9, "sagfunct": 9, "sai": 9, "salt": 13, "salt_vs_pepp": 13, "same": [2, 4, 5, 8, 9, 10, 11, 13], "sampl": [7, 9, 11], "sampler": 6, "samplerrandom": 9, "sampling_typ": 9, "sapyb": [5, 9], "satisfi": 9, "save": [1, 7, 8, 9, 13], "save_valu": 2, "savefig": 13, "scalar": [2, 5, 9, 10, 13], "scale": [2, 3, 6, 8, 9, 11, 13], "scaledfunct": 9, "scaledoper": 9, "scaleoffset": 8, "scan": [7, 11], "scatter": [1, 7, 9], "schemat": 13, "schmidt": 9, "schonlieb": 9, "sch\u00f6nlieb": 9, "sci": 9, "scienc": [3, 9], "scikit": 13, "scikit_random_nois": 13, "scipi": 9, "screen": 9, "script": 4, "search": [11, 13], "search_rang": 11, "sec": 9, "second": [2, 3, 7, 9, 11, 13], "secondli": 6, "section": [8, 9], "see": [1, 2, 3, 4, 5, 9, 10, 11, 13], "seed": [5, 9, 13], "seismic": 2, "select": [7, 8, 9, 12, 13], "selector": 13, "self": [2, 4, 5, 9, 10, 12], "semi": 9, "sensibl": 8, "sensit": 9, "separ": [2, 4, 9, 13], "sequenc": 9, "sequenti": [5, 9, 13], "serial": 9, "serv": 4, "server": 4, "servic": 13, "set": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12], "set_": 4, "set_angl": [1, 5, 10], "set_channel": [1, 5, 10], "set_data_partition_weight": 9, "set_fft_ord": 12, "set_filt": 12, "set_filter_inplac": 12, "set_gamma_fconj": 9, "set_gamma_g": 9, "set_image_geometri": 12, "set_input": [5, 10, 11, 12], "set_label": [1, 5], "set_norm": 9, "set_num_thread": 9, "set_panel": [1, 5, 10], "set_relaxation_paramet": 9, "set_split_process": [4, 12], "set_step_s": 9, "set_suppress_evalu": 9, "set_up": [8, 9], "setattr": [2, 9], "setlevel": 11, "setter": [6, 9], "sever": [9, 11], "sgd": 9, "sgfunction": 9, "sgn": 9, "sh": 4, "shall": 13, "shape": [4, 5, 8, 9, 13], "share": 9, "sharp": 11, "shepp": 12, "shift": 9, "shinkoper": 9, "short": 9, "shortcut": 8, "shorter": 9, "should": [4, 5, 8, 9, 10, 11, 12, 13], "should_stop": 9, "show": [1, 3, 13], "show1d": 6, "show2d": [2, 6], "show_geometri": [1, 6], "shown": 13, "shrinkag": 9, "siam": 9, "siddon": 10, "side": [3, 11], "sigma": [9, 11], "sigma_": 9, "sigma_1": 9, "sigma_iw_i": 9, "sigma_iw_ix_i": 9, "sigmaestimatecallback": 2, "sign": [5, 9, 13], "signal": [2, 9, 13], "signatur": 9, "signific": [1, 7], "similar": 9, "simpl": [4, 6, 10, 12], "simple_phantom_2d": 13, "simpli": 7, "simplifi": 9, "simul": [6, 7, 9], "simulated_cone_beam_data": [2, 12, 13], "simulated_parallel_beam_data": [5, 9, 12, 13], "simulated_sphere_volum": [2, 13], "simultan": 9, "sinc": 9, "singh": 9, "singl": [1, 2, 5, 7, 8, 9, 11, 12, 13], "singular": [3, 9], "sinogram": 5, "sirf": 9, "sirt": 6, "site": 2, "size": [1, 3, 4, 5, 6, 8, 10, 11, 13], "skimag": [2, 13], "skip": 8, "slanei": 9, "slice": [1, 2, 5, 6, 7, 8, 11, 12], "slice_index": 11, "slice_list": 13, "slice_metadata": 8, "slice_numb": 13, "slicer": [2, 6], "slices_per_chunk": [4, 12], "slider": 13, "slight": 11, "small": [3, 4, 9, 10, 13], "smaller": 1, "smooth": [6, 10], "smoothmixedl21norm": 9, "snapshot": 9, "snapshot_update_interv": 9, "snapshot_update_prob": 9, "so": [3, 4, 7, 9, 11], "soc": 6, "societi": [3, 9], "softwar": [1, 2, 3, 4, 6, 9, 13], "softx": 10, "sol": [9, 10], "solut": [2, 3, 7, 9, 10], "solv": [3, 6, 7, 9, 13], "some": [9, 11], "some_data": 5, "someth": [8, 9], "sop": 9, "sort": 5, "sourc": [1, 5, 6, 7, 8, 9, 10, 11, 12], "source_posit": [1, 5], "source_sel": 8, "space": [1, 9, 10, 11], "spacechannel": 9, "spars": 9, "sparsefinitedifferenceoper": 9, "sparsiti": 6, "spatial": [5, 9, 11], "spdhg": 6, "special": [9, 11, 13], "special_valu": 11, "specialis": 1, "specif": [1, 2, 3, 4, 8, 9, 11, 13], "specifi": [1, 5, 8, 9, 11, 13], "specifii": 1, "speckl": 13, "spectral": [6, 7, 9, 11], "sphere": 13, "sphinx": 4, "split": [5, 9, 12], "springer": [9, 12], "sqrt": [5, 9, 10, 11], "squar": [2, 3, 5, 6, 7, 13], "squared_norm": 5, "stabil": 9, "stabilis": 9, "stabilisation_param": 9, "stabl": [8, 11, 13], "stack": [1, 8, 11], "stackexchang": 9, "stage": 7, "stagger": [5, 9], "standard": [2, 5, 7, 8, 9, 11, 12, 13], "stanford": 9, "start": [4, 5, 8, 9, 11, 13], "stat": 2, "stat_stor": 2, "statement": 11, "static": [5, 8, 9, 11, 13], "stationari": 7, "statist": 12, "statistic_nam": 2, "statistics_dict": 2, "statu": 9, "std": [2, 11], "std_deviat": 2, "stddev": 2, "stearn": 9, "step": [1, 4, 6, 7, 8, 10, 11], "step_siz": 9, "step_size_rul": 9, "stephen": 9, "stepsizemethod": 9, "stepsizerul": 9, "stfc": [1, 3], "still": [3, 11], "sting": 5, "stir": 2, "stochast": [5, 6], "stop": [3, 6, 9, 10, 11], "stopiter": [2, 9], "store": [1, 3, 4, 5, 9], "store_gradi": 9, "store_output": 5, "str": [5, 8, 9, 10, 11, 13], "strategi": 9, "strength": 11, "strict": 13, "strictli": 9, "stride": [5, 9], "string": [5, 8, 9, 10, 11, 12, 13], "stripe": 11, "strong_convexity_const": [9, 10], "strongli": [9, 10], "structur": [6, 9], "style": [4, 11], "sub": 10, "subclass": [5, 8, 9], "subdivid": 1, "subject": 9, "submodul": 4, "subplot": 13, "subproblem": 9, "subsequ": 9, "subset": [5, 9], "substitut": [11, 13], "subtract": [5, 9], "suffici": [1, 7, 9], "suit": 7, "suitabl": [4, 5, 9, 11], "sum": [5, 9], "sum_": 9, "sumfunct": 9, "sumoper": 9, "sumscalarfunct": 9, "sup": [9, 10], "super": [2, 9], "suppli": 11, "support": [3, 9, 11], "suppos": 9, "suppress": [4, 9, 11, 12, 13], "suppress_evalu": 9, "sure": [4, 9], "svd": 3, "svrg": 9, "svrgfunction": 9, "swap": 9, "symmetr": [9, 11], "symmetris": 9, "symmetrisedgradientoper": 9, "synchrotron": [1, 7], "synchrotron_parallel_beam_data": 13, "syntax": 4, "system": [1, 5, 6, 7, 9], "system_descript": 4, "t": [3, 5, 8, 9, 11, 12], "t026677": 3, "t_": 9, "ta": 9, "tabl": 9, "take": [2, 5, 8, 9, 11, 12, 13], "taken": 9, "target": [4, 11], "task": 10, "tau": [9, 10], "tau_": 9, "team": 13, "teboul": 9, "techniqu": [7, 9], "templat": 4, "tempor": [9, 10], "temporari": 12, "temporarili": 13, "term": [7, 9, 10], "termin": 9, "test": [3, 4, 6, 7, 9], "testalgo": 9, "testdata": 13, "text": [4, 8, 9], "textbf": 9, "textprogresscallback": [2, 9], "tgv": 10, "th": [9, 13], "than": [5, 8, 9, 10, 11, 12], "thank": [3, 11], "thei": [1, 4, 5, 9, 11, 13], "them": [1, 8, 9, 13], "theme": 4, "theoret": [9, 11], "theori": [9, 13], "therefor": [5, 9, 10, 11], "theta": 9, "theta_": 9, "thi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "thick": 11, "thieleman": 9, "think": 3, "thoma": 9, "those": [5, 9], "though": 1, "thread": [5, 9], "three": [7, 9], "threshold": [9, 11], "threshold_factor": 11, "threshold_valu": 11, "through": [8, 9, 13], "thu": 9, "tiff": [1, 6, 13], "tiffstackread": [6, 8], "tiffwrit": [6, 8], "tigr": [2, 5, 6, 7, 11, 12], "tikhonov": [3, 7, 9], "tikonov": 3, "tild": [7, 9], "tilt": 1, "time": [3, 4, 7, 9, 12, 13], "tip": 9, "titl": [2, 3, 13], "tmi": 9, "tmp_mse": 2, "tmp_nexu": 8, "tnv": 10, "tofil": 8, "togeth": [8, 11], "toggl": 9, "toler": [3, 9, 10, 11], "tomograph": [3, 5, 6, 9], "tomographi": [1, 3, 5, 6, 9, 12], "tomographicimag": [3, 4, 6, 9], "tomophantom": [6, 7], "toni": 9, "too": [9, 12], "tool": [3, 7], "toolbox": [10, 12], "toolkit": [7, 10], "top": [2, 5, 13], "top_psnr": 2, "tort": 13, "tot_slic": 4, "total": [4, 5, 6], "totalvari": [2, 9, 10], "tqdm": [4, 9], "tqdm_asyncio": 9, "tqdm_class": 9, "tqdm_kwarg": 9, "track": 9, "trade": 9, "trajectori": [1, 7, 10], "tran": [6, 9], "transact": [3, 9], "transform": [9, 12], "translat": [3, 9], "translatefunct": 9, "transmiss": [6, 7], "transmissionabsorptionconvert": [2, 11], "transpos": [8, 9], "treat": 9, "trigger": 9, "trivial": 6, "true": [2, 3, 5, 8, 9, 10, 11, 12, 13], "true_adjoint": 9, "truedivis": 9, "truth": [2, 3, 13], "try": 5, "tune": [11, 12], "tupl": [5, 8, 9, 11, 13], "turn": [1, 9], "turner": 9, "tutori": 6, "tv": [2, 9, 10], "tw": 9, "tweak": 1, "twice": 3, "two": [2, 3, 5, 9, 11, 12, 13], "twod": 2, "twx": 9, "twyman": 9, "tx": 9, "txm": 8, "txrm": 8, "txt": 9, "type": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13], "typeerror": 9, "typic": [1, 7, 9], "u": [3, 5, 7, 9, 10], "u2": 8, "uci": 9, "uint16": 8, "uint8": 8, "uk": 3, "ukri": [1, 3], "um": 11, "un": 3, "unari": [5, 9], "unary_oper": [5, 9], "unbias": 9, "unbin": 11, "unchang": 9, "uncompress": 8, "under": [1, 2, 3, 4, 9, 11], "underbrac": 9, "underscor": 4, "underset": [7, 9, 10], "understand": 4, "unexpect": [9, 13], "uniform": [5, 9, 13], "uniformli": 9, "uniqu": [5, 13], "unit": [1, 2, 3, 4, 5, 9, 11], "unit16": 8, "univers": [1, 2, 3, 4], "unknown": [7, 9], "unless": [1, 2, 3, 4, 11], "unmask": 11, "unmodifi": 9, "unpack": 8, "unreli": 11, "unsign": [8, 13], "until": 9, "unusu": 1, "up": [1, 2, 3, 6, 8, 9, 10, 12, 13], "updat": [4, 9, 11, 12], "update_objctive_interv": 3, "update_object": 9, "update_objective_interv": [2, 3, 9], "update_step_s": 9, "upper": [2, 9, 11, 13], "upto": 9, "url": [4, 9], "us": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13], "usag": [9, 10, 11], "user": [4, 5, 7, 9, 11, 12], "utf": [1, 2, 3], "util": [1, 2, 5, 6, 7, 12], "utilis": 9, "v": [9, 13], "v1": 9, "v117": 9, "v2": 9, "v_1": 9, "v_2": 9, "vai": 9, "valid": [5, 9, 11, 13], "valu": [2, 3, 5, 8, 9, 10, 11, 12, 13], "valueerror": [4, 9], "val\u00e9ri": 9, "var": 13, "vararg": 9, "vari": 9, "variabl": 9, "varianc": [6, 13], "variat": 6, "variou": 13, "vector": [1, 3, 5, 9, 11], "vectordata": [3, 6], "verb": 5, "verbos": [4, 9, 12], "verbose_head": 9, "verbose_output": 9, "veri": 9, "versatil": [3, 6, 9], "version": [1, 2, 4, 6, 9, 10], "vertic": [1, 2, 5, 8, 9, 11], "vh": 3, "via": [3, 4, 9], "view": [1, 4, 5, 7, 13], "view_dist": 13, "vision": 9, "visualis": [2, 6], "vmatrix": [7, 9], "volum": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12], "voxel": [1, 2, 9, 10], "voxel_num": 1, "voxel_num_i": [1, 5], "voxel_num_x": [1, 5], "voxel_num_z": [1, 5], "voxel_s": 1, "voxel_size_i": [1, 5], "voxel_size_x": [1, 5, 10], "voxel_size_z": [1, 5], "vstack": 3, "w": [3, 5, 9, 11], "w_i": 9, "wa": [3, 9, 13], "wai": [4, 5, 9, 13], "waj": 9, "want": [1, 5, 9, 11], "warm": 9, "warm_start": 9, "warm_start_approximate_gradi": 9, "warmstart": 9, "warn": [2, 5, 9, 11], "warr": 9, "warranti": [1, 2, 3, 4, 8, 13], "wavelength": 11, "wavelet": [9, 11], "waveletoper": 6, "we": [1, 2, 3, 5, 7, 8, 9, 10, 13], "weak": 9, "web": [4, 9], "websit": 6, "weight": [9, 10], "weightedl1norm": 9, "weightedl2normsquar": 9, "well": [3, 6, 7, 9], "were": 11, "wether": 9, "what": [4, 5, 8, 9], "when": [1, 4, 7, 8, 9, 10, 11, 13], "where": [1, 2, 3, 5, 7, 9, 10, 11, 13], "wherea": 9, "whether": [5, 8, 9, 10, 13], "which": [1, 3, 5, 7, 8, 9, 11, 13], "whichev": [5, 12], "while": [6, 9], "white": 8, "white_level": 11, "whole": [2, 5, 9], "whose": 3, "widget": 13, "width": [11, 12, 13], "wiki": 9, "wikipedia": 9, "william": 9, "window": 11, "wise": [5, 9], "wish": 9, "wither": 9, "within": 4, "without": [1, 2, 3, 4, 8, 9, 11, 13], "wk_x": 11, "wk_y": 11, "wname": [9, 11], "won": 9, "word": 4, "work": [4, 5, 7, 8, 9, 11], "would": [3, 8, 9], "wrap": [9, 11], "wright": 9, "write": [1, 2, 3, 4, 6, 7, 9], "writer": [6, 7], "written": [7, 8, 9, 10, 13], "www": [1, 2, 3, 4, 9], "wx": 9, "x": [1, 2, 3, 5, 6, 7, 9, 10, 11, 13], "x0": 1, "x1024": 1, "x2048": 1, "x4096": 1, "x_": [9, 10], "x_0": 9, "x_1": 9, "x_axis_label": 13, "x_i": 9, "x_k": 9, "x_n": 9, "xcorrel": 11, "xiaoqun": 9, "xin": 9, "xlabel": 2, "xlq": 3, "xshape": 9, "xtekct": 8, "xtik": 3, "y": [1, 2, 5, 9, 11, 13], "y0": 1, "y1024": 1, "y2048": 1, "y4096": 1, "y_": 9, "y_axis_label": 13, "yan": 9, "yaw": 1, "year": 4, "yet": 9, "yield": [9, 12], "ylabel": 2, "yml": 4, "york": 9, "you": [1, 2, 3, 4, 6, 8, 9, 11], "your": [1, 4, 9, 10, 11, 12], "yscale": 2, "yurii": 9, "yyyi": 4, "z": [1, 5, 9, 10, 11, 13], "z0": 1, "z1024": 1, "z2048": 1, "z4096": 1, "zeiss": [1, 6], "zeissdataread": [6, 8], "zero": [3, 5, 9, 11], "zero_data": 3, "zerofunct": [2, 9], "zerooper": 9, "zhang": 9, "zhu": 9, "zip": 9, "\u00f6": 9, "\u00fc": 9}, "titles": ["Tutorials", "A detailed look at CIL geometry", "CIL Callback demonstration", "1D inverse problem demo using deriv2 from regtools", "Developers\u2019 Guide", "Framework", "Welcome to CIL\u2019s documentation!", "Introduction", "Read/ write AcquisitionData and ImageData", "Optimisation framework", "CIL Plugins", "Processors", "Recon", "Utilities"], "titleterms": {"": 6, "0": 3, "1": 3, "1d": [3, 13], "23": 3, "2d": 13, "A": [1, 2, 13], "Of": 11, "The": 1, "absorpt": 11, "acquisitiondata": [5, 8], "acquisitiongeometri": [1, 5], "algorithm": 9, "an": 1, "analyt": 12, "approxim": [2, 9], "astra": 10, "base": 9, "beam": [1, 7, 12], "behaviour": 2, "binner": 11, "block": [7, 9], "blockdatacontain": [5, 9], "blockgeometri": 5, "box": 9, "build": 4, "calcul": 2, "callback": [2, 9], "ccpi": 10, "centr": 11, "cgl": 9, "channel": 7, "cil": [1, 2, 3, 4, 6, 10], "cite": 6, "class": 9, "complex": [1, 2], "composit": 9, "cone": [1, 7, 12], "cone2d": 5, "cone3d": 5, "configur": 5, "contact": 6, "contain": 5, "content": 6, "contribut": 4, "convent": 4, "convert": 11, "corrector": 11, "creat": 1, "creator": 4, "ct": [7, 13], "custom": [1, 2], "data": [2, 5, 7, 11, 13], "datacontain": 5, "dataprocessor": 5, "dataset": 13, "default": 2, "demo": [3, 6], "demonstr": 2, "deriv2": 3, "descent": 9, "detail": 1, "determinist": 9, "develop": 4, "diamond": 13, "discrep": 2, "displai": 13, "docstr": 4, "document": [4, 6], "each": 2, "earli": 2, "exampl": [2, 4, 5, 6, 8, 9], "fan": [1, 7], "fanbeam": 5, "fbp": [10, 12], "fdk": 12, "file": 8, "fista": 9, "framework": [5, 7, 9], "from": [3, 4, 11, 13], "function": [9, 10], "galleri": 4, "gd": 9, "gener": 11, "geometri": [1, 5, 7, 12, 13], "gradient": 9, "gradientoper": 9, "guid": 4, "guidelin": 4, "hdf5": 8, "imag": [2, 13], "imagedata": [5, 8], "imagegeometri": [1, 5], "index": 13, "indic": 9, "interact": 13, "interest": 2, "introduct": 7, "invers": 3, "islic": 13, "ista": 9, "iter": 2, "kullbackleibl": 9, "kwarg": 9, "l1": 9, "l11": 9, "l2": 9, "l21": 9, "label": 5, "ladmm": 9, "least": 9, "light": 13, "link": 13, "link_islic": 13, "load": 2, "local": 4, "look": 1, "loopless": 9, "manipul": 11, "mask": 11, "memori": 9, "method": [4, 9], "metric": [2, 13], "mix": 9, "more": [1, 2], "multi": 7, "new": 4, "nexu": 8, "nikon": 8, "nois": 2, "norm": 9, "normalis": 11, "note": [1, 8, 9], "notebook": 4, "object": [4, 13], "offset": 1, "oper": [9, 10], "optimis": 9, "other": [2, 4, 10], "padder": 11, "paganin": 11, "parallel": [1, 7, 12], "parallel2d": 5, "parallel3d": 5, "paramet": [8, 9], "partition": 5, "pd3o": 9, "pdhg": 9, "plugin": 10, "pre": 11, "precondition": 9, "problem": 3, "processor": 11, "project": 10, "properti": 4, "provid": 2, "qualiti": 13, "raw": 8, "read": 8, "reader": 8, "recon": 12, "reconstruct": 12, "reconstructor": 12, "reduc": 9, "refer": 9, "region": 2, "regtool": 3, "regularis": 10, "remov": 11, "render": 4, "requir": 9, "return": 8, "ring": 11, "rotat": 11, "sag": 9, "saga": 9, "sampler": 9, "set": 13, "setter": 4, "show1d": 13, "show2d": 13, "show_geometri": 13, "simpl": [1, 9], "simul": 13, "sirt": 9, "size": 9, "slice": 13, "slicer": 11, "smooth": 9, "sourc": [4, 13], "sparsiti": 9, "spdhg": 9, "squar": 9, "step": 9, "stochast": 9, "stop": 2, "structur": 1, "system": 13, "tabl": 6, "test": 13, "thi": 6, "tiff": 8, "tigr": 10, "todo": 9, "tomophantom": 10, "total": [9, 10], "transmiss": 11, "trivial": 9, "tutori": 0, "us": [3, 5], "util": [8, 9, 13], "varianc": 9, "variat": [9, 10], "vectordata": 5, "version": 3, "visualis": 13, "volum": 13, "waveletoper": 9, "welcom": 6, "work": 6, "write": 8, "writer": 8, "zeiss": 8}})